<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rhino.Mocks.3.6.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Castle.Core.Interceptor.Fakes.StubIInterceptor">
            <summary>Stub type of Castle.Core.Interceptor.IInterceptor</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInterceptor.#ctor">
            <summary>Initializes a new instance of type StubIInterceptor</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInterceptor.rm::Castle#Core#Interceptor#IInterceptor#Intercept(Castle.Core.Interceptor.IInvocation)">
            <summary>Sets the stub of IInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInterceptor.InterceptIInvocation">
            <summary>Sets the stub of IInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="T:Castle.Core.Interceptor.Fakes.StubIInterceptorSelector">
            <summary>Stub type of Castle.Core.Interceptor.IInterceptorSelector</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInterceptorSelector.#ctor">
            <summary>Initializes a new instance of type StubIInterceptorSelector</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInterceptorSelector.rm::Castle#Core#Interceptor#IInterceptorSelector#SelectInterceptors(System.Type,System.Reflection.MethodInfo,Castle.Core.Interceptor.IInterceptor[])">
            <summary>Sets the stub of IInterceptorSelector.SelectInterceptors(Type type, MethodInfo method, IInterceptor[] interceptors)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInterceptorSelector.SelectInterceptorsTypeMethodInfoIInterceptorArray">
            <summary>Sets the stub of IInterceptorSelector.SelectInterceptors(Type type, MethodInfo method, IInterceptor[] interceptors)</summary>
        </member>
        <member name="T:Castle.Core.Interceptor.Fakes.StubIInvocation">
            <summary>Stub type of Castle.Core.Interceptor.IInvocation</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.#ctor">
            <summary>Initializes a new instance of type StubIInvocation</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.ArgumentsGet">
            <summary>Sets the stub of IInvocation.get_Arguments()</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.AttachBackingFieldToReturnValue">
            <summary>Attaches delegates to emulate StubIInvocation.ReturnValue as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#GetArgumentValue(System.Int32)">
            <summary>Sets the stub of IInvocation.GetArgumentValue(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#GetConcreteMethod">
            <summary>Sets the stub of IInvocation.GetConcreteMethod()</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#GetConcreteMethodInvocationTarget">
            <summary>Sets the stub of IInvocation.GetConcreteMethodInvocationTarget()</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#Proceed">
            <summary>Sets the stub of IInvocation.Proceed()</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#SetArgumentValue(System.Int32,System.Object)">
            <summary>Sets the stub of IInvocation.SetArgumentValue(Int32 index, Object value)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.GenericArgumentsGet">
            <summary>Sets the stub of IInvocation.get_GenericArguments()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.GetArgumentValueInt32">
            <summary>Sets the stub of IInvocation.GetArgumentValue(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.GetConcreteMethod">
            <summary>Sets the stub of IInvocation.GetConcreteMethod()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.GetConcreteMethodInvocationTarget">
            <summary>Sets the stub of IInvocation.GetConcreteMethodInvocationTarget()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.InvocationTargetGet">
            <summary>Sets the stub of IInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.MethodGet">
            <summary>Sets the stub of IInvocation.get_Method()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.MethodInvocationTargetGet">
            <summary>Sets the stub of IInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.Proceed">
            <summary>Sets the stub of IInvocation.Proceed()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.ProxyGet">
            <summary>Sets the stub of IInvocation.get_Proxy()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.ReturnValueGet">
            <summary>Sets the stub of IInvocation.get_ReturnValue()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.ReturnValueSetObject">
            <summary>Sets the stub of IInvocation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.SetArgumentValueInt32Object">
            <summary>Sets the stub of IInvocation.SetArgumentValue(Int32 index, Object value)</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIInvocation.TargetTypeGet">
            <summary>Sets the stub of IInvocation.get_TargetType()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#Arguments">
            <summary>Sets the stub of IInvocation.get_Arguments()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#GenericArguments">
            <summary>Sets the stub of IInvocation.get_GenericArguments()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#InvocationTarget">
            <summary>Sets the stub of IInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#Method">
            <summary>Sets the stub of IInvocation.get_Method()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#MethodInvocationTarget">
            <summary>Sets the stub of IInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#Proxy">
            <summary>Sets the stub of IInvocation.get_Proxy()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#ReturnValue">
            <summary>Sets the stub of IInvocation.get_ReturnValue()</summary>
        </member>
        <member name="P:Castle.Core.Interceptor.Fakes.StubIInvocation.rm::Castle#Core#Interceptor#IInvocation#TargetType">
            <summary>Sets the stub of IInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.Core.Interceptor.Fakes.StubIProxyTargetAccessor">
            <summary>Stub type of Castle.Core.Interceptor.IProxyTargetAccessor</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIProxyTargetAccessor.#ctor">
            <summary>Initializes a new instance of type StubIProxyTargetAccessor</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIProxyTargetAccessor.rm::Castle#Core#Interceptor#IProxyTargetAccessor#DynProxyGetTarget">
            <summary>Sets the stub of IProxyTargetAccessor.DynProxyGetTarget()</summary>
        </member>
        <member name="M:Castle.Core.Interceptor.Fakes.StubIProxyTargetAccessor.rm::Castle#Core#Interceptor#IProxyTargetAccessor#GetInterceptors">
            <summary>Sets the stub of IProxyTargetAccessor.GetInterceptors()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIProxyTargetAccessor.DynProxyGetTarget">
            <summary>Sets the stub of IProxyTargetAccessor.DynProxyGetTarget()</summary>
        </member>
        <member name="F:Castle.Core.Interceptor.Fakes.StubIProxyTargetAccessor.GetInterceptors">
            <summary>Sets the stub of IProxyTargetAccessor.GetInterceptors()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimAbstractInvocation">
            <summary>Shim type of Castle.DynamicProxy.AbstractInvocation</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.#ctor(Castle.DynamicProxy.AbstractInvocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.Bind(Castle.Core.Interceptor.IInvocation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.ArgumentsGet">
            <summary>Sets the shim of AbstractInvocation.get_Arguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.ConstructorObjectObjectIInterceptorArrayTypeMethodInfoMethodInfoObjectArray">
            <summary>Sets the shim of AbstractInvocation.AbstractInvocation(Object target, Object proxy, IInterceptor[] interceptors, Type targetType, MethodInfo targetMethod, MethodInfo interfaceMethod, Object[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.ConstructorObjectObjectIInterceptorArrayTypeMethodInfoMethodInfoObjectArrayIInterceptorSelectorIInterceptorArrayRef">
            <summary>Sets the shim of AbstractInvocation.AbstractInvocation(Object target, Object proxy, IInterceptor[] interceptors, Type targetType, MethodInfo targetMethod, MethodInfo interfaceMethod, Object[] arguments, IInterceptorSelector selector, IInterceptor[]&amp; methodInterceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.EnsureClosedMethodMethodInfo">
            <summary>Sets the shim of AbstractInvocation.EnsureClosedMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.EnsureValidTarget">
            <summary>Sets the shim of AbstractInvocation.EnsureValidTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.GenericArgumentsGet">
            <summary>Sets the shim of AbstractInvocation.get_GenericArguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.GetArgumentValueInt32">
            <summary>Sets the shim of AbstractInvocation.GetArgumentValue(Int32 index)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.GetConcreteMethod">
            <summary>Sets the shim of AbstractInvocation.GetConcreteMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.GetConcreteMethodInvocationTarget">
            <summary>Sets the shim of AbstractInvocation.GetConcreteMethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of AbstractInvocation.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.InvocationTargetGet">
            <summary>Sets the shim of AbstractInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.MethodGet">
            <summary>Sets the shim of AbstractInvocation.get_Method()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.MethodInvocationTargetGet">
            <summary>Sets the shim of AbstractInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.Proceed">
            <summary>Sets the shim of AbstractInvocation.Proceed()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.ProxyGet">
            <summary>Sets the shim of AbstractInvocation.get_Proxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.ReturnValueGet">
            <summary>Sets the shim of AbstractInvocation.get_ReturnValue()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.ReturnValueSetObject">
            <summary>Sets the shim of AbstractInvocation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.SelectMethodInterceptorsIInterceptorSelectorIInterceptorArray">
            <summary>Sets the shim of AbstractInvocation.SelectMethodInterceptors(IInterceptorSelector selector, IInterceptor[] methodInterceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.SetArgumentValueInt32Object">
            <summary>Sets the shim of AbstractInvocation.SetArgumentValue(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.SetGenericMethodArgumentsTypeArray">
            <summary>Sets the shim of AbstractInvocation.SetGenericMethodArguments(Type[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.TargetTypeGet">
            <summary>Sets the shim of AbstractInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.ArgumentsGet">
            <summary>Sets the shim of AbstractInvocation.get_Arguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.EnsureClosedMethodMethodInfo">
            <summary>Sets the shim of AbstractInvocation.EnsureClosedMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.EnsureValidTarget">
            <summary>Sets the shim of AbstractInvocation.EnsureValidTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.GenericArgumentsGet">
            <summary>Sets the shim of AbstractInvocation.get_GenericArguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.GetArgumentValueInt32">
            <summary>Sets the shim of AbstractInvocation.GetArgumentValue(Int32 index)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.GetConcreteMethod">
            <summary>Sets the shim of AbstractInvocation.GetConcreteMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.GetConcreteMethodInvocationTarget">
            <summary>Sets the shim of AbstractInvocation.GetConcreteMethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of AbstractInvocation.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.InvocationTargetGet">
            <summary>Sets the shim of AbstractInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.MethodGet">
            <summary>Sets the shim of AbstractInvocation.get_Method()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.MethodInvocationTargetGet">
            <summary>Sets the shim of AbstractInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.Proceed">
            <summary>Sets the shim of AbstractInvocation.Proceed()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.ProxyGet">
            <summary>Sets the shim of AbstractInvocation.get_Proxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.ReturnValueGet">
            <summary>Sets the shim of AbstractInvocation.get_ReturnValue()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.ReturnValueSetObject">
            <summary>Sets the shim of AbstractInvocation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.SelectMethodInterceptorsIInterceptorSelectorIInterceptorArray">
            <summary>Sets the shim of AbstractInvocation.SelectMethodInterceptors(IInterceptorSelector selector, IInterceptor[] methodInterceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.SetArgumentValueInt32Object">
            <summary>Sets the shim of AbstractInvocation.SetArgumentValue(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.SetGenericMethodArgumentsTypeArray">
            <summary>Sets the shim of AbstractInvocation.SetGenericMethodArguments(Type[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.TargetTypeGet">
            <summary>Sets the shim of AbstractInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubAbstractInvocation">
            <summary>Stub type of Castle.DynamicProxy.AbstractInvocation</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAbstractInvocation.#ctor(System.Object,System.Object,Castle.Core.Interceptor.IInterceptor[],System.Type,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAbstractInvocation.#ctor(System.Object,System.Object,Castle.Core.Interceptor.IInterceptor[],System.Type,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Object[],Castle.Core.Interceptor.IInterceptorSelector,Castle.Core.Interceptor.IInterceptor[]@)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAbstractInvocation.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractInvocation</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAbstractInvocation.InvokeMethodOnTarget">
            <summary>Sets the stub of AbstractInvocation.InvokeMethodOnTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubAbstractInvocation.InvokeMethodOnTarget01">
            <summary>Sets the stub of AbstractInvocation.InvokeMethodOnTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubAbstractInvocation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubAbstractInvocation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubAbstractInvocation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating">
            <summary>Shim type of Castle.DynamicProxy.Generators.AttributesToAvoidReplicating</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.AddOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of AttributesToAvoidReplicating.Add()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.AddType">
            <summary>Sets the shim of AttributesToAvoidReplicating.Add(Type attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.ContainsType">
            <summary>Sets the shim of AttributesToAvoidReplicating.Contains(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.StaticConstructor">
            <summary>Sets the shim of AttributesToAvoidReplicating.AttributesToAvoidReplicating()</summary>
        </member>
        <member name="T:Global.Fakes.Shim__ProtectAttribute">
            <summary>Shim type of __ProtectAttribute</summary>
        </member>
        <member name="M:Global.Fakes.Shim__ProtectAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Global.Fakes.Shim__ProtectAttribute.#ctor(__ProtectAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Global.Fakes.Shim__ProtectAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.Shim__ProtectAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shim__ProtectAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.Shim__ProtectAttribute.Constructor">
            <summary>Sets the shim of __ProtectAttribute.__ProtectAttribute()</summary>
        </member>
        <member name="T:Global.Fakes.Shim__ProtectAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Global.Fakes.Stub__ProtectAttribute">
            <summary>Stub type of __ProtectAttribute</summary>
        </member>
        <member name="M:Global.Fakes.Stub__ProtectAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Global.Fakes.Stub__ProtectAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Global.Fakes.Stub__ProtectAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Global.Fakes.Stub__ProtectAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Global.Fakes.Stub__ProtectAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Global.Fakes.Stub__ProtectAttribute.InitializeStub">
            <summary>Initializes a new instance of type Stub__ProtectAttribute</summary>
        </member>
        <member name="M:Global.Fakes.Stub__ProtectAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Global.Fakes.Stub__ProtectAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Global.Fakes.Stub__ProtectAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Global.Fakes.Stub__ProtectAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Global.Fakes.Stub__ProtectAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Global.Fakes.Stub__ProtectAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Global.Fakes.Stub__ProtectAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Global.Fakes.Stub__ProtectAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Global.Fakes.Stub__ProtectAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimAbstractConstraint">
            <summary>Shim type of Rhino.Mocks.Constraints.AbstractConstraint</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimAbstractConstraint.#ctor(Rhino.Mocks.Constraints.AbstractConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimAbstractConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimAbstractConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAbstractConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAbstractConstraint.BitwiseAndOpAbstractConstraintAbstractConstraint">
            <summary>Sets the shim of AbstractConstraint.op_BitwiseAnd(AbstractConstraint c1, AbstractConstraint c2)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAbstractConstraint.BitwiseOrOpAbstractConstraintAbstractConstraint">
            <summary>Sets the shim of AbstractConstraint.op_BitwiseOr(AbstractConstraint c1, AbstractConstraint c2)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAbstractConstraint.Constructor">
            <summary>Sets the shim of AbstractConstraint.AbstractConstraint()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAbstractConstraint.FalseOpAbstractConstraint">
            <summary>Sets the shim of AbstractConstraint.op_False(AbstractConstraint c)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAbstractConstraint.LogicalNotOpAbstractConstraint">
            <summary>Sets the shim of AbstractConstraint.op_LogicalNot(AbstractConstraint c1)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAbstractConstraint.TrueOpAbstractConstraint">
            <summary>Sets the shim of AbstractConstraint.op_True(AbstractConstraint c)</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimAbstractConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimAnd">
            <summary>Shim type of Rhino.Mocks.Constraints.And</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimAnd.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimAnd.#ctor(Rhino.Mocks.Constraints.And)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimAnd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimAnd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAnd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAnd.ConstructorAbstractConstraintAbstractConstraint">
            <summary>Sets the shim of And.And(AbstractConstraint c1, AbstractConstraint c2)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAnd.EvalObject">
            <summary>Sets the shim of And.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAnd.MessageGet">
            <summary>Sets the shim of And.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimAnd.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAnd.AllInstances.EvalObject">
            <summary>Sets the shim of And.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAnd.AllInstances.MessageGet">
            <summary>Sets the shim of And.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimAnything">
            <summary>Shim type of Rhino.Mocks.Constraints.Anything</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimAnything.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimAnything.#ctor(Rhino.Mocks.Constraints.Anything)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimAnything.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimAnything.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAnything.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAnything.Constructor">
            <summary>Sets the shim of Anything.Anything()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAnything.EvalObject">
            <summary>Sets the shim of Anything.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAnything.MessageGet">
            <summary>Sets the shim of Anything.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimAnything.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAnything.AllInstances.EvalObject">
            <summary>Sets the shim of Anything.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimAnything.AllInstances.MessageGet">
            <summary>Sets the shim of Anything.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimCollectionCount">
            <summary>Shim type of Rhino.Mocks.Constraints.CollectionCount</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimCollectionCount.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimCollectionCount.#ctor(Rhino.Mocks.Constraints.CollectionCount)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimCollectionCount.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimCollectionCount.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimCollectionCount.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimCollectionCount.ConstructorAbstractConstraint">
            <summary>Sets the shim of CollectionCount.CollectionCount(AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimCollectionCount.EvalObject">
            <summary>Sets the shim of CollectionCount.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimCollectionCount.MessageGet">
            <summary>Sets the shim of CollectionCount.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimCollectionCount.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimCollectionCount.AllInstances.EvalObject">
            <summary>Sets the shim of CollectionCount.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimCollectionCount.AllInstances.MessageGet">
            <summary>Sets the shim of CollectionCount.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimCollectionEqual">
            <summary>Shim type of Rhino.Mocks.Constraints.CollectionEqual</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimCollectionEqual.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimCollectionEqual.#ctor(Rhino.Mocks.Constraints.CollectionEqual)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimCollectionEqual.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimCollectionEqual.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimCollectionEqual.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimCollectionEqual.ConstructorIEnumerable">
            <summary>Sets the shim of CollectionEqual.CollectionEqual(IEnumerable collection)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimCollectionEqual.EvalObject">
            <summary>Sets the shim of CollectionEqual.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimCollectionEqual.MessageGet">
            <summary>Sets the shim of CollectionEqual.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimCollectionEqual.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimCollectionEqual.AllInstances.EvalObject">
            <summary>Sets the shim of CollectionEqual.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimCollectionEqual.AllInstances.MessageGet">
            <summary>Sets the shim of CollectionEqual.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimComparingConstraint">
            <summary>Shim type of Rhino.Mocks.Constraints.ComparingConstraint</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimComparingConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimComparingConstraint.#ctor(Rhino.Mocks.Constraints.ComparingConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimComparingConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimComparingConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimComparingConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimComparingConstraint.ConstructorIComparableBooleanBoolean">
            <summary>Sets the shim of ComparingConstraint.ComparingConstraint(IComparable compareTo, Boolean largerThan, Boolean andEqual)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimComparingConstraint.EvalObject">
            <summary>Sets the shim of ComparingConstraint.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimComparingConstraint.MessageGet">
            <summary>Sets the shim of ComparingConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimComparingConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimComparingConstraint.AllInstances.EvalObject">
            <summary>Sets the shim of ComparingConstraint.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimComparingConstraint.AllInstances.MessageGet">
            <summary>Sets the shim of ComparingConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimContains">
            <summary>Shim type of Rhino.Mocks.Constraints.Contains</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimContains.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimContains.#ctor(Rhino.Mocks.Constraints.Contains)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimContains.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimContains.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimContains.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimContains.ConstructorString">
            <summary>Sets the shim of Contains.Contains(String innerString)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimContains.EvalObject">
            <summary>Sets the shim of Contains.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimContains.MessageGet">
            <summary>Sets the shim of Contains.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimContains.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimContains.AllInstances.EvalObject">
            <summary>Sets the shim of Contains.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimContains.AllInstances.MessageGet">
            <summary>Sets the shim of Contains.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimContainsAll">
            <summary>Shim type of Rhino.Mocks.Constraints.ContainsAll</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimContainsAll.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimContainsAll.#ctor(Rhino.Mocks.Constraints.ContainsAll)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimContainsAll.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimContainsAll.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimContainsAll.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimContainsAll.ConstructorIEnumerable">
            <summary>Sets the shim of ContainsAll.ContainsAll(IEnumerable these)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimContainsAll.EvalObject">
            <summary>Sets the shim of ContainsAll.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimContainsAll.MessageGet">
            <summary>Sets the shim of ContainsAll.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimContainsAll.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimContainsAll.AllInstances.EvalObject">
            <summary>Sets the shim of ContainsAll.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimContainsAll.AllInstances.MessageGet">
            <summary>Sets the shim of ContainsAll.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimEndsWith">
            <summary>Shim type of Rhino.Mocks.Constraints.EndsWith</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimEndsWith.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimEndsWith.#ctor(Rhino.Mocks.Constraints.EndsWith)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimEndsWith.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimEndsWith.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimEndsWith.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimEndsWith.ConstructorString">
            <summary>Sets the shim of EndsWith.EndsWith(String end)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimEndsWith.EvalObject">
            <summary>Sets the shim of EndsWith.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimEndsWith.MessageGet">
            <summary>Sets the shim of EndsWith.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimEndsWith.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimEndsWith.AllInstances.EvalObject">
            <summary>Sets the shim of EndsWith.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimEndsWith.AllInstances.MessageGet">
            <summary>Sets the shim of EndsWith.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimEqual">
            <summary>Shim type of Rhino.Mocks.Constraints.Equal</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimEqual.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimEqual.#ctor(Rhino.Mocks.Constraints.Equal)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimEqual.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimEqual.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimEqual.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimEqual.ConstructorObject">
            <summary>Sets the shim of Equal.Equal(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimEqual.EvalObject">
            <summary>Sets the shim of Equal.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimEqual.MessageGet">
            <summary>Sets the shim of Equal.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimEqual.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimEqual.AllInstances.EvalObject">
            <summary>Sets the shim of Equal.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimEqual.AllInstances.MessageGet">
            <summary>Sets the shim of Equal.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimIs">
            <summary>Shim type of Rhino.Mocks.Constraints.Is</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIs.MatchingOf1PredicateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Predicate{``0},Rhino.Mocks.Constraints.AbstractConstraint})">
            <summary>Sets the shim of Is.Matching(Predicate`1&lt;!!0&gt; predicate)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIs.TypeOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Constraints.AbstractConstraint})">
            <summary>Sets the shim of Is.TypeOf()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.Anything">
            <summary>Sets the shim of Is.Anything()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.EqualObject">
            <summary>Sets the shim of Is.Equal(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.GreaterThanIComparable">
            <summary>Sets the shim of Is.GreaterThan(IComparable objToCompare)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.GreaterThanOrEqualIComparable">
            <summary>Sets the shim of Is.GreaterThanOrEqual(IComparable objToCompare)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.LessThanIComparable">
            <summary>Sets the shim of Is.LessThan(IComparable objToCompare)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.LessThanOrEqualIComparable">
            <summary>Sets the shim of Is.LessThanOrEqual(IComparable objToCompare)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.NotEqualObject">
            <summary>Sets the shim of Is.NotEqual(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.NotNull">
            <summary>Sets the shim of Is.NotNull()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.NotSameObject">
            <summary>Sets the shim of Is.NotSame(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.Null">
            <summary>Sets the shim of Is.Null()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.SameObject">
            <summary>Sets the shim of Is.Same(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIs.TypeOfType">
            <summary>Sets the shim of Is.TypeOf(Type type)</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1">
            <summary>Shim type of Rhino.Mocks.Constraints.IsArg`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.#ctor(Rhino.Mocks.Constraints.IsArg{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AnythingGet">
            <summary>Sets the shim of IsArg`1.get_Anything()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.Constructor">
            <summary>Sets the shim of IsArg`1.IsArg`1()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.ConvertObjectTypeToMatchIComparable">
            <summary>Sets the shim of IsArg`1.ConvertObjectTypeToMatch(IComparable obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.ConvertObjectTypeToMatchObject">
            <summary>Sets the shim of IsArg`1.ConvertObjectTypeToMatch(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.EqualObject">
            <summary>Sets the shim of IsArg`1.Equal(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.EqualsObject">
            <summary>Sets the shim of IsArg`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.GetHashCode">
            <summary>Sets the shim of IsArg`1.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.GreaterThanIComparable">
            <summary>Sets the shim of IsArg`1.GreaterThan(IComparable objToCompare)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.GreaterThanOrEqualIComparable">
            <summary>Sets the shim of IsArg`1.GreaterThanOrEqual(IComparable objToCompare)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.LessThanIComparable">
            <summary>Sets the shim of IsArg`1.LessThan(IComparable objToCompare)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.LessThanOrEqualIComparable">
            <summary>Sets the shim of IsArg`1.LessThanOrEqual(IComparable objToCompare)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.NotEqualObject">
            <summary>Sets the shim of IsArg`1.NotEqual(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.NotNullGet">
            <summary>Sets the shim of IsArg`1.get_NotNull()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.NotSameObject">
            <summary>Sets the shim of IsArg`1.NotSame(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.NullGet">
            <summary>Sets the shim of IsArg`1.get_Null()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.SameObject">
            <summary>Sets the shim of IsArg`1.Same(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.TypeOfGet">
            <summary>Sets the shim of IsArg`1.get_TypeOf()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.AnythingGet">
            <summary>Sets the shim of IsArg`1.get_Anything()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.ConvertObjectTypeToMatchIComparable">
            <summary>Sets the shim of IsArg`1.ConvertObjectTypeToMatch(IComparable obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.ConvertObjectTypeToMatchObject">
            <summary>Sets the shim of IsArg`1.ConvertObjectTypeToMatch(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.EqualObject">
            <summary>Sets the shim of IsArg`1.Equal(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.EqualsObject">
            <summary>Sets the shim of IsArg`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of IsArg`1.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.GreaterThanIComparable">
            <summary>Sets the shim of IsArg`1.GreaterThan(IComparable objToCompare)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.GreaterThanOrEqualIComparable">
            <summary>Sets the shim of IsArg`1.GreaterThanOrEqual(IComparable objToCompare)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.LessThanIComparable">
            <summary>Sets the shim of IsArg`1.LessThan(IComparable objToCompare)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.LessThanOrEqualIComparable">
            <summary>Sets the shim of IsArg`1.LessThanOrEqual(IComparable objToCompare)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.NotEqualObject">
            <summary>Sets the shim of IsArg`1.NotEqual(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.NotNullGet">
            <summary>Sets the shim of IsArg`1.get_NotNull()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.NotSameObject">
            <summary>Sets the shim of IsArg`1.NotSame(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.NullGet">
            <summary>Sets the shim of IsArg`1.get_Null()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.SameObject">
            <summary>Sets the shim of IsArg`1.Same(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsArg`1.AllInstances.TypeOfGet">
            <summary>Sets the shim of IsArg`1.get_TypeOf()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimIsIn">
            <summary>Shim type of Rhino.Mocks.Constraints.IsIn</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIsIn.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIsIn.#ctor(Rhino.Mocks.Constraints.IsIn)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIsIn.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimIsIn.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsIn.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsIn.ConstructorObject">
            <summary>Sets the shim of IsIn.IsIn(Object inList)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsIn.EvalObject">
            <summary>Sets the shim of IsIn.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsIn.MessageGet">
            <summary>Sets the shim of IsIn.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimIsIn.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsIn.AllInstances.EvalObject">
            <summary>Sets the shim of IsIn.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimIsIn.AllInstances.MessageGet">
            <summary>Sets the shim of IsIn.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimKeyedListElement`1">
            <summary>Shim type of Rhino.Mocks.Constraints.KeyedListElement`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimKeyedListElement`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimKeyedListElement`1.#ctor(Rhino.Mocks.Constraints.KeyedListElement{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimKeyedListElement`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimKeyedListElement`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimKeyedListElement`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimKeyedListElement`1.ConstructorT0AbstractConstraint">
            <summary>Sets the shim of KeyedListElement`1.KeyedListElement`1(!0 key, AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimKeyedListElement`1.EvalObject">
            <summary>Sets the shim of KeyedListElement`1.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimKeyedListElement`1.MessageGet">
            <summary>Sets the shim of KeyedListElement`1.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimKeyedListElement`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimKeyedListElement`1.AllInstances.EvalObject">
            <summary>Sets the shim of KeyedListElement`1.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimKeyedListElement`1.AllInstances.MessageGet">
            <summary>Sets the shim of KeyedListElement`1.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint">
            <summary>Shim type of Rhino.Mocks.Constraints.LambdaConstraint</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.#ctor(Rhino.Mocks.Constraints.LambdaConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.ConstructorLambdaExpression">
            <summary>Sets the shim of LambdaConstraint.LambdaConstraint(LambdaExpression expr)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.EvalObject">
            <summary>Sets the shim of LambdaConstraint.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.IsArgumentTypeIsAssignableFromLambdaExpressionObject">
            <summary>Sets the shim of LambdaConstraint.IsArgumentTypeIsAssignableFrom(LambdaExpression predicate, Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.MessageGet">
            <summary>Sets the shim of LambdaConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.AllInstances.EvalObject">
            <summary>Sets the shim of LambdaConstraint.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.AllInstances.IsArgumentTypeIsAssignableFromLambdaExpressionObject">
            <summary>Sets the shim of LambdaConstraint.IsArgumentTypeIsAssignableFrom(LambdaExpression predicate, Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLambdaConstraint.AllInstances.MessageGet">
            <summary>Sets the shim of LambdaConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimLike">
            <summary>Shim type of Rhino.Mocks.Constraints.Like</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimLike.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimLike.#ctor(Rhino.Mocks.Constraints.Like)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimLike.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimLike.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLike.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLike.ConstructorString">
            <summary>Sets the shim of Like.Like(String pattern)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLike.EvalObject">
            <summary>Sets the shim of Like.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLike.MessageGet">
            <summary>Sets the shim of Like.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimLike.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLike.AllInstances.EvalObject">
            <summary>Sets the shim of Like.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimLike.AllInstances.MessageGet">
            <summary>Sets the shim of Like.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimList">
            <summary>Shim type of Rhino.Mocks.Constraints.List</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimList.ElementOf1M0AbstractConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Rhino.Mocks.Constraints.AbstractConstraint,Rhino.Mocks.Constraints.AbstractConstraint})">
            <summary>Sets the shim of List.Element(!!0 key, AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimList.ContainsAllIEnumerable">
            <summary>Sets the shim of List.ContainsAll(IEnumerable collection)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimList.CountAbstractConstraint">
            <summary>Sets the shim of List.Count(AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimList.ElementInt32AbstractConstraint">
            <summary>Sets the shim of List.Element(Int32 index, AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimList.EqualIEnumerable">
            <summary>Sets the shim of List.Equal(IEnumerable collection)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimList.IsInObject">
            <summary>Sets the shim of List.IsIn(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimList.OneOfIEnumerable">
            <summary>Sets the shim of List.OneOf(IEnumerable collection)</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimListArg`1">
            <summary>Shim type of Rhino.Mocks.Constraints.ListArg`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.#ctor(Rhino.Mocks.Constraints.ListArg{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.Constructor">
            <summary>Sets the shim of ListArg`1.ListArg`1()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.ContainsAllIEnumerable">
            <summary>Sets the shim of ListArg`1.ContainsAll(IEnumerable collection)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.CountAbstractConstraint">
            <summary>Sets the shim of ListArg`1.Count(AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.ElementInt32AbstractConstraint">
            <summary>Sets the shim of ListArg`1.Element(Int32 index, AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.EqualIEnumerable">
            <summary>Sets the shim of ListArg`1.Equal(IEnumerable collection)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.EqualsObject">
            <summary>Sets the shim of ListArg`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.GetHashCode">
            <summary>Sets the shim of ListArg`1.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.IsInObject">
            <summary>Sets the shim of ListArg`1.IsIn(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.OneOfIEnumerable">
            <summary>Sets the shim of ListArg`1.OneOf(IEnumerable collection)</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.AllInstances.ContainsAllIEnumerable">
            <summary>Sets the shim of ListArg`1.ContainsAll(IEnumerable collection)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.AllInstances.CountAbstractConstraint">
            <summary>Sets the shim of ListArg`1.Count(AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.AllInstances.ElementInt32AbstractConstraint">
            <summary>Sets the shim of ListArg`1.Element(Int32 index, AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.AllInstances.EqualIEnumerable">
            <summary>Sets the shim of ListArg`1.Equal(IEnumerable collection)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.AllInstances.EqualsObject">
            <summary>Sets the shim of ListArg`1.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of ListArg`1.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.AllInstances.IsInObject">
            <summary>Sets the shim of ListArg`1.IsIn(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListArg`1.AllInstances.OneOfIEnumerable">
            <summary>Sets the shim of ListArg`1.OneOf(IEnumerable collection)</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimListElement">
            <summary>Shim type of Rhino.Mocks.Constraints.ListElement</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimListElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimListElement.#ctor(Rhino.Mocks.Constraints.ListElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimListElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimListElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListElement.ConstructorInt32AbstractConstraint">
            <summary>Sets the shim of ListElement.ListElement(Int32 index, AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListElement.EvalObject">
            <summary>Sets the shim of ListElement.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListElement.MessageGet">
            <summary>Sets the shim of ListElement.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimListElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListElement.AllInstances.EvalObject">
            <summary>Sets the shim of ListElement.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimListElement.AllInstances.MessageGet">
            <summary>Sets the shim of ListElement.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimNot">
            <summary>Shim type of Rhino.Mocks.Constraints.Not</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimNot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimNot.#ctor(Rhino.Mocks.Constraints.Not)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimNot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimNot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimNot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimNot.ConstructorAbstractConstraint">
            <summary>Sets the shim of Not.Not(AbstractConstraint c1)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimNot.EvalObject">
            <summary>Sets the shim of Not.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimNot.MessageGet">
            <summary>Sets the shim of Not.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimNot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimNot.AllInstances.EvalObject">
            <summary>Sets the shim of Not.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimNot.AllInstances.MessageGet">
            <summary>Sets the shim of Not.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimOneOf">
            <summary>Shim type of Rhino.Mocks.Constraints.OneOf</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimOneOf.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimOneOf.#ctor(Rhino.Mocks.Constraints.OneOf)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimOneOf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimOneOf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOneOf.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOneOf.ConstructorIEnumerable">
            <summary>Sets the shim of OneOf.OneOf(IEnumerable collection)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOneOf.EvalObject">
            <summary>Sets the shim of OneOf.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOneOf.MessageGet">
            <summary>Sets the shim of OneOf.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimOneOf.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOneOf.AllInstances.EvalObject">
            <summary>Sets the shim of OneOf.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOneOf.AllInstances.MessageGet">
            <summary>Sets the shim of OneOf.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimOr">
            <summary>Shim type of Rhino.Mocks.Constraints.Or</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimOr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimOr.#ctor(Rhino.Mocks.Constraints.Or)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimOr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimOr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOr.ConstructorAbstractConstraintAbstractConstraint">
            <summary>Sets the shim of Or.Or(AbstractConstraint c1, AbstractConstraint c2)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOr.EvalObject">
            <summary>Sets the shim of Or.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOr.MessageGet">
            <summary>Sets the shim of Or.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimOr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOr.AllInstances.EvalObject">
            <summary>Sets the shim of Or.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOr.AllInstances.MessageGet">
            <summary>Sets the shim of Or.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimOutRefArgDummy`1">
            <summary>Shim type of Rhino.Mocks.Constraints.OutRefArgDummy`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimOutRefArgDummy`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimOutRefArgDummy`1.#ctor(Rhino.Mocks.Constraints.OutRefArgDummy{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimOutRefArgDummy`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimOutRefArgDummy`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOutRefArgDummy`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimOutRefArgDummy`1.Constructor">
            <summary>Sets the shim of OutRefArgDummy`1.OutRefArgDummy`1()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimOutRefArgDummy`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1">
            <summary>Shim type of Rhino.Mocks.Constraints.PredicateConstraint`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.#ctor(Rhino.Mocks.Constraints.PredicateConstraint{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.ConstructorPredicateOfT0">
            <summary>Sets the shim of PredicateConstraint`1.PredicateConstraint`1(Predicate`1&lt;!0&gt; predicate)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.EvalObject">
            <summary>Sets the shim of PredicateConstraint`1.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.FormatEmptyArgumnetArrayInt32">
            <summary>Sets the shim of PredicateConstraint`1.FormatEmptyArgumnet(Array args, Int32 i)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.MessageGet">
            <summary>Sets the shim of PredicateConstraint`1.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.AllInstances.EvalObject">
            <summary>Sets the shim of PredicateConstraint`1.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.AllInstances.FormatEmptyArgumnetArrayInt32">
            <summary>Sets the shim of PredicateConstraint`1.FormatEmptyArgumnet(Array args, Int32 i)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPredicateConstraint`1.AllInstances.MessageGet">
            <summary>Sets the shim of PredicateConstraint`1.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimProperty">
            <summary>Shim type of Rhino.Mocks.Constraints.Property</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimProperty.AllPropertiesMatchObject">
            <summary>Sets the shim of Property.AllPropertiesMatch(Object expected)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimProperty.IsNotNullString">
            <summary>Sets the shim of Property.IsNotNull(String propertyName)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimProperty.IsNotNullTypeString">
            <summary>Sets the shim of Property.IsNotNull(Type declaringType, String propertyName)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimProperty.IsNullString">
            <summary>Sets the shim of Property.IsNull(String propertyName)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimProperty.IsNullTypeString">
            <summary>Sets the shim of Property.IsNull(Type declaringType, String propertyName)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimProperty.ValueConstraintStringAbstractConstraint">
            <summary>Sets the shim of Property.ValueConstraint(String propertyName, AbstractConstraint propertyConstraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimProperty.ValueConstraintTypeStringAbstractConstraint">
            <summary>Sets the shim of Property.ValueConstraint(Type declaringType, String propertyName, AbstractConstraint propertyConstraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimProperty.ValueStringObject">
            <summary>Sets the shim of Property.Value(String propertyName, Object expectedValue)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimProperty.ValueTypeStringObject">
            <summary>Sets the shim of Property.Value(Type declaringType, String propertyName, Object expectedValue)</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint">
            <summary>Shim type of Rhino.Mocks.Constraints.PropertyConstraint</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint.#ctor(Rhino.Mocks.Constraints.PropertyConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint.ConstructorStringAbstractConstraint">
            <summary>Sets the shim of PropertyConstraint.PropertyConstraint(String propertyName, AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint.ConstructorTypeStringAbstractConstraint">
            <summary>Sets the shim of PropertyConstraint.PropertyConstraint(Type declaringType, String propertyName, AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint.EvalObject">
            <summary>Sets the shim of PropertyConstraint.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint.MessageGet">
            <summary>Sets the shim of PropertyConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint.AllInstances.EvalObject">
            <summary>Sets the shim of PropertyConstraint.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPropertyConstraint.AllInstances.MessageGet">
            <summary>Sets the shim of PropertyConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimPropertyIs">
            <summary>Shim type of Rhino.Mocks.Constraints.PropertyIs</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPropertyIs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPropertyIs.#ctor(Rhino.Mocks.Constraints.PropertyIs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPropertyIs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPropertyIs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPropertyIs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPropertyIs.ConstructorStringObject">
            <summary>Sets the shim of PropertyIs.PropertyIs(String propertyName, Object expectedValue)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPropertyIs.ConstructorTypeStringObject">
            <summary>Sets the shim of PropertyIs.PropertyIs(Type declaringType, String propertyName, Object expectedValue)</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimPropertyIs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimPublicField">
            <summary>Shim type of Rhino.Mocks.Constraints.PublicField</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPublicField.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPublicField.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPublicField.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicField.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicField.IsNotNullString">
            <summary>Sets the shim of PublicField.IsNotNull(String publicFieldName)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicField.IsNotNullTypeString">
            <summary>Sets the shim of PublicField.IsNotNull(Type declaringType, String publicFieldName)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicField.IsNullString">
            <summary>Sets the shim of PublicField.IsNull(String publicFieldName)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicField.IsNullTypeString">
            <summary>Sets the shim of PublicField.IsNull(Type declaringType, String publicFieldName)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicField.ValueConstraintStringAbstractConstraint">
            <summary>Sets the shim of PublicField.ValueConstraint(String publicFieldName, AbstractConstraint publicFieldConstraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicField.ValueConstraintTypeStringAbstractConstraint">
            <summary>Sets the shim of PublicField.ValueConstraint(Type declaringType, String publicFieldName, AbstractConstraint publicFieldConstraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicField.ValueStringObject">
            <summary>Sets the shim of PublicField.Value(String publicFieldName, Object expectedValue)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicField.ValueTypeStringObject">
            <summary>Sets the shim of PublicField.Value(Type declaringType, String publicFieldName, Object expectedValue)</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint">
            <summary>Shim type of Rhino.Mocks.Constraints.PublicFieldConstraint</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint.#ctor(Rhino.Mocks.Constraints.PublicFieldConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint.ConstructorStringAbstractConstraint">
            <summary>Sets the shim of PublicFieldConstraint.PublicFieldConstraint(String publicFieldName, AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint.ConstructorTypeStringAbstractConstraint">
            <summary>Sets the shim of PublicFieldConstraint.PublicFieldConstraint(Type declaringType, String publicFieldName, AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint.EvalObject">
            <summary>Sets the shim of PublicFieldConstraint.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint.MessageGet">
            <summary>Sets the shim of PublicFieldConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint.AllInstances.EvalObject">
            <summary>Sets the shim of PublicFieldConstraint.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldConstraint.AllInstances.MessageGet">
            <summary>Sets the shim of PublicFieldConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldIs">
            <summary>Shim type of Rhino.Mocks.Constraints.PublicFieldIs</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldIs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldIs.#ctor(Rhino.Mocks.Constraints.PublicFieldIs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldIs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldIs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldIs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldIs.ConstructorStringObject">
            <summary>Sets the shim of PublicFieldIs.PublicFieldIs(String publicFieldName, Object expectedValue)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldIs.ConstructorTypeStringObject">
            <summary>Sets the shim of PublicFieldIs.PublicFieldIs(Type declaringType, String publicFieldName, Object expectedValue)</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimPublicFieldIs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimSame">
            <summary>Shim type of Rhino.Mocks.Constraints.Same</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimSame.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimSame.#ctor(Rhino.Mocks.Constraints.Same)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimSame.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimSame.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimSame.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimSame.ConstructorObject">
            <summary>Sets the shim of Same.Same(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimSame.EvalObject">
            <summary>Sets the shim of Same.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimSame.MessageGet">
            <summary>Sets the shim of Same.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimSame.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimSame.AllInstances.EvalObject">
            <summary>Sets the shim of Same.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimSame.AllInstances.MessageGet">
            <summary>Sets the shim of Same.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimStartsWith">
            <summary>Shim type of Rhino.Mocks.Constraints.StartsWith</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimStartsWith.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimStartsWith.#ctor(Rhino.Mocks.Constraints.StartsWith)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimStartsWith.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimStartsWith.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimStartsWith.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimStartsWith.ConstructorString">
            <summary>Sets the shim of StartsWith.StartsWith(String start)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimStartsWith.EvalObject">
            <summary>Sets the shim of StartsWith.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimStartsWith.MessageGet">
            <summary>Sets the shim of StartsWith.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimStartsWith.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimStartsWith.AllInstances.EvalObject">
            <summary>Sets the shim of StartsWith.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimStartsWith.AllInstances.MessageGet">
            <summary>Sets the shim of StartsWith.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimText">
            <summary>Shim type of Rhino.Mocks.Constraints.Text</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimText.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimText.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimText.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimText.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimText.ContainsString">
            <summary>Sets the shim of Text.Contains(String innerString)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimText.EndsWithString">
            <summary>Sets the shim of Text.EndsWith(String end)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimText.LikeString">
            <summary>Sets the shim of Text.Like(String pattern)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimText.StartsWithString">
            <summary>Sets the shim of Text.StartsWith(String start)</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimTextArg">
            <summary>Shim type of Rhino.Mocks.Constraints.TextArg</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimTextArg.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimTextArg.#ctor(Rhino.Mocks.Constraints.TextArg)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimTextArg.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimTextArg.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.Constructor">
            <summary>Sets the shim of TextArg.TextArg()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.ContainsString">
            <summary>Sets the shim of TextArg.Contains(String innerString)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.EndsWithString">
            <summary>Sets the shim of TextArg.EndsWith(String end)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.EqualsObject">
            <summary>Sets the shim of TextArg.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.GetHashCode">
            <summary>Sets the shim of TextArg.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.LikeString">
            <summary>Sets the shim of TextArg.Like(String pattern)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.StartsWithString">
            <summary>Sets the shim of TextArg.StartsWith(String start)</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimTextArg.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.AllInstances.ContainsString">
            <summary>Sets the shim of TextArg.Contains(String innerString)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.AllInstances.EndsWithString">
            <summary>Sets the shim of TextArg.EndsWith(String end)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.AllInstances.EqualsObject">
            <summary>Sets the shim of TextArg.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.AllInstances.GetHashCode01">
            <summary>Sets the shim of TextArg.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.AllInstances.LikeString">
            <summary>Sets the shim of TextArg.Like(String pattern)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTextArg.AllInstances.StartsWithString">
            <summary>Sets the shim of TextArg.StartsWith(String start)</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimTypeOf">
            <summary>Shim type of Rhino.Mocks.Constraints.TypeOf</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimTypeOf.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimTypeOf.#ctor(Rhino.Mocks.Constraints.TypeOf)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimTypeOf.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.ShimTypeOf.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTypeOf.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTypeOf.ConstructorType">
            <summary>Sets the shim of TypeOf.TypeOf(Type type)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTypeOf.EvalObject">
            <summary>Sets the shim of TypeOf.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTypeOf.MessageGet">
            <summary>Sets the shim of TypeOf.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.ShimTypeOf.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTypeOf.AllInstances.EvalObject">
            <summary>Sets the shim of TypeOf.Eval(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.ShimTypeOf.AllInstances.MessageGet">
            <summary>Sets the shim of TypeOf.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubAbstractConstraint">
            <summary>Stub type of Rhino.Mocks.Constraints.AbstractConstraint</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubAbstractConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubAbstractConstraint.Eval(System.Object)">
            <summary>Sets the stub of AbstractConstraint.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubAbstractConstraint.EvalObject">
            <summary>Sets the stub of AbstractConstraint.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubAbstractConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractConstraint</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubAbstractConstraint.MessageGet">
            <summary>Sets the stub of AbstractConstraint.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubAbstractConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubAbstractConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubAbstractConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubAbstractConstraint.Message">
            <summary>Sets the stub of AbstractConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubAnd">
            <summary>Stub type of Rhino.Mocks.Constraints.And</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubAnd.#ctor(Rhino.Mocks.Constraints.AbstractConstraint,Rhino.Mocks.Constraints.AbstractConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubAnd.Eval(System.Object)">
            <summary>Sets the stub of And.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubAnd.EvalObject">
            <summary>Sets the stub of And.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubAnd.InitializeStub">
            <summary>Initializes a new instance of type StubAnd</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubAnd.MessageGet">
            <summary>Sets the stub of And.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubAnd.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubAnd.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubAnd.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubAnd.Message">
            <summary>Sets the stub of And.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubAnything">
            <summary>Stub type of Rhino.Mocks.Constraints.Anything</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubAnything.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubAnything.Eval(System.Object)">
            <summary>Sets the stub of Anything.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubAnything.EvalObject">
            <summary>Sets the stub of Anything.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubAnything.InitializeStub">
            <summary>Initializes a new instance of type StubAnything</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubAnything.MessageGet">
            <summary>Sets the stub of Anything.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubAnything.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubAnything.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubAnything.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubAnything.Message">
            <summary>Sets the stub of Anything.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubCollectionCount">
            <summary>Stub type of Rhino.Mocks.Constraints.CollectionCount</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubCollectionCount.#ctor(Rhino.Mocks.Constraints.AbstractConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubCollectionCount.Eval(System.Object)">
            <summary>Sets the stub of CollectionCount.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubCollectionCount.EvalObject">
            <summary>Sets the stub of CollectionCount.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubCollectionCount.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionCount</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubCollectionCount.MessageGet">
            <summary>Sets the stub of CollectionCount.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubCollectionCount.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubCollectionCount.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubCollectionCount.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubCollectionCount.Message">
            <summary>Sets the stub of CollectionCount.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubCollectionEqual">
            <summary>Stub type of Rhino.Mocks.Constraints.CollectionEqual</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubCollectionEqual.#ctor(System.Collections.IEnumerable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubCollectionEqual.Eval(System.Object)">
            <summary>Sets the stub of CollectionEqual.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubCollectionEqual.EvalObject">
            <summary>Sets the stub of CollectionEqual.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubCollectionEqual.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionEqual</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubCollectionEqual.MessageGet">
            <summary>Sets the stub of CollectionEqual.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubCollectionEqual.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubCollectionEqual.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubCollectionEqual.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubCollectionEqual.Message">
            <summary>Sets the stub of CollectionEqual.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubComparingConstraint">
            <summary>Stub type of Rhino.Mocks.Constraints.ComparingConstraint</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubComparingConstraint.#ctor(System.IComparable,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubComparingConstraint.Eval(System.Object)">
            <summary>Sets the stub of ComparingConstraint.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubComparingConstraint.EvalObject">
            <summary>Sets the stub of ComparingConstraint.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubComparingConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubComparingConstraint</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubComparingConstraint.MessageGet">
            <summary>Sets the stub of ComparingConstraint.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubComparingConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubComparingConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubComparingConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubComparingConstraint.Message">
            <summary>Sets the stub of ComparingConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubContains">
            <summary>Stub type of Rhino.Mocks.Constraints.Contains</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubContains.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubContains.Eval(System.Object)">
            <summary>Sets the stub of Contains.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubContains.EvalObject">
            <summary>Sets the stub of Contains.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubContains.InitializeStub">
            <summary>Initializes a new instance of type StubContains</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubContains.MessageGet">
            <summary>Sets the stub of Contains.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubContains.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubContains.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubContains.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubContains.Message">
            <summary>Sets the stub of Contains.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubContainsAll">
            <summary>Stub type of Rhino.Mocks.Constraints.ContainsAll</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubContainsAll.#ctor(System.Collections.IEnumerable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubContainsAll.Eval(System.Object)">
            <summary>Sets the stub of ContainsAll.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubContainsAll.EvalObject">
            <summary>Sets the stub of ContainsAll.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubContainsAll.InitializeStub">
            <summary>Initializes a new instance of type StubContainsAll</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubContainsAll.MessageGet">
            <summary>Sets the stub of ContainsAll.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubContainsAll.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubContainsAll.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubContainsAll.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubContainsAll.Message">
            <summary>Sets the stub of ContainsAll.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubEndsWith">
            <summary>Stub type of Rhino.Mocks.Constraints.EndsWith</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubEndsWith.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubEndsWith.Eval(System.Object)">
            <summary>Sets the stub of EndsWith.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubEndsWith.EvalObject">
            <summary>Sets the stub of EndsWith.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubEndsWith.InitializeStub">
            <summary>Initializes a new instance of type StubEndsWith</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubEndsWith.MessageGet">
            <summary>Sets the stub of EndsWith.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubEndsWith.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubEndsWith.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubEndsWith.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubEndsWith.Message">
            <summary>Sets the stub of EndsWith.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubEqual">
            <summary>Stub type of Rhino.Mocks.Constraints.Equal</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubEqual.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubEqual.Eval(System.Object)">
            <summary>Sets the stub of Equal.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubEqual.EvalObject">
            <summary>Sets the stub of Equal.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubEqual.InitializeStub">
            <summary>Initializes a new instance of type StubEqual</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubEqual.MessageGet">
            <summary>Sets the stub of Equal.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubEqual.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubEqual.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubEqual.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubEqual.Message">
            <summary>Sets the stub of Equal.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubIsIn">
            <summary>Stub type of Rhino.Mocks.Constraints.IsIn</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubIsIn.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubIsIn.Eval(System.Object)">
            <summary>Sets the stub of IsIn.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubIsIn.EvalObject">
            <summary>Sets the stub of IsIn.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubIsIn.InitializeStub">
            <summary>Initializes a new instance of type StubIsIn</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubIsIn.MessageGet">
            <summary>Sets the stub of IsIn.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubIsIn.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubIsIn.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubIsIn.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubIsIn.Message">
            <summary>Sets the stub of IsIn.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubKeyedListElement`1">
            <summary>Stub type of Rhino.Mocks.Constraints.KeyedListElement`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubKeyedListElement`1.#ctor(`0,Rhino.Mocks.Constraints.AbstractConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubKeyedListElement`1.Eval(System.Object)">
            <summary>Sets the stub of KeyedListElement`1.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubKeyedListElement`1.EvalObject">
            <summary>Sets the stub of KeyedListElement`1.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubKeyedListElement`1.InitializeStub">
            <summary>Initializes a new instance of type StubKeyedListElement</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubKeyedListElement`1.MessageGet">
            <summary>Sets the stub of KeyedListElement`1.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubKeyedListElement`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubKeyedListElement`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubKeyedListElement`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubKeyedListElement`1.Message">
            <summary>Sets the stub of KeyedListElement`1.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubLambdaConstraint">
            <summary>Stub type of Rhino.Mocks.Constraints.LambdaConstraint</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubLambdaConstraint.#ctor(System.Linq.Expressions.LambdaExpression)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubLambdaConstraint.Eval(System.Object)">
            <summary>Sets the stub of LambdaConstraint.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubLambdaConstraint.EvalObject">
            <summary>Sets the stub of LambdaConstraint.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubLambdaConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubLambdaConstraint</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubLambdaConstraint.MessageGet">
            <summary>Sets the stub of LambdaConstraint.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubLambdaConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubLambdaConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubLambdaConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubLambdaConstraint.Message">
            <summary>Sets the stub of LambdaConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubLike">
            <summary>Stub type of Rhino.Mocks.Constraints.Like</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubLike.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubLike.Eval(System.Object)">
            <summary>Sets the stub of Like.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubLike.EvalObject">
            <summary>Sets the stub of Like.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubLike.InitializeStub">
            <summary>Initializes a new instance of type StubLike</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubLike.MessageGet">
            <summary>Sets the stub of Like.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubLike.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubLike.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubLike.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubLike.Message">
            <summary>Sets the stub of Like.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubListElement">
            <summary>Stub type of Rhino.Mocks.Constraints.ListElement</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubListElement.#ctor(System.Int32,Rhino.Mocks.Constraints.AbstractConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubListElement.Eval(System.Object)">
            <summary>Sets the stub of ListElement.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubListElement.EvalObject">
            <summary>Sets the stub of ListElement.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubListElement.InitializeStub">
            <summary>Initializes a new instance of type StubListElement</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubListElement.MessageGet">
            <summary>Sets the stub of ListElement.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubListElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubListElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubListElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubListElement.Message">
            <summary>Sets the stub of ListElement.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubNot">
            <summary>Stub type of Rhino.Mocks.Constraints.Not</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubNot.#ctor(Rhino.Mocks.Constraints.AbstractConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubNot.Eval(System.Object)">
            <summary>Sets the stub of Not.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubNot.EvalObject">
            <summary>Sets the stub of Not.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubNot.InitializeStub">
            <summary>Initializes a new instance of type StubNot</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubNot.MessageGet">
            <summary>Sets the stub of Not.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubNot.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubNot.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubNot.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubNot.Message">
            <summary>Sets the stub of Not.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubOneOf">
            <summary>Stub type of Rhino.Mocks.Constraints.OneOf</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubOneOf.#ctor(System.Collections.IEnumerable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubOneOf.Eval(System.Object)">
            <summary>Sets the stub of OneOf.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubOneOf.EvalObject">
            <summary>Sets the stub of OneOf.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubOneOf.InitializeStub">
            <summary>Initializes a new instance of type StubOneOf</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubOneOf.MessageGet">
            <summary>Sets the stub of OneOf.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubOneOf.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubOneOf.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubOneOf.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubOneOf.Message">
            <summary>Sets the stub of OneOf.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubOr">
            <summary>Stub type of Rhino.Mocks.Constraints.Or</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubOr.#ctor(Rhino.Mocks.Constraints.AbstractConstraint,Rhino.Mocks.Constraints.AbstractConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubOr.Eval(System.Object)">
            <summary>Sets the stub of Or.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubOr.EvalObject">
            <summary>Sets the stub of Or.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubOr.InitializeStub">
            <summary>Initializes a new instance of type StubOr</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubOr.MessageGet">
            <summary>Sets the stub of Or.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubOr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubOr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubOr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubOr.Message">
            <summary>Sets the stub of Or.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubOutRefArgDummy`1">
            <summary>Stub type of Rhino.Mocks.Constraints.OutRefArgDummy`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubOutRefArgDummy`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubOutRefArgDummy`1.InitializeStub">
            <summary>Initializes a new instance of type StubOutRefArgDummy</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubOutRefArgDummy`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubOutRefArgDummy`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubOutRefArgDummy`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubPredicateConstraint`1">
            <summary>Stub type of Rhino.Mocks.Constraints.PredicateConstraint`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPredicateConstraint`1.#ctor(System.Predicate{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPredicateConstraint`1.Eval(System.Object)">
            <summary>Sets the stub of PredicateConstraint`1.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubPredicateConstraint`1.EvalObject">
            <summary>Sets the stub of PredicateConstraint`1.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPredicateConstraint`1.InitializeStub">
            <summary>Initializes a new instance of type StubPredicateConstraint</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubPredicateConstraint`1.MessageGet">
            <summary>Sets the stub of PredicateConstraint`1.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPredicateConstraint`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPredicateConstraint`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPredicateConstraint`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPredicateConstraint`1.Message">
            <summary>Sets the stub of PredicateConstraint`1.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubPropertyConstraint">
            <summary>Stub type of Rhino.Mocks.Constraints.PropertyConstraint</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPropertyConstraint.#ctor(System.String,Rhino.Mocks.Constraints.AbstractConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPropertyConstraint.#ctor(System.Type,System.String,Rhino.Mocks.Constraints.AbstractConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPropertyConstraint.Eval(System.Object)">
            <summary>Sets the stub of PropertyConstraint.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubPropertyConstraint.EvalObject">
            <summary>Sets the stub of PropertyConstraint.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPropertyConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyConstraint</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubPropertyConstraint.MessageGet">
            <summary>Sets the stub of PropertyConstraint.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPropertyConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPropertyConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPropertyConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPropertyConstraint.Message">
            <summary>Sets the stub of PropertyConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubPropertyIs">
            <summary>Stub type of Rhino.Mocks.Constraints.PropertyIs</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPropertyIs.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPropertyIs.#ctor(System.Type,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPropertyIs.Eval(System.Object)">
            <summary>Sets the stub of PropertyConstraint.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubPropertyIs.EvalObject">
            <summary>Sets the stub of PropertyConstraint.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPropertyIs.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyIs</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubPropertyIs.MessageGet">
            <summary>Sets the stub of PropertyConstraint.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPropertyIs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPropertyIs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPropertyIs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPropertyIs.Message">
            <summary>Sets the stub of PropertyConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubPublicFieldConstraint">
            <summary>Stub type of Rhino.Mocks.Constraints.PublicFieldConstraint</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPublicFieldConstraint.#ctor(System.String,Rhino.Mocks.Constraints.AbstractConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPublicFieldConstraint.#ctor(System.Type,System.String,Rhino.Mocks.Constraints.AbstractConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPublicFieldConstraint.Eval(System.Object)">
            <summary>Sets the stub of PublicFieldConstraint.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubPublicFieldConstraint.EvalObject">
            <summary>Sets the stub of PublicFieldConstraint.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPublicFieldConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubPublicFieldConstraint</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubPublicFieldConstraint.MessageGet">
            <summary>Sets the stub of PublicFieldConstraint.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPublicFieldConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPublicFieldConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPublicFieldConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPublicFieldConstraint.Message">
            <summary>Sets the stub of PublicFieldConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubPublicFieldIs">
            <summary>Stub type of Rhino.Mocks.Constraints.PublicFieldIs</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPublicFieldIs.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPublicFieldIs.#ctor(System.Type,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPublicFieldIs.Eval(System.Object)">
            <summary>Sets the stub of PublicFieldConstraint.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubPublicFieldIs.EvalObject">
            <summary>Sets the stub of PublicFieldConstraint.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubPublicFieldIs.InitializeStub">
            <summary>Initializes a new instance of type StubPublicFieldIs</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubPublicFieldIs.MessageGet">
            <summary>Sets the stub of PublicFieldConstraint.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPublicFieldIs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPublicFieldIs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPublicFieldIs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubPublicFieldIs.Message">
            <summary>Sets the stub of PublicFieldConstraint.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubSame">
            <summary>Stub type of Rhino.Mocks.Constraints.Same</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubSame.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubSame.Eval(System.Object)">
            <summary>Sets the stub of Same.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubSame.EvalObject">
            <summary>Sets the stub of Same.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubSame.InitializeStub">
            <summary>Initializes a new instance of type StubSame</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubSame.MessageGet">
            <summary>Sets the stub of Same.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubSame.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubSame.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubSame.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubSame.Message">
            <summary>Sets the stub of Same.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubStartsWith">
            <summary>Stub type of Rhino.Mocks.Constraints.StartsWith</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubStartsWith.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubStartsWith.Eval(System.Object)">
            <summary>Sets the stub of StartsWith.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubStartsWith.EvalObject">
            <summary>Sets the stub of StartsWith.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubStartsWith.InitializeStub">
            <summary>Initializes a new instance of type StubStartsWith</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubStartsWith.MessageGet">
            <summary>Sets the stub of StartsWith.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubStartsWith.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubStartsWith.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubStartsWith.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubStartsWith.Message">
            <summary>Sets the stub of StartsWith.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Constraints.Fakes.StubTypeOf">
            <summary>Stub type of Rhino.Mocks.Constraints.TypeOf</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubTypeOf.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubTypeOf.Eval(System.Object)">
            <summary>Sets the stub of TypeOf.Eval(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubTypeOf.EvalObject">
            <summary>Sets the stub of TypeOf.Eval(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Constraints.Fakes.StubTypeOf.InitializeStub">
            <summary>Initializes a new instance of type StubTypeOf</summary>
        </member>
        <member name="F:Rhino.Mocks.Constraints.Fakes.StubTypeOf.MessageGet">
            <summary>Sets the stub of TypeOf.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubTypeOf.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubTypeOf.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubTypeOf.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Constraints.Fakes.StubTypeOf.Message">
            <summary>Sets the stub of TypeOf.get_Message()</summary>
        </member>
        <member name="T:Rhino.Mocks.Exceptions.Fakes.ShimExpectationViolationException">
            <summary>Shim type of Rhino.Mocks.Exceptions.ExpectationViolationException</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.ShimExpectationViolationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.ShimExpectationViolationException.#ctor(Rhino.Mocks.Exceptions.ExpectationViolationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.ShimExpectationViolationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.ShimExpectationViolationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.ShimExpectationViolationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.ShimExpectationViolationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.ShimExpectationViolationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ExpectationViolationException.ExpectationViolationException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.ShimExpectationViolationException.ConstructorString">
            <summary>Sets the shim of ExpectationViolationException.ExpectationViolationException(String message)</summary>
        </member>
        <member name="T:Rhino.Mocks.Exceptions.Fakes.ShimExpectationViolationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Rhino.Mocks.Exceptions.Fakes.ShimObjectNotMockFromThisRepositoryException">
            <summary>Shim type of Rhino.Mocks.Exceptions.ObjectNotMockFromThisRepositoryException</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.ShimObjectNotMockFromThisRepositoryException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.ShimObjectNotMockFromThisRepositoryException.#ctor(Rhino.Mocks.Exceptions.ObjectNotMockFromThisRepositoryException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.ShimObjectNotMockFromThisRepositoryException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.ShimObjectNotMockFromThisRepositoryException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.ShimObjectNotMockFromThisRepositoryException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.ShimObjectNotMockFromThisRepositoryException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.ShimObjectNotMockFromThisRepositoryException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ObjectNotMockFromThisRepositoryException.ObjectNotMockFromThisRepositoryException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.ShimObjectNotMockFromThisRepositoryException.ConstructorString">
            <summary>Sets the shim of ObjectNotMockFromThisRepositoryException.ObjectNotMockFromThisRepositoryException(String message)</summary>
        </member>
        <member name="T:Rhino.Mocks.Exceptions.Fakes.ShimObjectNotMockFromThisRepositoryException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException">
            <summary>Stub type of Rhino.Mocks.Exceptions.ExpectationViolationException</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubExpectationViolationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubExpectationViolationException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.InitializeStub">
            <summary>Initializes a new instance of type StubExpectationViolationException</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubExpectationViolationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException">
            <summary>Stub type of Rhino.Mocks.Exceptions.ObjectNotMockFromThisRepositoryException</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubObjectNotMockFromThisRepositoryException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubObjectNotMockFromThisRepositoryException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.InitializeStub">
            <summary>Initializes a new instance of type StubObjectNotMockFromThisRepositoryException</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Rhino.Mocks.Exceptions.Fakes.StubObjectNotMockFromThisRepositoryException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation">
            <summary>Shim type of Rhino.Mocks.Expectations.AbstractExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.#ctor(Rhino.Mocks.Expectations.AbstractExpectation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.Bind(Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ActionOnMethodNotSpesified">
            <summary>Sets the shim of AbstractExpectation.ActionOnMethodNotSpesified()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ActionToExecuteGet">
            <summary>Sets the shim of AbstractExpectation.get_ActionToExecute()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ActionToExecuteSetDelegate">
            <summary>Sets the shim of AbstractExpectation.set_ActionToExecute(Delegate value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ActionsSatisfiedGet">
            <summary>Sets the shim of AbstractExpectation.get_ActionsSatisfied()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ActualCallsCountGet">
            <summary>Sets the shim of AbstractExpectation.get_ActualCallsCount()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AddActualCall">
            <summary>Sets the shim of AbstractExpectation.AddActualCall()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllowTentativeReturnGet">
            <summary>Sets the shim of AbstractExpectation.get_AllowTentativeReturn()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllowTentativeReturnSetBoolean">
            <summary>Sets the shim of AbstractExpectation.set_AllowTentativeReturn(Boolean value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AssertDelegateArgumentsMatchMethodDelegate">
            <summary>Sets the shim of AbstractExpectation.AssertDelegateArgumentsMatchMethod(Delegate callback)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AssertReturnTypeMatchDelegate">
            <summary>Sets the shim of AbstractExpectation.AssertReturnTypeMatch(Delegate value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AssertTypesMatchesObject">
            <summary>Sets the shim of AbstractExpectation.AssertTypesMatches(Object value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.BuildVerificationFailureMessage">
            <summary>Sets the shim of AbstractExpectation.BuildVerificationFailureMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.CanAcceptCallsGet">
            <summary>Sets the shim of AbstractExpectation.get_CanAcceptCalls()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ConstructorIExpectation">
            <summary>Sets the shim of AbstractExpectation.AbstractExpectation(IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ConstructorIInvocationRange">
            <summary>Sets the shim of AbstractExpectation.AbstractExpectation(IInvocation invocation, Range expectedRange)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.CreateErrorMessageString">
            <summary>Sets the shim of AbstractExpectation.CreateErrorMessage(String derivedMessage)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ExceptionToThrowGet">
            <summary>Sets the shim of AbstractExpectation.get_ExceptionToThrow()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ExceptionToThrowSetException">
            <summary>Sets the shim of AbstractExpectation.set_ExceptionToThrow(Exception value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ExecuteAction">
            <summary>Sets the shim of AbstractExpectation.ExecuteAction()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ExpectationSatisfiedGet">
            <summary>Sets the shim of AbstractExpectation.get_ExpectationSatisfied()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ExpectedGet">
            <summary>Sets the shim of AbstractExpectation.get_Expected()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ExpectedSetRange">
            <summary>Sets the shim of AbstractExpectation.set_Expected(Range value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.GetHashCode">
            <summary>Sets the shim of AbstractExpectation.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.HasReturnValueGet">
            <summary>Sets the shim of AbstractExpectation.get_HasReturnValue()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.IsExpectedObjectArray">
            <summary>Sets the shim of AbstractExpectation.IsExpected(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.MessageGet">
            <summary>Sets the shim of AbstractExpectation.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.MessageSetString">
            <summary>Sets the shim of AbstractExpectation.set_Message(String value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.MethodGet">
            <summary>Sets the shim of AbstractExpectation.get_Method()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.OriginalinvocationGet">
            <summary>Sets the shim of AbstractExpectation.get_Originalinvocation()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.OutRefParamsGet">
            <summary>Sets the shim of AbstractExpectation.get_OutRefParams()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.OutRefParamsSetObjectArray">
            <summary>Sets the shim of AbstractExpectation.set_OutRefParams(Object[] value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.RepeatableOptionGet">
            <summary>Sets the shim of AbstractExpectation.get_RepeatableOption()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.RepeatableOptionSetRepeatableOption">
            <summary>Sets the shim of AbstractExpectation.set_RepeatableOption(RepeatableOption value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ReturnOrThrowIInvocationObjectArray">
            <summary>Sets the shim of AbstractExpectation.ReturnOrThrow(IInvocation invocation, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ReturnValueGet">
            <summary>Sets the shim of AbstractExpectation.get_ReturnValue()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.ReturnValueSetObject">
            <summary>Sets the shim of AbstractExpectation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.SetupOutputAndRefParametersObjectArray">
            <summary>Sets the shim of AbstractExpectation.SetupOutputAndRefParameters(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.WhenCalledAddActionOfMethodInvocation">
            <summary>Sets the shim of AbstractExpectation.add_WhenCalled(Action`1&lt;MethodInvocation&gt; value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.WhenCalledRemoveActionOfMethodInvocation">
            <summary>Sets the shim of AbstractExpectation.remove_WhenCalled(Action`1&lt;MethodInvocation&gt; value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation._ctorb__0MethodInvocation">
            <summary>Sets the shim of AbstractExpectation.&lt;.ctor&gt;b__0(MethodInvocation param0)</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ActionOnMethodNotSpesified">
            <summary>Sets the shim of AbstractExpectation.ActionOnMethodNotSpesified()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ActionToExecuteGet">
            <summary>Sets the shim of AbstractExpectation.get_ActionToExecute()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ActionToExecuteSetDelegate">
            <summary>Sets the shim of AbstractExpectation.set_ActionToExecute(Delegate value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ActionsSatisfiedGet">
            <summary>Sets the shim of AbstractExpectation.get_ActionsSatisfied()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ActualCallsCountGet">
            <summary>Sets the shim of AbstractExpectation.get_ActualCallsCount()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.AddActualCall">
            <summary>Sets the shim of AbstractExpectation.AddActualCall()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.AllowTentativeReturnGet">
            <summary>Sets the shim of AbstractExpectation.get_AllowTentativeReturn()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.AllowTentativeReturnSetBoolean">
            <summary>Sets the shim of AbstractExpectation.set_AllowTentativeReturn(Boolean value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.AssertDelegateArgumentsMatchMethodDelegate">
            <summary>Sets the shim of AbstractExpectation.AssertDelegateArgumentsMatchMethod(Delegate callback)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.AssertReturnTypeMatchDelegate">
            <summary>Sets the shim of AbstractExpectation.AssertReturnTypeMatch(Delegate value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.AssertTypesMatchesObject">
            <summary>Sets the shim of AbstractExpectation.AssertTypesMatches(Object value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.BuildVerificationFailureMessage">
            <summary>Sets the shim of AbstractExpectation.BuildVerificationFailureMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.CanAcceptCallsGet">
            <summary>Sets the shim of AbstractExpectation.get_CanAcceptCalls()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.CreateErrorMessageString">
            <summary>Sets the shim of AbstractExpectation.CreateErrorMessage(String derivedMessage)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ExceptionToThrowGet">
            <summary>Sets the shim of AbstractExpectation.get_ExceptionToThrow()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ExceptionToThrowSetException">
            <summary>Sets the shim of AbstractExpectation.set_ExceptionToThrow(Exception value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ExecuteAction">
            <summary>Sets the shim of AbstractExpectation.ExecuteAction()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ExpectationSatisfiedGet">
            <summary>Sets the shim of AbstractExpectation.get_ExpectationSatisfied()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ExpectedGet">
            <summary>Sets the shim of AbstractExpectation.get_Expected()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ExpectedSetRange">
            <summary>Sets the shim of AbstractExpectation.set_Expected(Range value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.GetHashCode01">
            <summary>Sets the shim of AbstractExpectation.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.HasReturnValueGet">
            <summary>Sets the shim of AbstractExpectation.get_HasReturnValue()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.IsExpectedObjectArray">
            <summary>Sets the shim of AbstractExpectation.IsExpected(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.MessageGet">
            <summary>Sets the shim of AbstractExpectation.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.MessageSetString">
            <summary>Sets the shim of AbstractExpectation.set_Message(String value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.MethodGet">
            <summary>Sets the shim of AbstractExpectation.get_Method()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.OriginalinvocationGet">
            <summary>Sets the shim of AbstractExpectation.get_Originalinvocation()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.OutRefParamsGet">
            <summary>Sets the shim of AbstractExpectation.get_OutRefParams()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.OutRefParamsSetObjectArray">
            <summary>Sets the shim of AbstractExpectation.set_OutRefParams(Object[] value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.RepeatableOptionGet">
            <summary>Sets the shim of AbstractExpectation.get_RepeatableOption()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.RepeatableOptionSetRepeatableOption">
            <summary>Sets the shim of AbstractExpectation.set_RepeatableOption(RepeatableOption value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ReturnOrThrowIInvocationObjectArray">
            <summary>Sets the shim of AbstractExpectation.ReturnOrThrow(IInvocation invocation, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ReturnValueGet">
            <summary>Sets the shim of AbstractExpectation.get_ReturnValue()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.ReturnValueSetObject">
            <summary>Sets the shim of AbstractExpectation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.SetupOutputAndRefParametersObjectArray">
            <summary>Sets the shim of AbstractExpectation.SetupOutputAndRefParameters(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.WhenCalledAddActionOfMethodInvocation">
            <summary>Sets the shim of AbstractExpectation.add_WhenCalled(Action`1&lt;MethodInvocation&gt; value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAbstractExpectation.AllInstances.WhenCalledRemoveActionOfMethodInvocation">
            <summary>Sets the shim of AbstractExpectation.remove_WhenCalled(Action`1&lt;MethodInvocation&gt; value)</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation">
            <summary>Shim type of Rhino.Mocks.Expectations.AnyArgsExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.#ctor(Rhino.Mocks.Expectations.AnyArgsExpectation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.Bind(Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.AnyFormatArgArrayInt32">
            <summary>Sets the shim of AnyArgsExpectation.AnyFormatArg(Array args, Int32 i)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.ConstructorIExpectation">
            <summary>Sets the shim of AnyArgsExpectation.AnyArgsExpectation(IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.ConstructorIInvocationRange">
            <summary>Sets the shim of AnyArgsExpectation.AnyArgsExpectation(IInvocation invocation, Range expectedRange)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.DoIsExpectedObjectArray">
            <summary>Sets the shim of AnyArgsExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.EqualsObject">
            <summary>Sets the shim of AnyArgsExpectation.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.ErrorMessageGet">
            <summary>Sets the shim of AnyArgsExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.GetHashCode">
            <summary>Sets the shim of AnyArgsExpectation.GetHashCode()</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.AllInstances.DoIsExpectedObjectArray">
            <summary>Sets the shim of AnyArgsExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.AllInstances.EqualsObject">
            <summary>Sets the shim of AnyArgsExpectation.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.AllInstances.ErrorMessageGet">
            <summary>Sets the shim of AnyArgsExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimAnyArgsExpectation.AllInstances.GetHashCode01">
            <summary>Sets the shim of AnyArgsExpectation.GetHashCode()</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation">
            <summary>Shim type of Rhino.Mocks.Expectations.ArgsEqualExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.#ctor(Rhino.Mocks.Expectations.ArgsEqualExpectation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.Bind(Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.ConstructorIInvocationObjectArrayRange">
            <summary>Sets the shim of ArgsEqualExpectation.ArgsEqualExpectation(IInvocation invocation, Object[] expectedArgs, Range expectedRange)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.DoIsExpectedObjectArray">
            <summary>Sets the shim of ArgsEqualExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.EqualsObject">
            <summary>Sets the shim of ArgsEqualExpectation.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.ErrorMessageGet">
            <summary>Sets the shim of ArgsEqualExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.ExpectedArgsGet">
            <summary>Sets the shim of ArgsEqualExpectation.get_ExpectedArgs()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.FormatArgArrayInt32">
            <summary>Sets the shim of ArgsEqualExpectation.FormatArg(Array args, Int32 i)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.GetHashCode">
            <summary>Sets the shim of ArgsEqualExpectation.GetHashCode()</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.AllInstances.DoIsExpectedObjectArray">
            <summary>Sets the shim of ArgsEqualExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.AllInstances.EqualsObject">
            <summary>Sets the shim of ArgsEqualExpectation.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.AllInstances.ErrorMessageGet">
            <summary>Sets the shim of ArgsEqualExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.AllInstances.ExpectedArgsGet">
            <summary>Sets the shim of ArgsEqualExpectation.get_ExpectedArgs()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimArgsEqualExpectation.AllInstances.GetHashCode01">
            <summary>Sets the shim of ArgsEqualExpectation.GetHashCode()</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation">
            <summary>Shim type of Rhino.Mocks.Expectations.CallbackExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.#ctor(Rhino.Mocks.Expectations.CallbackExpectation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.Bind(Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.ConstructorIExpectationDelegate">
            <summary>Sets the shim of CallbackExpectation.CallbackExpectation(IExpectation expectation, Delegate callback)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.ConstructorIInvocationDelegateRange">
            <summary>Sets the shim of CallbackExpectation.CallbackExpectation(IInvocation invocation, Delegate callback, Range expectedRange)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.DoIsExpectedObjectArray">
            <summary>Sets the shim of CallbackExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.EqualsObject">
            <summary>Sets the shim of CallbackExpectation.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.ErrorMessageGet">
            <summary>Sets the shim of CallbackExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.GetHashCode">
            <summary>Sets the shim of CallbackExpectation.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.ValidateCallback">
            <summary>Sets the shim of CallbackExpectation.ValidateCallback()</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.AllInstances.DoIsExpectedObjectArray">
            <summary>Sets the shim of CallbackExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.AllInstances.EqualsObject">
            <summary>Sets the shim of CallbackExpectation.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.AllInstances.ErrorMessageGet">
            <summary>Sets the shim of CallbackExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.AllInstances.GetHashCode01">
            <summary>Sets the shim of CallbackExpectation.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimCallbackExpectation.AllInstances.ValidateCallback">
            <summary>Sets the shim of CallbackExpectation.ValidateCallback()</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation">
            <summary>Shim type of Rhino.Mocks.Expectations.ConstraintsExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.#ctor(Rhino.Mocks.Expectations.ConstraintsExpectation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.Bind(Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.ConstraintsMatchMethod">
            <summary>Sets the shim of ConstraintsExpectation.ConstraintsMatchMethod()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.ConstructorIExpectationAbstractConstraintArray">
            <summary>Sets the shim of ConstraintsExpectation.ConstraintsExpectation(IExpectation expectation, AbstractConstraint[] constraints)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.ConstructorIInvocationAbstractConstraintArrayRange">
            <summary>Sets the shim of ConstraintsExpectation.ConstraintsExpectation(IInvocation invocation, AbstractConstraint[] constraints, Range expectedRange)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.DoIsExpectedObjectArray">
            <summary>Sets the shim of ConstraintsExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.EqualsObject">
            <summary>Sets the shim of ConstraintsExpectation.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.ErrorMessageGet">
            <summary>Sets the shim of ConstraintsExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.FormatArgWithConstraintArrayInt32">
            <summary>Sets the shim of ConstraintsExpectation.FormatArgWithConstraint(Array args, Int32 i)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.GetHashCode">
            <summary>Sets the shim of ConstraintsExpectation.GetHashCode()</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.AllInstances.ConstraintsMatchMethod">
            <summary>Sets the shim of ConstraintsExpectation.ConstraintsMatchMethod()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.AllInstances.DoIsExpectedObjectArray">
            <summary>Sets the shim of ConstraintsExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.AllInstances.EqualsObject">
            <summary>Sets the shim of ConstraintsExpectation.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.AllInstances.ErrorMessageGet">
            <summary>Sets the shim of ConstraintsExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.AllInstances.FormatArgWithConstraintArrayInt32">
            <summary>Sets the shim of ConstraintsExpectation.FormatArgWithConstraint(Array args, Int32 i)</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.ShimConstraintsExpectation.AllInstances.GetHashCode01">
            <summary>Sets the shim of ConstraintsExpectation.GetHashCode()</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation">
            <summary>Stub type of Rhino.Mocks.Expectations.AbstractExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.#ctor(Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.#ctor(Castle.Core.Interceptor.IInvocation,Rhino.Mocks.Impl.Range)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.DoIsExpected(System.Object[])">
            <summary>Sets the stub of AbstractExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.DoIsExpectedObjectArray">
            <summary>Sets the stub of AbstractExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.Equals(System.Object)">
            <summary>Sets the stub of AbstractExpectation.Equals(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.EqualsObject">
            <summary>Sets the stub of AbstractExpectation.Equals(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.ErrorMessageGet">
            <summary>Sets the stub of AbstractExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.GetHashCode">
            <summary>Sets the stub of AbstractExpectation.GetHashCode()</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.GetHashCode01">
            <summary>Sets the stub of AbstractExpectation.GetHashCode()</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractExpectation</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.ErrorMessage">
            <summary>Sets the stub of AbstractExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubAbstractExpectation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation">
            <summary>Stub type of Rhino.Mocks.Expectations.AnyArgsExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.#ctor(Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.#ctor(Castle.Core.Interceptor.IInvocation,Rhino.Mocks.Impl.Range)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.DoIsExpected(System.Object[])">
            <summary>Sets the stub of AnyArgsExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.DoIsExpectedObjectArray">
            <summary>Sets the stub of AnyArgsExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.Equals(System.Object)">
            <summary>Sets the stub of AnyArgsExpectation.Equals(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.EqualsObject">
            <summary>Sets the stub of AnyArgsExpectation.Equals(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.ErrorMessageGet">
            <summary>Sets the stub of AnyArgsExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.GetHashCode">
            <summary>Sets the stub of AnyArgsExpectation.GetHashCode()</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.GetHashCode01">
            <summary>Sets the stub of AnyArgsExpectation.GetHashCode()</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.InitializeStub">
            <summary>Initializes a new instance of type StubAnyArgsExpectation</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.ErrorMessage">
            <summary>Sets the stub of AnyArgsExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubAnyArgsExpectation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation">
            <summary>Stub type of Rhino.Mocks.Expectations.ArgsEqualExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.#ctor(Castle.Core.Interceptor.IInvocation,System.Object[],Rhino.Mocks.Impl.Range)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.DoIsExpected(System.Object[])">
            <summary>Sets the stub of ArgsEqualExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.DoIsExpectedObjectArray">
            <summary>Sets the stub of ArgsEqualExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.Equals(System.Object)">
            <summary>Sets the stub of ArgsEqualExpectation.Equals(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.EqualsObject">
            <summary>Sets the stub of ArgsEqualExpectation.Equals(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.ErrorMessageGet">
            <summary>Sets the stub of ArgsEqualExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.GetHashCode">
            <summary>Sets the stub of ArgsEqualExpectation.GetHashCode()</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.GetHashCode01">
            <summary>Sets the stub of ArgsEqualExpectation.GetHashCode()</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.InitializeStub">
            <summary>Initializes a new instance of type StubArgsEqualExpectation</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.ErrorMessage">
            <summary>Sets the stub of ArgsEqualExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubArgsEqualExpectation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation">
            <summary>Stub type of Rhino.Mocks.Expectations.CallbackExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.#ctor(Rhino.Mocks.Interfaces.IExpectation,System.Delegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.#ctor(Castle.Core.Interceptor.IInvocation,System.Delegate,Rhino.Mocks.Impl.Range)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.DoIsExpected(System.Object[])">
            <summary>Sets the stub of CallbackExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.DoIsExpectedObjectArray">
            <summary>Sets the stub of CallbackExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.Equals(System.Object)">
            <summary>Sets the stub of CallbackExpectation.Equals(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.EqualsObject">
            <summary>Sets the stub of CallbackExpectation.Equals(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.ErrorMessageGet">
            <summary>Sets the stub of CallbackExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.GetHashCode">
            <summary>Sets the stub of CallbackExpectation.GetHashCode()</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.GetHashCode01">
            <summary>Sets the stub of CallbackExpectation.GetHashCode()</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.InitializeStub">
            <summary>Initializes a new instance of type StubCallbackExpectation</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.ErrorMessage">
            <summary>Sets the stub of CallbackExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubCallbackExpectation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation">
            <summary>Stub type of Rhino.Mocks.Expectations.ConstraintsExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.#ctor(Rhino.Mocks.Interfaces.IExpectation,Rhino.Mocks.Constraints.AbstractConstraint[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.#ctor(Castle.Core.Interceptor.IInvocation,Rhino.Mocks.Constraints.AbstractConstraint[],Rhino.Mocks.Impl.Range)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.DoIsExpected(System.Object[])">
            <summary>Sets the stub of ConstraintsExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.DoIsExpectedObjectArray">
            <summary>Sets the stub of ConstraintsExpectation.DoIsExpected(Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.Equals(System.Object)">
            <summary>Sets the stub of ConstraintsExpectation.Equals(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.EqualsObject">
            <summary>Sets the stub of ConstraintsExpectation.Equals(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.ErrorMessageGet">
            <summary>Sets the stub of ConstraintsExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.GetHashCode">
            <summary>Sets the stub of ConstraintsExpectation.GetHashCode()</summary>
        </member>
        <member name="F:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.GetHashCode01">
            <summary>Sets the stub of ConstraintsExpectation.GetHashCode()</summary>
        </member>
        <member name="M:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.InitializeStub">
            <summary>Initializes a new instance of type StubConstraintsExpectation</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.ErrorMessage">
            <summary>Sets the stub of ConstraintsExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Expectations.Fakes.StubConstraintsExpectation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimArg">
            <summary>Shim type of Rhino.Mocks.Arg</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimArg.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimArg.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimArg.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimArg.IsOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Sets the shim of Arg.Is(!!0 arg)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimArg.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimArg.TextGet">
            <summary>Sets the shim of Arg.get_Text()</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimArg`1">
            <summary>Shim type of Rhino.Mocks.Arg`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimArg`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimArg`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimArg`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimArg`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimArg`1.IsGet">
            <summary>Sets the shim of Arg`1.get_Is()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimArg`1.ListGet">
            <summary>Sets the shim of Arg`1.get_List()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimArg`1.MatchesAbstractConstraint">
            <summary>Sets the shim of Arg`1.Matches(AbstractConstraint constraint)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimArg`1.MatchesExpressionOfPredicateOfT0">
            <summary>Sets the shim of Arg`1.Matches(Expression`1&lt;Predicate`1&lt;!0&gt;&gt; predicate)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimArg`1.OutT0">
            <summary>Sets the shim of Arg`1.Out(!0 returnValue)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimArg`1.RefAbstractConstraintT0">
            <summary>Sets the shim of Arg`1.Ref(AbstractConstraint constraint, !0 returnValue)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimDelegates">
            <summary>Shim type of Rhino.Mocks.Delegates</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimDelegates.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimDelegates.#ctor(Rhino.Mocks.Delegates)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimDelegates.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimDelegates.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimDelegates.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimDelegates.Constructor">
            <summary>Sets the shim of Delegates.Delegates()</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimDelegates.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimDoNotExpect">
            <summary>Shim type of Rhino.Mocks.DoNotExpect</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimDoNotExpect.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimDoNotExpect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimDoNotExpect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimDoNotExpect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimDoNotExpect.CallExpectAction">
            <summary>Sets the shim of DoNotExpect.Call(Action actionToExecute)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimDoNotExpect.CallObject">
            <summary>Sets the shim of DoNotExpect.Call(Object ignored)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimExpect">
            <summary>Shim type of Rhino.Mocks.Expect</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimExpect.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimExpect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimExpect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimExpect.CallOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of Expect.Call(!!0 ignored)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimExpect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimExpect.CallExpectAction">
            <summary>Sets the shim of Expect.Call(Action actionToExecute)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimExpect.OnObject">
            <summary>Sets the shim of Expect.On(Object mockedInstace)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimLastCall">
            <summary>Shim type of Rhino.Mocks.LastCall</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.CallbackOf10DelegatesFunctionOfBooleanM0M1M2M3M4M5M6M7M8M9``10(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},Rhino.Mocks.Interfaces.IMethodOptions{System.Object}})">
            <summary>Sets the shim of LastCall.Callback(Function`11&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.CallbackOf1DelegatesFunctionOfBooleanM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0},Rhino.Mocks.Interfaces.IMethodOptions{System.Object}})">
            <summary>Sets the shim of LastCall.Callback(Function`2&lt;Boolean,!!0&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.CallbackOf2DelegatesFunctionOfBooleanM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1},Rhino.Mocks.Interfaces.IMethodOptions{System.Object}})">
            <summary>Sets the shim of LastCall.Callback(Function`3&lt;Boolean,!!0,!!1&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.CallbackOf3DelegatesFunctionOfBooleanM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2},Rhino.Mocks.Interfaces.IMethodOptions{System.Object}})">
            <summary>Sets the shim of LastCall.Callback(Function`4&lt;Boolean,!!0,!!1,!!2&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.CallbackOf4DelegatesFunctionOfBooleanM0M1M2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3},Rhino.Mocks.Interfaces.IMethodOptions{System.Object}})">
            <summary>Sets the shim of LastCall.Callback(Function`5&lt;Boolean,!!0,!!1,!!2,!!3&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.CallbackOf5DelegatesFunctionOfBooleanM0M1M2M3M4``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4},Rhino.Mocks.Interfaces.IMethodOptions{System.Object}})">
            <summary>Sets the shim of LastCall.Callback(Function`6&lt;Boolean,!!0,!!1,!!2,!!3,!!4&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.CallbackOf6DelegatesFunctionOfBooleanM0M1M2M3M4M5``6(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5},Rhino.Mocks.Interfaces.IMethodOptions{System.Object}})">
            <summary>Sets the shim of LastCall.Callback(Function`7&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.CallbackOf7DelegatesFunctionOfBooleanM0M1M2M3M4M5M6``7(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6},Rhino.Mocks.Interfaces.IMethodOptions{System.Object}})">
            <summary>Sets the shim of LastCall.Callback(Function`8&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.CallbackOf8DelegatesFunctionOfBooleanM0M1M2M3M4M5M6M7``8(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7},Rhino.Mocks.Interfaces.IMethodOptions{System.Object}})">
            <summary>Sets the shim of LastCall.Callback(Function`9&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.CallbackOf9DelegatesFunctionOfBooleanM0M1M2M3M4M5M6M7M8``9(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7,``8},Rhino.Mocks.Interfaces.IMethodOptions{System.Object}})">
            <summary>Sets the shim of LastCall.Callback(Function`10&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.GetOptionsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of LastCall.GetOptions()</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimLastCall.ReturnOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of LastCall.Return(!!0 objToReturn)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.CallOriginalMethod">
            <summary>Sets the shim of LastCall.CallOriginalMethod()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.CallOriginalMethodOriginalCallOptions">
            <summary>Sets the shim of LastCall.CallOriginalMethod(OriginalCallOptions options)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.CallbackDelegate">
            <summary>Sets the shim of LastCall.Callback(Delegate callback)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.CallbackDelegatesFunctionOfBoolean">
            <summary>Sets the shim of LastCall.Callback(Function`1&lt;Boolean&gt; callback)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.ConstraintsAbstractConstraintArray">
            <summary>Sets the shim of LastCall.Constraints(AbstractConstraint[] constraints)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.DoDelegate">
            <summary>Sets the shim of LastCall.Do(Delegate action)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.GetEventRaiser">
            <summary>Sets the shim of LastCall.GetEventRaiser()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.IgnoreArguments">
            <summary>Sets the shim of LastCall.IgnoreArguments()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.MessageString">
            <summary>Sets the shim of LastCall.Message(String documentationMessage)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.OnObject">
            <summary>Sets the shim of LastCall.On(Object mockedInstance)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.OutRefObjectArray">
            <summary>Sets the shim of LastCall.OutRef(Object[] parameters)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.PropertyBehavior">
            <summary>Sets the shim of LastCall.PropertyBehavior()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.RepeatGet">
            <summary>Sets the shim of LastCall.get_Repeat()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.ReturnObject">
            <summary>Sets the shim of LastCall.Return(Object objToReturn)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimLastCall.ThrowException">
            <summary>Sets the shim of LastCall.Throw(Exception exception)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimMethodInvocation">
            <summary>Shim type of Rhino.Mocks.MethodInvocation</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMethodInvocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMethodInvocation.#ctor(Rhino.Mocks.MethodInvocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMethodInvocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMethodInvocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMethodInvocation.ArgumentsGet">
            <summary>Sets the shim of MethodInvocation.get_Arguments()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMethodInvocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMethodInvocation.ConstructorIInvocation">
            <summary>Sets the shim of MethodInvocation.MethodInvocation(IInvocation invocation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMethodInvocation.MethodGet">
            <summary>Sets the shim of MethodInvocation.get_Method()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMethodInvocation.ReturnValueGet">
            <summary>Sets the shim of MethodInvocation.get_ReturnValue()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMethodInvocation.ReturnValueSetObject">
            <summary>Sets the shim of MethodInvocation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimMethodInvocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMethodInvocation.AllInstances.ArgumentsGet">
            <summary>Sets the shim of MethodInvocation.get_Arguments()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMethodInvocation.AllInstances.MethodGet">
            <summary>Sets the shim of MethodInvocation.get_Method()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMethodInvocation.AllInstances.ReturnValueGet">
            <summary>Sets the shim of MethodInvocation.get_ReturnValue()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMethodInvocation.AllInstances.ReturnValueSetObject">
            <summary>Sets the shim of MethodInvocation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimMockRepository">
            <summary>Shim type of Rhino.Mocks.MockRepository</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.#ctor(Rhino.Mocks.MockRepository)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.CreateMockInReplayOf1FuncOfMockRepositoryM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{Rhino.Mocks.MockRepository,``0},``0})">
            <summary>Sets the shim of MockRepository.CreateMockInReplay(Func`2&lt;MockRepository,!!0&gt; createMock)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.CreateMockOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.CreateMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.CreateMockWithRemotingOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.CreateMockWithRemoting(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.CreateMultiMockOf1TypeArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type[],``0})">
            <summary>Sets the shim of MockRepository.CreateMultiMock(Type[] extraTypes)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.CreateMultiMockOf1TypeArrayObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type[],System.Object[],``0})">
            <summary>Sets the shim of MockRepository.CreateMultiMock(Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.DynamicMockOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.DynamicMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.DynamicMockWithRemotingOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.DynamicMockWithRemoting(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.DynamicMultiMockOf1TypeArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type[],``0})">
            <summary>Sets the shim of MockRepository.DynamicMultiMock(Type[] extraTypes)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.DynamicMultiMockOf1TypeArrayObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type[],System.Object[],``0})">
            <summary>Sets the shim of MockRepository.DynamicMultiMock(Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.GenerateDynamicMockWithRemotingOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.GenerateDynamicMockWithRemoting(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.GenerateMockOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.GenerateMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.GenerateMockOf2ObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.GenerateMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.GenerateMockOf3ObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.GenerateMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.GeneratePartialMockOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.GeneratePartialMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.GeneratePartialMockOf2ObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.GeneratePartialMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.GeneratePartialMockOf3ObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.GeneratePartialMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.GenerateStrictMockOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.GenerateStrictMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.GenerateStrictMockOf2ObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.GenerateStrictMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.GenerateStrictMockOf3ObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.GenerateStrictMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.GenerateStrictMockWithRemotingOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.GenerateStrictMockWithRemoting(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.GenerateStubOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.GenerateStub(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.LastMethodCallOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of MockRepository.LastMethodCall(Object mockedInstance)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.PartialMockOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.PartialMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.PartialMultiMockOf1TypeArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type[],``0})">
            <summary>Sets the shim of MockRepository.PartialMultiMock(Type[] extraTypes)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.PartialMultiMockOf1TypeArrayObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type[],System.Object[],``0})">
            <summary>Sets the shim of MockRepository.PartialMultiMock(Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.StrictMockOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.StrictMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.StrictMockWithRemotingOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.StrictMockWithRemoting(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.StrictMultiMockOf1TypeArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type[],``0})">
            <summary>Sets the shim of MockRepository.StrictMultiMock(Type[] extraTypes)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.StrictMultiMockOf1TypeArrayObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type[],System.Object[],``0})">
            <summary>Sets the shim of MockRepository.StrictMultiMock(Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.StubOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object[],``0})">
            <summary>Sets the shim of MockRepository.Stub(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.BackToRecordAll">
            <summary>Sets the shim of MockRepository.BackToRecordAll()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.BackToRecordAllBackToRecordOptions">
            <summary>Sets the shim of MockRepository.BackToRecordAll(BackToRecordOptions options)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.BackToRecordObject">
            <summary>Sets the shim of MockRepository.BackToRecord(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.BackToRecordObjectBackToRecordOptions">
            <summary>Sets the shim of MockRepository.BackToRecord(Object obj, BackToRecordOptions options)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.ClearLastProxyObject">
            <summary>Sets the shim of MockRepository.ClearLastProxy(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.Constructor">
            <summary>Sets the shim of MockRepository.MockRepository()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.CreateDynamicRecordStateIMockedObject">
            <summary>Sets the shim of MockRepository.CreateDynamicRecordState(IMockedObject mockedObject)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.CreateMockTypeObjectArray">
            <summary>Sets the shim of MockRepository.CreateMock(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.CreateMockWithRemotingTypeObjectArray">
            <summary>Sets the shim of MockRepository.CreateMockWithRemoting(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.CreateMultiMockTypeTypeArray">
            <summary>Sets the shim of MockRepository.CreateMultiMock(Type mainType, Type[] extraTypes)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.CreateMultiMockTypeTypeArrayObjectArray">
            <summary>Sets the shim of MockRepository.CreateMultiMock(Type mainType, Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.CreatePartialRecordStateIMockedObject">
            <summary>Sets the shim of MockRepository.CreatePartialRecordState(IMockedObject mockedObject)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.CreateRecordStateIMockedObject">
            <summary>Sets the shim of MockRepository.CreateRecordState(IMockedObject mockedObject)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.DynamicMockTypeObjectArray">
            <summary>Sets the shim of MockRepository.DynamicMock(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.DynamicMockWithRemotingTypeObjectArray">
            <summary>Sets the shim of MockRepository.DynamicMockWithRemoting(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.DynamicMultiMockTypeTypeArray">
            <summary>Sets the shim of MockRepository.DynamicMultiMock(Type mainType, Type[] extraTypes)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.DynamicMultiMockTypeTypeArrayObjectArray">
            <summary>Sets the shim of MockRepository.DynamicMultiMock(Type mainType, Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.GenerateMockTypeTypeArrayObjectArray">
            <summary>Sets the shim of MockRepository.GenerateMock(Type type, Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.GeneratePartialMockTypeTypeArrayObjectArray">
            <summary>Sets the shim of MockRepository.GeneratePartialMock(Type type, Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.GenerateStrictMockTypeTypeArrayObjectArray">
            <summary>Sets the shim of MockRepository.GenerateStrictMock(Type type, Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.GenerateStubTypeObjectArray">
            <summary>Sets the shim of MockRepository.GenerateStub(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.GetMockObjectFromInvocationProxyObject">
            <summary>Sets the shim of MockRepository.GetMockObjectFromInvocationProxy(Object invocationProxy)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.GetMockedObjectObject">
            <summary>Sets the shim of MockRepository.GetMockedObject(Object mockedInstance)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.GetMockedObjectOrNullObject">
            <summary>Sets the shim of MockRepository.GetMockedObjectOrNull(Object mockedInstance)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.IsInReplayModeObject">
            <summary>Sets the shim of MockRepository.IsInReplayMode(Object mock)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.IsMockObjectFromThisRepositoryObject">
            <summary>Sets the shim of MockRepository.IsMockObjectFromThisRepository(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.IsStubObject">
            <summary>Sets the shim of MockRepository.IsStub(Object proxy)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.LastMockedObjectGet">
            <summary>Sets the shim of MockRepository.get_LastMockedObject()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.MethodCallIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the shim of MockRepository.MethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.NotInsideOrderring">
            <summary>Sets the shim of MockRepository.NotInsideOrderring()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.Ordered">
            <summary>Sets the shim of MockRepository.Ordered()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.PartialMockTypeObjectArray">
            <summary>Sets the shim of MockRepository.PartialMock(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.PartialMultiMockTypeTypeArray">
            <summary>Sets the shim of MockRepository.PartialMultiMock(Type type, Type[] extraTypes)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.PartialMultiMockTypeTypeArrayObjectArray">
            <summary>Sets the shim of MockRepository.PartialMultiMock(Type type, Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.Playback">
            <summary>Sets the shim of MockRepository.Playback()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.PopRecorder">
            <summary>Sets the shim of MockRepository.PopRecorder()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.PushRecorderIMethodRecorder">
            <summary>Sets the shim of MockRepository.PushRecorder(IMethodRecorder newRecorder)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.Record">
            <summary>Sets the shim of MockRepository.Record()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.RecorderGet">
            <summary>Sets the shim of MockRepository.get_Recorder()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.RegisterPropertyBehaviorOnIMockedObject">
            <summary>Sets the shim of MockRepository.RegisterPropertyBehaviorOn(IMockedObject instance)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.ReplayAll">
            <summary>Sets the shim of MockRepository.ReplayAll()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.ReplayCoreObjectBoolean">
            <summary>Sets the shim of MockRepository.ReplayCore(Object obj, Boolean checkInsideOrdering)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.ReplayObject">
            <summary>Sets the shim of MockRepository.Replay(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.ReplayerGet">
            <summary>Sets the shim of MockRepository.get_Replayer()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.SetExceptionToBeThrownOnVerifyObjectExpectationViolationException">
            <summary>Sets the shim of MockRepository.SetExceptionToBeThrownOnVerify(Object proxy, ExpectationViolationException expectationViolationException)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.ShouldUseRemotingProxyTypeObjectArray">
            <summary>Sets the shim of MockRepository.ShouldUseRemotingProxy(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.StaticConstructor">
            <summary>Sets the shim of MockRepository.MockRepository()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.StrictMockTypeObjectArray">
            <summary>Sets the shim of MockRepository.StrictMock(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.StrictMockWithRemotingTypeObjectArray">
            <summary>Sets the shim of MockRepository.StrictMockWithRemoting(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.StrictMultiMockTypeTypeArray">
            <summary>Sets the shim of MockRepository.StrictMultiMock(Type mainType, Type[] extraTypes)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.StrictMultiMockTypeTypeArrayObjectArray">
            <summary>Sets the shim of MockRepository.StrictMultiMock(Type mainType, Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.StubTypeObjectArray">
            <summary>Sets the shim of MockRepository.Stub(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.Unordered">
            <summary>Sets the shim of MockRepository.Unordered()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.VerifyAll">
            <summary>Sets the shim of MockRepository.VerifyAll()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.VerifyObject">
            <summary>Sets the shim of MockRepository.Verify(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository._Stubb__1cIMockedObject">
            <summary>Sets the shim of MockRepository.&lt;Stub&gt;b__1c(IMockedObject mockedObject)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.CreateMockOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Object[],``0})">
            <summary>Sets the shim of MockRepository.CreateMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.CreateMockWithRemotingOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Object[],``0})">
            <summary>Sets the shim of MockRepository.CreateMockWithRemoting(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.CreateMultiMockOf1TypeArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Type[],``0})">
            <summary>Sets the shim of MockRepository.CreateMultiMock(Type[] extraTypes)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.CreateMultiMockOf1TypeArrayObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Type[],System.Object[],``0})">
            <summary>Sets the shim of MockRepository.CreateMultiMock(Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.DynamicMockOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Object[],``0})">
            <summary>Sets the shim of MockRepository.DynamicMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.DynamicMockWithRemotingOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Object[],``0})">
            <summary>Sets the shim of MockRepository.DynamicMockWithRemoting(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.DynamicMultiMockOf1TypeArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Type[],``0})">
            <summary>Sets the shim of MockRepository.DynamicMultiMock(Type[] extraTypes)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.DynamicMultiMockOf1TypeArrayObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Type[],System.Object[],``0})">
            <summary>Sets the shim of MockRepository.DynamicMultiMock(Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.LastMethodCallOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Object,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of MockRepository.LastMethodCall(Object mockedInstance)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.PartialMockOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Object[],``0})">
            <summary>Sets the shim of MockRepository.PartialMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.PartialMultiMockOf1TypeArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Type[],``0})">
            <summary>Sets the shim of MockRepository.PartialMultiMock(Type[] extraTypes)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.PartialMultiMockOf1TypeArrayObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Type[],System.Object[],``0})">
            <summary>Sets the shim of MockRepository.PartialMultiMock(Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.StrictMockOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Object[],``0})">
            <summary>Sets the shim of MockRepository.StrictMock(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.StrictMockWithRemotingOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Object[],``0})">
            <summary>Sets the shim of MockRepository.StrictMockWithRemoting(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.StrictMultiMockOf1TypeArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Type[],``0})">
            <summary>Sets the shim of MockRepository.StrictMultiMock(Type[] extraTypes)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.StrictMultiMockOf1TypeArrayObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Type[],System.Object[],``0})">
            <summary>Sets the shim of MockRepository.StrictMultiMock(Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.StubOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.MockRepository,System.Object[],``0})">
            <summary>Sets the shim of MockRepository.Stub(Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.BackToRecordAll">
            <summary>Sets the shim of MockRepository.BackToRecordAll()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.BackToRecordAllBackToRecordOptions">
            <summary>Sets the shim of MockRepository.BackToRecordAll(BackToRecordOptions options)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.BackToRecordObject">
            <summary>Sets the shim of MockRepository.BackToRecord(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.BackToRecordObjectBackToRecordOptions">
            <summary>Sets the shim of MockRepository.BackToRecord(Object obj, BackToRecordOptions options)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.ClearLastProxyObject">
            <summary>Sets the shim of MockRepository.ClearLastProxy(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.CreateDynamicRecordStateIMockedObject">
            <summary>Sets the shim of MockRepository.CreateDynamicRecordState(IMockedObject mockedObject)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.CreateMockTypeObjectArray">
            <summary>Sets the shim of MockRepository.CreateMock(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.CreateMockWithRemotingTypeObjectArray">
            <summary>Sets the shim of MockRepository.CreateMockWithRemoting(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.CreateMultiMockTypeTypeArray">
            <summary>Sets the shim of MockRepository.CreateMultiMock(Type mainType, Type[] extraTypes)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.CreateMultiMockTypeTypeArrayObjectArray">
            <summary>Sets the shim of MockRepository.CreateMultiMock(Type mainType, Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.CreatePartialRecordStateIMockedObject">
            <summary>Sets the shim of MockRepository.CreatePartialRecordState(IMockedObject mockedObject)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.CreateRecordStateIMockedObject">
            <summary>Sets the shim of MockRepository.CreateRecordState(IMockedObject mockedObject)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.DynamicMockTypeObjectArray">
            <summary>Sets the shim of MockRepository.DynamicMock(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.DynamicMockWithRemotingTypeObjectArray">
            <summary>Sets the shim of MockRepository.DynamicMockWithRemoting(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.DynamicMultiMockTypeTypeArray">
            <summary>Sets the shim of MockRepository.DynamicMultiMock(Type mainType, Type[] extraTypes)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.DynamicMultiMockTypeTypeArrayObjectArray">
            <summary>Sets the shim of MockRepository.DynamicMultiMock(Type mainType, Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.GetMockObjectFromInvocationProxyObject">
            <summary>Sets the shim of MockRepository.GetMockObjectFromInvocationProxy(Object invocationProxy)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.IsInReplayModeObject">
            <summary>Sets the shim of MockRepository.IsInReplayMode(Object mock)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.IsMockObjectFromThisRepositoryObject">
            <summary>Sets the shim of MockRepository.IsMockObjectFromThisRepository(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.MethodCallIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the shim of MockRepository.MethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.NotInsideOrderring">
            <summary>Sets the shim of MockRepository.NotInsideOrderring()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.Ordered">
            <summary>Sets the shim of MockRepository.Ordered()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.PartialMockTypeObjectArray">
            <summary>Sets the shim of MockRepository.PartialMock(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.PartialMultiMockTypeTypeArray">
            <summary>Sets the shim of MockRepository.PartialMultiMock(Type type, Type[] extraTypes)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.PartialMultiMockTypeTypeArrayObjectArray">
            <summary>Sets the shim of MockRepository.PartialMultiMock(Type type, Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.Playback">
            <summary>Sets the shim of MockRepository.Playback()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.PopRecorder">
            <summary>Sets the shim of MockRepository.PopRecorder()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.PushRecorderIMethodRecorder">
            <summary>Sets the shim of MockRepository.PushRecorder(IMethodRecorder newRecorder)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.Record">
            <summary>Sets the shim of MockRepository.Record()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.RecorderGet">
            <summary>Sets the shim of MockRepository.get_Recorder()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.RegisterPropertyBehaviorOnIMockedObject">
            <summary>Sets the shim of MockRepository.RegisterPropertyBehaviorOn(IMockedObject instance)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.ReplayAll">
            <summary>Sets the shim of MockRepository.ReplayAll()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.ReplayCoreObjectBoolean">
            <summary>Sets the shim of MockRepository.ReplayCore(Object obj, Boolean checkInsideOrdering)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.ReplayObject">
            <summary>Sets the shim of MockRepository.Replay(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.ReplayerGet">
            <summary>Sets the shim of MockRepository.get_Replayer()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.StrictMockTypeObjectArray">
            <summary>Sets the shim of MockRepository.StrictMock(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.StrictMockWithRemotingTypeObjectArray">
            <summary>Sets the shim of MockRepository.StrictMockWithRemoting(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.StrictMultiMockTypeTypeArray">
            <summary>Sets the shim of MockRepository.StrictMultiMock(Type mainType, Type[] extraTypes)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.StrictMultiMockTypeTypeArrayObjectArray">
            <summary>Sets the shim of MockRepository.StrictMultiMock(Type mainType, Type[] extraTypes, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.StubTypeObjectArray">
            <summary>Sets the shim of MockRepository.Stub(Type type, Object[] argumentsForConstructor)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.Unordered">
            <summary>Sets the shim of MockRepository.Unordered()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.VerifyAll">
            <summary>Sets the shim of MockRepository.VerifyAll()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances.VerifyObject">
            <summary>Sets the shim of MockRepository.Verify(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMockRepository.AllInstances._Stubb__1cIMockedObject">
            <summary>Sets the shim of MockRepository.&lt;Stub&gt;b__1c(IMockedObject mockedObject)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimMocker">
            <summary>Shim type of Rhino.Mocks.Mocker</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMocker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMocker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimMocker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMocker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMocker.CurrentGet">
            <summary>Sets the shim of Mocker.get_Current()</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimMocker.CurrentSetMockRepository">
            <summary>Sets the shim of Mocker.set_Current(MockRepository value)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimRhinoMocks">
            <summary>Shim type of Rhino.Mocks.RhinoMocks</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocks.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocks.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocks.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimRhinoMocks.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimRhinoMocks.StaticConstructor">
            <summary>Sets the shim of RhinoMocks.RhinoMocks()</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions">
            <summary>Shim type of Rhino.Mocks.RhinoMocksExtensions</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.AssertExactlySingleExpectatonOf1MockRepositoryM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Rhino.Mocks.MockRepository,``0})">
            <summary>Sets the shim of RhinoMocksExtensions.AssertExactlySingleExpectaton(MockRepository mocks, !!0 mockToRecordExpectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.AssertWasCalledOf1M0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Action{``0}})">
            <summary>Sets the shim of RhinoMocksExtensions.AssertWasCalled(!!0 mock, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.AssertWasCalledOf1M0ActionOfM0ActionOfIMethodOptionsOfObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Action{``0},System.Action{Rhino.Mocks.Interfaces.IMethodOptions{System.Object}}})">
            <summary>Sets the shim of RhinoMocksExtensions.AssertWasCalled(!!0 mock, Action`1&lt;!!0&gt; action, Action`1&lt;IMethodOptions`1&lt;Object&gt;&gt; setupConstraints)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.AssertWasCalledOf1M0FuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Func{``0,System.Object}})">
            <summary>Sets the shim of RhinoMocksExtensions.AssertWasCalled(!!0 mock, Func`2&lt;!!0,Object&gt; action)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.AssertWasCalledOf1M0FuncOfM0ObjectActionOfIMethodOptionsOfObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Func{``0,System.Object},System.Action{Rhino.Mocks.Interfaces.IMethodOptions{System.Object}}})">
            <summary>Sets the shim of RhinoMocksExtensions.AssertWasCalled(!!0 mock, Func`2&lt;!!0,Object&gt; action, Action`1&lt;IMethodOptions`1&lt;Object&gt;&gt; setupConstraints)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.AssertWasNotCalledOf1M0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Action{``0}})">
            <summary>Sets the shim of RhinoMocksExtensions.AssertWasNotCalled(!!0 mock, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.AssertWasNotCalledOf1M0ActionOfM0ActionOfIMethodOptionsOfObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Action{``0},System.Action{Rhino.Mocks.Interfaces.IMethodOptions{System.Object}}})">
            <summary>Sets the shim of RhinoMocksExtensions.AssertWasNotCalled(!!0 mock, Action`1&lt;!!0&gt; action, Action`1&lt;IMethodOptions`1&lt;Object&gt;&gt; setupConstraints)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.AssertWasNotCalledOf1M0FuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Func{``0,System.Object}})">
            <summary>Sets the shim of RhinoMocksExtensions.AssertWasNotCalled(!!0 mock, Func`2&lt;!!0,Object&gt; action)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.AssertWasNotCalledOf1M0FuncOfM0ObjectActionOfIMethodOptionsOfObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Func{``0,System.Object},System.Action{Rhino.Mocks.Interfaces.IMethodOptions{System.Object}}})">
            <summary>Sets the shim of RhinoMocksExtensions.AssertWasNotCalled(!!0 mock, Func`2&lt;!!0,Object&gt; action, Action`1&lt;IMethodOptions`1&lt;Object&gt;&gt; setupConstraints)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.BackToRecordOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the shim of RhinoMocksExtensions.BackToRecord(!!0 mock)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.BackToRecordOf1M0BackToRecordOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,Rhino.Mocks.BackToRecordOptions})">
            <summary>Sets the shim of RhinoMocksExtensions.BackToRecord(!!0 mock, BackToRecordOptions options)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.ExpectOf1M0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{``0},Rhino.Mocks.Interfaces.IMethodOptions{Rhino.Mocks.RhinoMocksExtensions.VoidType}})">
            <summary>Sets the shim of RhinoMocksExtensions.Expect(!!0 mock, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.ExpectOf2M0FunctionOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Rhino.Mocks.Function{``0,``1},Rhino.Mocks.Interfaces.IMethodOptions{``1}})">
            <summary>Sets the shim of RhinoMocksExtensions.Expect(!!0 mock, Function`2&lt;!!0,!!1&gt; action)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.FindAppropriteTypeOf1IMockedObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Interfaces.IMockedObject,System.Type})">
            <summary>Sets the shim of RhinoMocksExtensions.FindAppropriteType(IMockedObject mockedObj)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.GetArgumentsForCallsMadeOnOf1M0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{``0},System.Collections.Generic.IList{System.Object[]}})">
            <summary>Sets the shim of RhinoMocksExtensions.GetArgumentsForCallsMadeOn(!!0 mock, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.GetArgumentsForCallsMadeOnOf1M0ActionOfM0ActionOfIMethodOptionsOfObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{``0},System.Action{Rhino.Mocks.Interfaces.IMethodOptions{System.Object}},System.Collections.Generic.IList{System.Object[]}})">
            <summary>Sets the shim of RhinoMocksExtensions.GetArgumentsForCallsMadeOn(!!0 mock, Action`1&lt;!!0&gt; action, Action`1&lt;IMethodOptions`1&lt;Object&gt;&gt; setupConstraints)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.GetEventRaiserOf1M0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{``0},Rhino.Mocks.Interfaces.IEventRaiser})">
            <summary>Sets the shim of RhinoMocksExtensions.GetEventRaiser(!!0 mockObject, Action`1&lt;!!0&gt; eventSubscription)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.GetMockRepositoryOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Rhino.Mocks.MockRepository})">
            <summary>Sets the shim of RhinoMocksExtensions.GetMockRepository(!!0 mock)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.RaiseOf1M0ActionOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Action{``0},System.Object[]})">
            <summary>Sets the shim of RhinoMocksExtensions.Raise(!!0 mockObject, Action`1&lt;!!0&gt; eventSubscription, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.RaiseOf1M0ActionOfM0ObjectEventArgs``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Action{``0},System.Object,System.EventArgs})">
            <summary>Sets the shim of RhinoMocksExtensions.Raise(!!0 mockObject, Action`1&lt;!!0&gt; eventSubscription, Object sender, EventArgs args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.ReplayOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the shim of RhinoMocksExtensions.Replay(!!0 mock)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.StubOf1M0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{``0},Rhino.Mocks.Interfaces.IMethodOptions{System.Object}})">
            <summary>Sets the shim of RhinoMocksExtensions.Stub(!!0 mock, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.StubOf2M0FunctionOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Rhino.Mocks.Function{``0,``1},Rhino.Mocks.Interfaces.IMethodOptions{``1}})">
            <summary>Sets the shim of RhinoMocksExtensions.Stub(!!0 mock, Function`2&lt;!!0,!!1&gt; action)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.DefaultConstraintSetupIMethodOptionsOfObject">
            <summary>Sets the shim of RhinoMocksExtensions.DefaultConstraintSetup(IMethodOptions`1&lt;Object&gt; options)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.VerifyAllExpectationsObject">
            <summary>Sets the shim of RhinoMocksExtensions.VerifyAllExpectations(Object mockObject)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.ShimVoidType">
            <summary>Shim type of Rhino.Mocks.RhinoMocksExtensions+VoidType</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.ShimVoidType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.ShimVoidType.#ctor(Rhino.Mocks.RhinoMocksExtensions.VoidType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.ShimVoidType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.ShimVoidType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.ShimVoidType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.ShimVoidType.Constructor">
            <summary>Sets the shim of VoidType.VoidType()</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimRhinoMocksExtensions.ShimVoidType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimSetupResult">
            <summary>Shim type of Rhino.Mocks.SetupResult</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimSetupResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimSetupResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimSetupResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimSetupResult.ForOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of SetupResult.For(!!0 ignored)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimSetupResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimSetupResult.OnObject">
            <summary>Sets the shim of SetupResult.On(Object mockedInstace)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimWith">
            <summary>Shim type of Rhino.Mocks.With</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimWith.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimWith.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimWith.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimWith.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimWith.MocksMockRepository">
            <summary>Sets the shim of With.Mocks(MockRepository mocks)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimWith.MocksMockRepositoryWithProc">
            <summary>Sets the shim of With.Mocks(MockRepository mocks, Proc methodCallThatHasMocks)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimWith.MocksWithProc">
            <summary>Sets the shim of With.Mocks(Proc methodCallThatHasMocks)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker">
            <summary>Shim type of Rhino.Mocks.With+FluentMocker</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.#ctor(Rhino.Mocks.With.FluentMocker)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.Bind(Rhino.Mocks.With.IMockVerifier)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.ConstructorMockRepository">
            <summary>Sets the shim of FluentMocker.FluentMocker(MockRepository mocks)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.ExpectingInSameOrderWithProc">
            <summary>Sets the shim of FluentMocker.ExpectingInSameOrder(Proc methodCallsDescribingExpectations)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.ExpectingWithProc">
            <summary>Sets the shim of FluentMocker.Expecting(Proc methodCallsDescribingExpectations)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.VerifyWithProc">
            <summary>Sets the shim of FluentMocker.Verify(Proc methodCallsToBeVerified)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.AllInstances.ExpectingInSameOrderWithProc">
            <summary>Sets the shim of FluentMocker.ExpectingInSameOrder(Proc methodCallsDescribingExpectations)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.AllInstances.ExpectingWithProc">
            <summary>Sets the shim of FluentMocker.Expecting(Proc methodCallsDescribingExpectations)</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.ShimWith.ShimFluentMocker.AllInstances.VerifyWithProc">
            <summary>Sets the shim of FluentMocker.Verify(Proc methodCallsToBeVerified)</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.StubDelegates">
            <summary>Stub type of Rhino.Mocks.Delegates</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.StubDelegates.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.StubDelegates.InitializeStub">
            <summary>Initializes a new instance of type StubDelegates</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.StubDelegates.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.StubDelegates.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.StubDelegates.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Fakes.StubMockRepository">
            <summary>Stub type of Rhino.Mocks.MockRepository</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.StubMockRepository.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Fakes.StubMockRepository.InitializeStub">
            <summary>Initializes a new instance of type StubMockRepository</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.StubMockRepository.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.StubMockRepository.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Fakes.StubMockRepository.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Generated.Fakes.ShimExpectationsList">
            <summary>Shim type of Rhino.Mocks.Generated.ExpectationsList</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.#ctor(Rhino.Mocks.Generated.ExpectationsList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.Bind(System.Collections.Generic.ICollection{Rhino.Mocks.Interfaces.IExpectation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.Bind(System.Collections.Generic.IEnumerable{Rhino.Mocks.Interfaces.IExpectation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.Bind(System.Collections.Generic.IList{Rhino.Mocks.Interfaces.IExpectation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.Bind(System.Collections.Generic.IReadOnlyCollection{Rhino.Mocks.Interfaces.IExpectation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.Bind(System.Collections.Generic.IReadOnlyList{Rhino.Mocks.Interfaces.IExpectation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.Constructor">
            <summary>Sets the shim of ExpectationsList.ExpectationsList()</summary>
        </member>
        <member name="T:Rhino.Mocks.Generated.Fakes.ShimExpectationsList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary">
            <summary>Shim type of Rhino.Mocks.Generated.ProxyMethodExpectationsDictionary</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.#ctor(Rhino.Mocks.Generated.ProxyMethodExpectationsDictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{Rhino.Mocks.MethodRecorders.ProxyMethodPair,Rhino.Mocks.Generated.ExpectationsList}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Rhino.Mocks.MethodRecorders.ProxyMethodPair,Rhino.Mocks.Generated.ExpectationsList}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{Rhino.Mocks.MethodRecorders.ProxyMethodPair,Rhino.Mocks.Generated.ExpectationsList}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.Bind(System.Collections.Generic.IDictionary{Rhino.Mocks.MethodRecorders.ProxyMethodPair,Rhino.Mocks.Generated.ExpectationsList})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.Bind(System.Collections.Generic.IReadOnlyDictionary{Rhino.Mocks.MethodRecorders.ProxyMethodPair,Rhino.Mocks.Generated.ExpectationsList})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.Constructor">
            <summary>Sets the shim of ProxyMethodExpectationsDictionary.ProxyMethodExpectationsDictionary()</summary>
        </member>
        <member name="T:Rhino.Mocks.Generated.Fakes.ShimProxyMethodExpectationsDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary">
            <summary>Shim type of Rhino.Mocks.Generated.ProxyStateDictionary</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.#ctor(Rhino.Mocks.Generated.ProxyStateDictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Object,Rhino.Mocks.Interfaces.IMockState}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Object,Rhino.Mocks.Interfaces.IMockState}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.Object,Rhino.Mocks.Interfaces.IMockState}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.Bind(System.Collections.Generic.IDictionary{System.Object,Rhino.Mocks.Interfaces.IMockState})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.Bind(System.Collections.Generic.IReadOnlyDictionary{System.Object,Rhino.Mocks.Interfaces.IMockState})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.Constructor">
            <summary>Sets the shim of ProxyStateDictionary.ProxyStateDictionary()</summary>
        </member>
        <member name="T:Rhino.Mocks.Generated.Fakes.ShimProxyStateDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Rhino.Mocks.Generated.Fakes.StubExpectationsList">
            <summary>Stub type of Rhino.Mocks.Generated.ExpectationsList</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.StubExpectationsList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.StubExpectationsList.InitializeStub">
            <summary>Initializes a new instance of type StubExpectationsList</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.StubExpectationsList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.StubExpectationsList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.StubExpectationsList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Generated.Fakes.StubProxyMethodExpectationsDictionary">
            <summary>Stub type of Rhino.Mocks.Generated.ProxyMethodExpectationsDictionary</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.StubProxyMethodExpectationsDictionary.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.StubProxyMethodExpectationsDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Rhino.Mocks.Generated.Fakes.StubProxyMethodExpectationsDictionary.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.StubProxyMethodExpectationsDictionary.InitializeStub">
            <summary>Initializes a new instance of type StubProxyMethodExpectationsDictionary</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.StubProxyMethodExpectationsDictionary.OnDeserialization(System.Object)">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:Rhino.Mocks.Generated.Fakes.StubProxyMethodExpectationsDictionary.OnDeserializationObject">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.StubProxyMethodExpectationsDictionary.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.StubProxyMethodExpectationsDictionary.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.StubProxyMethodExpectationsDictionary.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Generated.Fakes.StubProxyStateDictionary">
            <summary>Stub type of Rhino.Mocks.Generated.ProxyStateDictionary</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.StubProxyStateDictionary.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.StubProxyStateDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Rhino.Mocks.Generated.Fakes.StubProxyStateDictionary.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.StubProxyStateDictionary.InitializeStub">
            <summary>Initializes a new instance of type StubProxyStateDictionary</summary>
        </member>
        <member name="M:Rhino.Mocks.Generated.Fakes.StubProxyStateDictionary.OnDeserialization(System.Object)">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:Rhino.Mocks.Generated.Fakes.StubProxyStateDictionary.OnDeserializationObject">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.StubProxyStateDictionary.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.StubProxyStateDictionary.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Generated.Fakes.StubProxyStateDictionary.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectation">
            <summary>Shim type of Rhino.Mocks.Impl.CreateMethodExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectation.#ctor(Rhino.Mocks.Impl.CreateMethodExpectation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectation.Bind(Rhino.Mocks.Interfaces.ICreateMethodExpectation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectation.CallOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of CreateMethodExpectation.Call(!!0 ignored)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectation.ConstructorIMockedObjectObject">
            <summary>Sets the shim of CreateMethodExpectation.CreateMethodExpectation(IMockedObject mockedObject, Object mockedInstance)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectation.AllInstances.CallOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.CreateMethodExpectation,``0,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of CreateMethodExpectation.Call(!!0 ignored)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectationForSetupResult">
            <summary>Shim type of Rhino.Mocks.Impl.CreateMethodExpectationForSetupResult</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectationForSetupResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectationForSetupResult.#ctor(Rhino.Mocks.Impl.CreateMethodExpectationForSetupResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectationForSetupResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectationForSetupResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectationForSetupResult.Bind(Rhino.Mocks.Interfaces.ICreateMethodExpectation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectationForSetupResult.CallOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of CreateMethodExpectationForSetupResult.Call(!!0 ignored)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectationForSetupResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectationForSetupResult.ConstructorIMockedObjectObject">
            <summary>Sets the shim of CreateMethodExpectationForSetupResult.CreateMethodExpectationForSetupResult(IMockedObject mockedObject, Object mockedInstance)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectationForSetupResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimCreateMethodExpectationForSetupResult.AllInstances.CallOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.CreateMethodExpectationForSetupResult,``0,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of CreateMethodExpectationForSetupResult.Call(!!0 ignored)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimEventRaiser">
            <summary>Shim type of Rhino.Mocks.Impl.EventRaiser</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.#ctor(Rhino.Mocks.Impl.EventRaiser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.Bind(Rhino.Mocks.Interfaces.IEventRaiser)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.AssertMatchingParametersMethodInfoObjectArray">
            <summary>Sets the shim of EventRaiser.AssertMatchingParameters(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.ConstructorIMockedObjectString">
            <summary>Sets the shim of EventRaiser.EventRaiser(IMockedObject proxy, String eventName)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.CreateObjectString">
            <summary>Sets the shim of EventRaiser.Create(Object instance, String eventName)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.PreserveStackTraceException">
            <summary>Sets the shim of EventRaiser.PreserveStackTrace(Exception exception)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.RaiseObjectArray">
            <summary>Sets the shim of EventRaiser.Raise(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.RaiseObjectEventArgs">
            <summary>Sets the shim of EventRaiser.Raise(Object sender, EventArgs e)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.AllInstances.RaiseObjectArray">
            <summary>Sets the shim of EventRaiser.Raise(Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimEventRaiser.AllInstances.RaiseObjectEventArgs">
            <summary>Sets the shim of EventRaiser.Raise(Object sender, EventArgs e)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1">
            <summary>Shim type of Rhino.Mocks.Impl.MethodOptions`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.#ctor(Rhino.Mocks.Impl.MethodOptions{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.Bind(Rhino.Mocks.Interfaces.IMethodOptions{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.Bind(Rhino.Mocks.Interfaces.IRepeat{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallbackOf10DelegatesFunctionOfBooleanM0M1M2M3M4M5M6M7M8M9``10(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`11&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallbackOf1DelegatesFunctionOfBooleanM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`2&lt;Boolean,!!0&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallbackOf2DelegatesFunctionOfBooleanM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`3&lt;Boolean,!!0,!!1&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallbackOf3DelegatesFunctionOfBooleanM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`4&lt;Boolean,!!0,!!1,!!2&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallbackOf4DelegatesFunctionOfBooleanM0M1M2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`5&lt;Boolean,!!0,!!1,!!2,!!3&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallbackOf5DelegatesFunctionOfBooleanM0M1M2M3M4``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`6&lt;Boolean,!!0,!!1,!!2,!!3,!!4&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallbackOf6DelegatesFunctionOfBooleanM0M1M2M3M4M5``6(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`7&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallbackOf7DelegatesFunctionOfBooleanM0M1M2M3M4M5M6``7(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`8&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallbackOf8DelegatesFunctionOfBooleanM0M1M2M3M4M5M6M7``8(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`9&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallbackOf9DelegatesFunctionOfBooleanM0M1M2M3M4M5M6M7M8``9(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7,``8},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`10&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8&gt; callback)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.Any">
            <summary>Sets the shim of MethodOptions`1.Any()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AssertExpectationOnPropertyWithGetterAndSetter">
            <summary>Sets the shim of MethodOptions`1.AssertExpectationOnPropertyWithGetterAndSetter()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AssertLastMethodWasEventAddOrRemove">
            <summary>Sets the shim of MethodOptions`1.AssertLastMethodWasEventAddOrRemove()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AssertMethodImplementationExists">
            <summary>Sets the shim of MethodOptions`1.AssertMethodImplementationExists()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AtLeastOnce">
            <summary>Sets the shim of MethodOptions`1.AtLeastOnce()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallOriginalMethod">
            <summary>Sets the shim of MethodOptions`1.CallOriginalMethod()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallOriginalMethodOriginalCallOptions">
            <summary>Sets the shim of MethodOptions`1.CallOriginalMethod(OriginalCallOptions options)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallbackDelegate">
            <summary>Sets the shim of MethodOptions`1.Callback(Delegate callback)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.CallbackDelegatesFunctionOfBoolean">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`1&lt;Boolean&gt; callback)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.ConstraintsAbstractConstraintArray">
            <summary>Sets the shim of MethodOptions`1.Constraints(AbstractConstraint[] constraints)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.ConstructorMockRepositoryRecordMockStateIMockedObjectIExpectation">
            <summary>Sets the shim of MethodOptions`1.MethodOptions`1(MockRepository repository, RecordMockState record, IMockedObject proxy, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.DoDelegate">
            <summary>Sets the shim of MethodOptions`1.Do(Delegate action)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.GetEventRaiser">
            <summary>Sets the shim of MethodOptions`1.GetEventRaiser()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.GetPropertyFromMethodMethodInfo">
            <summary>Sets the shim of MethodOptions`1.GetPropertyFromMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.IgnoreArguments">
            <summary>Sets the shim of MethodOptions`1.IgnoreArguments()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.MessageString">
            <summary>Sets the shim of MethodOptions`1.Message(String documentationMessage)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.Never">
            <summary>Sets the shim of MethodOptions`1.Never()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.Once">
            <summary>Sets the shim of MethodOptions`1.Once()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.OutRefObjectArray">
            <summary>Sets the shim of MethodOptions`1.OutRef(Object[] parameters)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.PropertyBehavior">
            <summary>Sets the shim of MethodOptions`1.PropertyBehavior()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.PropertySetterFromMethodMethodInfo">
            <summary>Sets the shim of MethodOptions`1.PropertySetterFromMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.RepeatGet">
            <summary>Sets the shim of MethodOptions`1.get_Repeat()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.ReplaceExpectationIExpectation">
            <summary>Sets the shim of MethodOptions`1.ReplaceExpectation(IExpectation anyArgsExpectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.ReturnT0">
            <summary>Sets the shim of MethodOptions`1.Return(!0 objToReturn)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.SetPropertyAndIgnoreArgument">
            <summary>Sets the shim of MethodOptions`1.SetPropertyAndIgnoreArgument()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.SetPropertyWithArgumentT0">
            <summary>Sets the shim of MethodOptions`1.SetPropertyWithArgument(!0 argument)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.TentativeReturn">
            <summary>Sets the shim of MethodOptions`1.TentativeReturn()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.ThrowException">
            <summary>Sets the shim of MethodOptions`1.Throw(Exception exception)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.TimesInt32">
            <summary>Sets the shim of MethodOptions`1.Times(Int32 count)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.TimesInt32Int32">
            <summary>Sets the shim of MethodOptions`1.Times(Int32 min, Int32 max)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.Twice">
            <summary>Sets the shim of MethodOptions`1.Twice()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.WhenCalledActionOfMethodInvocation">
            <summary>Sets the shim of MethodOptions`1.WhenCalled(Action`1&lt;MethodInvocation&gt; action)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallbackOf10DelegatesFunctionOfBooleanM0M1M2M3M4M5M6M7M8M9``10(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.MethodOptions{`0},Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`11&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallbackOf1DelegatesFunctionOfBooleanM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.MethodOptions{`0},Rhino.Mocks.Delegates.Function{System.Boolean,``0},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`2&lt;Boolean,!!0&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallbackOf2DelegatesFunctionOfBooleanM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.MethodOptions{`0},Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`3&lt;Boolean,!!0,!!1&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallbackOf3DelegatesFunctionOfBooleanM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.MethodOptions{`0},Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`4&lt;Boolean,!!0,!!1,!!2&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallbackOf4DelegatesFunctionOfBooleanM0M1M2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.MethodOptions{`0},Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`5&lt;Boolean,!!0,!!1,!!2,!!3&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallbackOf5DelegatesFunctionOfBooleanM0M1M2M3M4``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.MethodOptions{`0},Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`6&lt;Boolean,!!0,!!1,!!2,!!3,!!4&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallbackOf6DelegatesFunctionOfBooleanM0M1M2M3M4M5``6(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.MethodOptions{`0},Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`7&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallbackOf7DelegatesFunctionOfBooleanM0M1M2M3M4M5M6``7(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.MethodOptions{`0},Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`8&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallbackOf8DelegatesFunctionOfBooleanM0M1M2M3M4M5M6M7``8(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.MethodOptions{`0},Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`9&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallbackOf9DelegatesFunctionOfBooleanM0M1M2M3M4M5M6M7M8``9(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.MethodOptions{`0},Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7,``8},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`10&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8&gt; callback)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.Any">
            <summary>Sets the shim of MethodOptions`1.Any()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.AssertExpectationOnPropertyWithGetterAndSetter">
            <summary>Sets the shim of MethodOptions`1.AssertExpectationOnPropertyWithGetterAndSetter()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.AssertLastMethodWasEventAddOrRemove">
            <summary>Sets the shim of MethodOptions`1.AssertLastMethodWasEventAddOrRemove()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.AssertMethodImplementationExists">
            <summary>Sets the shim of MethodOptions`1.AssertMethodImplementationExists()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.AtLeastOnce">
            <summary>Sets the shim of MethodOptions`1.AtLeastOnce()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallOriginalMethod">
            <summary>Sets the shim of MethodOptions`1.CallOriginalMethod()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallOriginalMethodOriginalCallOptions">
            <summary>Sets the shim of MethodOptions`1.CallOriginalMethod(OriginalCallOptions options)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallbackDelegate">
            <summary>Sets the shim of MethodOptions`1.Callback(Delegate callback)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.CallbackDelegatesFunctionOfBoolean">
            <summary>Sets the shim of MethodOptions`1.Callback(Function`1&lt;Boolean&gt; callback)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.ConstraintsAbstractConstraintArray">
            <summary>Sets the shim of MethodOptions`1.Constraints(AbstractConstraint[] constraints)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.DoDelegate">
            <summary>Sets the shim of MethodOptions`1.Do(Delegate action)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.GetEventRaiser">
            <summary>Sets the shim of MethodOptions`1.GetEventRaiser()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.GetPropertyFromMethodMethodInfo">
            <summary>Sets the shim of MethodOptions`1.GetPropertyFromMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.IgnoreArguments">
            <summary>Sets the shim of MethodOptions`1.IgnoreArguments()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.MessageString">
            <summary>Sets the shim of MethodOptions`1.Message(String documentationMessage)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.Never">
            <summary>Sets the shim of MethodOptions`1.Never()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.Once">
            <summary>Sets the shim of MethodOptions`1.Once()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.OutRefObjectArray">
            <summary>Sets the shim of MethodOptions`1.OutRef(Object[] parameters)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.PropertyBehavior">
            <summary>Sets the shim of MethodOptions`1.PropertyBehavior()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.PropertySetterFromMethodMethodInfo">
            <summary>Sets the shim of MethodOptions`1.PropertySetterFromMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.RepeatGet">
            <summary>Sets the shim of MethodOptions`1.get_Repeat()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.ReplaceExpectationIExpectation">
            <summary>Sets the shim of MethodOptions`1.ReplaceExpectation(IExpectation anyArgsExpectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.ReturnT0">
            <summary>Sets the shim of MethodOptions`1.Return(!0 objToReturn)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.SetPropertyAndIgnoreArgument">
            <summary>Sets the shim of MethodOptions`1.SetPropertyAndIgnoreArgument()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.SetPropertyWithArgumentT0">
            <summary>Sets the shim of MethodOptions`1.SetPropertyWithArgument(!0 argument)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.TentativeReturn">
            <summary>Sets the shim of MethodOptions`1.TentativeReturn()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.ThrowException">
            <summary>Sets the shim of MethodOptions`1.Throw(Exception exception)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.TimesInt32">
            <summary>Sets the shim of MethodOptions`1.Times(Int32 count)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.TimesInt32Int32">
            <summary>Sets the shim of MethodOptions`1.Times(Int32 min, Int32 max)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.Twice">
            <summary>Sets the shim of MethodOptions`1.Twice()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMethodOptions`1.AllInstances.WhenCalledActionOfMethodInvocation">
            <summary>Sets the shim of MethodOptions`1.WhenCalled(Action`1&lt;MethodInvocation&gt; action)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality">
            <summary>Shim type of Rhino.Mocks.Impl.MockedObjectsEquality</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.#ctor(Rhino.Mocks.Impl.MockedObjectsEquality)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.Bind(System.Collections.IComparer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.Bind(System.Collections.IEqualityComparer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.Bind(System.Collections.Generic.IEqualityComparer{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.CompareObjectObject">
            <summary>Sets the shim of MockedObjectsEquality.Compare(Object x, Object y)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.Constructor">
            <summary>Sets the shim of MockedObjectsEquality.MockedObjectsEquality()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.EqualsObjectObject">
            <summary>Sets the shim of MockedObjectsEquality.Equals(Object x, Object y)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.GetHashCodeObject">
            <summary>Sets the shim of MockedObjectsEquality.GetHashCode(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.InstanceGet">
            <summary>Sets the shim of MockedObjectsEquality.get_Instance()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.NextHashCodeGet">
            <summary>Sets the shim of MockedObjectsEquality.get_NextHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.StaticConstructor">
            <summary>Sets the shim of MockedObjectsEquality.MockedObjectsEquality()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.SystemCollectionsGenericIEqualityComparerSystemObjectEqualsObjectObject">
            <summary>Sets the shim of MockedObjectsEquality.System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.Equals(Object x, Object y)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.SystemCollectionsGenericIEqualityComparerSystemObjectGetHashCodeObject">
            <summary>Sets the shim of MockedObjectsEquality.System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.GetHashCode(Object obj)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.AllInstances.CompareObjectObject">
            <summary>Sets the shim of MockedObjectsEquality.Compare(Object x, Object y)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.AllInstances.EqualsObjectObject">
            <summary>Sets the shim of MockedObjectsEquality.Equals(Object x, Object y)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.AllInstances.GetHashCodeObject">
            <summary>Sets the shim of MockedObjectsEquality.GetHashCode(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.AllInstances.SystemCollectionsGenericIEqualityComparerSystemObjectEqualsObjectObject">
            <summary>Sets the shim of MockedObjectsEquality.System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.Equals(Object x, Object y)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimMockedObjectsEquality.AllInstances.SystemCollectionsGenericIEqualityComparerSystemObjectGetHashCodeObject">
            <summary>Sets the shim of MockedObjectsEquality.System.Collections.Generic.IEqualityComparer&lt;System.Object&gt;.GetHashCode(Object obj)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimNullLogger">
            <summary>Shim type of Rhino.Mocks.Impl.NullLogger</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimNullLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimNullLogger.#ctor(Rhino.Mocks.Impl.NullLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimNullLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimNullLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimNullLogger.Bind(Rhino.Mocks.Interfaces.IExpectationLogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimNullLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimNullLogger.Constructor">
            <summary>Sets the shim of NullLogger.NullLogger()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimNullLogger.LogRecordedExpectationIInvocationIExpectation">
            <summary>Sets the shim of NullLogger.LogRecordedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimNullLogger.LogReplayedExpectationIInvocationIExpectation">
            <summary>Sets the shim of NullLogger.LogReplayedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimNullLogger.LogUnexpectedMethodCallIInvocationString">
            <summary>Sets the shim of NullLogger.LogUnexpectedMethodCall(IInvocation invocation, String message)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimNullLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimNullLogger.AllInstances.LogRecordedExpectationIInvocationIExpectation">
            <summary>Sets the shim of NullLogger.LogRecordedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimNullLogger.AllInstances.LogReplayedExpectationIInvocationIExpectation">
            <summary>Sets the shim of NullLogger.LogReplayedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimNullLogger.AllInstances.LogUnexpectedMethodCallIInvocationString">
            <summary>Sets the shim of NullLogger.LogUnexpectedMethodCall(IInvocation invocation, String message)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimProxyInstance">
            <summary>Shim type of Rhino.Mocks.Impl.ProxyInstance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.#ctor(Rhino.Mocks.Impl.ProxyInstance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.Bind(Rhino.Mocks.Interfaces.IMockedObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AddEventMethodInfoDelegate">
            <summary>Sets the shim of ProxyInstance.AddEvent(MethodInfo method, Delegate subscriber)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AreMethodEqualsMethodInfoMethodInfo">
            <summary>Sets the shim of ProxyInstance.AreMethodEquals(MethodInfo left, MethodInfo right)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.ClearStateBackToRecordOptions">
            <summary>Sets the shim of ProxyInstance.ClearState(BackToRecordOptions options)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.ConstructorArgumentsGet">
            <summary>Sets the shim of ProxyInstance.get_ConstructorArguments()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.ConstructorArgumentsSetObjectArray">
            <summary>Sets the shim of ProxyInstance.set_ConstructorArguments(Object[] value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.ConstructorMockRepositoryTypeArray">
            <summary>Sets the shim of ProxyInstance.ProxyInstance(MockRepository repository, Type[] implemented)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.DependentMocksGet">
            <summary>Sets the shim of ProxyInstance.get_DependentMocks()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.GenerateKeyMethodInfoObjectArray">
            <summary>Sets the shim of ProxyInstance.GenerateKey(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.GetCallArgumentsForMethodInfo">
            <summary>Sets the shim of ProxyInstance.GetCallArgumentsFor(MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.GetDeclaringTypeMethodInfo">
            <summary>Sets the shim of ProxyInstance.GetDeclaringType(MethodInfo info)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.GetEventSubscribersString">
            <summary>Sets the shim of ProxyInstance.GetEventSubscribers(String eventName)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.HandleEventMethodInfoObjectArray">
            <summary>Sets the shim of ProxyInstance.HandleEvent(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.HandlePropertyMethodInfoObjectArray">
            <summary>Sets the shim of ProxyInstance.HandleProperty(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.ImplementedTypesGet">
            <summary>Sets the shim of ProxyInstance.get_ImplementedTypes()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.IsPropertyMethodMethodInfo">
            <summary>Sets the shim of ProxyInstance.IsPropertyMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.MethodCallMethodInfoObjectArray">
            <summary>Sets the shim of ProxyInstance.MethodCall(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.MockedObjectInstanceGet">
            <summary>Sets the shim of ProxyInstance.get_MockedObjectInstance()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.MockedObjectInstanceSetObject">
            <summary>Sets the shim of ProxyInstance.set_MockedObjectInstance(Object value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.ProxyHashGet">
            <summary>Sets the shim of ProxyInstance.get_ProxyHash()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.RegisterMethodForCallingOriginalMethodInfo">
            <summary>Sets the shim of ProxyInstance.RegisterMethodForCallingOriginal(MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.RegisterPropertyBehaviorForPropertyInfo">
            <summary>Sets the shim of ProxyInstance.RegisterPropertyBehaviorFor(PropertyInfo prop)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.RemoveEventMethodInfoDelegate">
            <summary>Sets the shim of ProxyInstance.RemoveEvent(MethodInfo method, Delegate subscriber)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.RepositoryGet">
            <summary>Sets the shim of ProxyInstance.get_Repository()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.ShouldCallOriginalMethodInfo">
            <summary>Sets the shim of ProxyInstance.ShouldCallOriginal(MethodInfo method)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.AddEventMethodInfoDelegate">
            <summary>Sets the shim of ProxyInstance.AddEvent(MethodInfo method, Delegate subscriber)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.ClearStateBackToRecordOptions">
            <summary>Sets the shim of ProxyInstance.ClearState(BackToRecordOptions options)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.ConstructorArgumentsGet">
            <summary>Sets the shim of ProxyInstance.get_ConstructorArguments()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.ConstructorArgumentsSetObjectArray">
            <summary>Sets the shim of ProxyInstance.set_ConstructorArguments(Object[] value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.DependentMocksGet">
            <summary>Sets the shim of ProxyInstance.get_DependentMocks()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.GetCallArgumentsForMethodInfo">
            <summary>Sets the shim of ProxyInstance.GetCallArgumentsFor(MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.GetDeclaringTypeMethodInfo">
            <summary>Sets the shim of ProxyInstance.GetDeclaringType(MethodInfo info)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.GetEventSubscribersString">
            <summary>Sets the shim of ProxyInstance.GetEventSubscribers(String eventName)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.HandleEventMethodInfoObjectArray">
            <summary>Sets the shim of ProxyInstance.HandleEvent(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.HandlePropertyMethodInfoObjectArray">
            <summary>Sets the shim of ProxyInstance.HandleProperty(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.ImplementedTypesGet">
            <summary>Sets the shim of ProxyInstance.get_ImplementedTypes()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.IsPropertyMethodMethodInfo">
            <summary>Sets the shim of ProxyInstance.IsPropertyMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.MethodCallMethodInfoObjectArray">
            <summary>Sets the shim of ProxyInstance.MethodCall(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.MockedObjectInstanceGet">
            <summary>Sets the shim of ProxyInstance.get_MockedObjectInstance()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.MockedObjectInstanceSetObject">
            <summary>Sets the shim of ProxyInstance.set_MockedObjectInstance(Object value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.ProxyHashGet">
            <summary>Sets the shim of ProxyInstance.get_ProxyHash()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.RegisterMethodForCallingOriginalMethodInfo">
            <summary>Sets the shim of ProxyInstance.RegisterMethodForCallingOriginal(MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.RegisterPropertyBehaviorForPropertyInfo">
            <summary>Sets the shim of ProxyInstance.RegisterPropertyBehaviorFor(PropertyInfo prop)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.RemoveEventMethodInfoDelegate">
            <summary>Sets the shim of ProxyInstance.RemoveEvent(MethodInfo method, Delegate subscriber)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.RepositoryGet">
            <summary>Sets the shim of ProxyInstance.get_Repository()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimProxyInstance.AllInstances.ShouldCallOriginalMethodInfo">
            <summary>Sets the shim of ProxyInstance.ShouldCallOriginal(MethodInfo method)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimRange">
            <summary>Shim type of Rhino.Mocks.Impl.Range</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRange.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRange.#ctor(Rhino.Mocks.Impl.Range)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRange.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRange.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRange.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRange.ConstructorInt32NullableOfInt32">
            <summary>Sets the shim of Range.Range(Int32 min, Nullable`1&lt;Int32&gt; max)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRange.MaxGet">
            <summary>Sets the shim of Range.get_Max()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRange.MinGet">
            <summary>Sets the shim of Range.get_Min()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRange.ToString">
            <summary>Sets the shim of Range.ToString()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimRange.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRange.AllInstances.MaxGet">
            <summary>Sets the shim of Range.get_Max()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRange.AllInstances.MinGet">
            <summary>Sets the shim of Range.get_Min()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRange.AllInstances.ToString01">
            <summary>Sets the shim of Range.ToString()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState">
            <summary>Shim type of Rhino.Mocks.Impl.RecordDynamicMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.#ctor(Rhino.Mocks.Impl.RecordDynamicMockState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.Bind(Rhino.Mocks.Interfaces.IMockState)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.BackToRecord">
            <summary>Sets the shim of RecordDynamicMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.ConstructorIMockedObjectMockRepository">
            <summary>Sets the shim of RecordDynamicMockState.RecordDynamicMockState(IMockedObject mockedObject, MockRepository repository)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.DoReplay">
            <summary>Sets the shim of RecordDynamicMockState.DoReplay()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.GetDefaultCallCountRangeExpectation">
            <summary>Sets the shim of RecordDynamicMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.AllInstances.BackToRecord">
            <summary>Sets the shim of RecordDynamicMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.AllInstances.DoReplay">
            <summary>Sets the shim of RecordDynamicMockState.DoReplay()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordDynamicMockState.AllInstances.GetDefaultCallCountRangeExpectation">
            <summary>Sets the shim of RecordDynamicMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimRecordMockState">
            <summary>Shim type of Rhino.Mocks.Impl.RecordMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.#ctor(Rhino.Mocks.Impl.RecordMockState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.Bind(Rhino.Mocks.Interfaces.IMockState)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.GetLastMethodOptionsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of RecordMockState.GetLastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AssertPreviousMethodIsClose">
            <summary>Sets the shim of RecordMockState.AssertPreviousMethodIsClose()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.BackToRecord">
            <summary>Sets the shim of RecordMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.BuildDefaultExpectationIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of RecordMockState.BuildDefaultExpectation(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.BuildParamExpectationIInvocationMethodInfo">
            <summary>Sets the shim of RecordMockState.BuildParamExpectation(IInvocation invocation, MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.ConstructorIMockedObjectMockRepository">
            <summary>Sets the shim of RecordMockState.RecordMockState(IMockedObject mockedObject, MockRepository repository)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.DoReplay">
            <summary>Sets the shim of RecordMockState.DoReplay()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.GetDefaultCallCountRangeExpectation">
            <summary>Sets the shim of RecordMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.InvalidOperationOnRecord">
            <summary>Sets the shim of RecordMockState.InvalidOperationOnRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.LastExpectationGet">
            <summary>Sets the shim of RecordMockState.get_LastExpectation()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.LastExpectationSetIExpectation">
            <summary>Sets the shim of RecordMockState.set_LastExpectation(IExpectation value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.LastMethodOptionsGet">
            <summary>Sets the shim of RecordMockState.get_LastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.MethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of RecordMockState.MethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.MethodCallsCountGet">
            <summary>Sets the shim of RecordMockState.get_MethodCallsCount()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.NotifyCallOnPropertyBehavior">
            <summary>Sets the shim of RecordMockState.NotifyCallOnPropertyBehavior()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.ProxyGet">
            <summary>Sets the shim of RecordMockState.get_Proxy()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.Replay">
            <summary>Sets the shim of RecordMockState.Replay()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.RepositoryGet">
            <summary>Sets the shim of RecordMockState.get_Repository()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.SetExceptionToThrowOnVerifyException">
            <summary>Sets the shim of RecordMockState.SetExceptionToThrowOnVerify(Exception ex)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.TryCreateReturnValueIExpectationObjectOut">
            <summary>Sets the shim of RecordMockState.TryCreateReturnValue(IExpectation expectation, Object&amp; returnValue)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.Verify">
            <summary>Sets the shim of RecordMockState.Verify()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.VerifyStateGet">
            <summary>Sets the shim of RecordMockState.get_VerifyState()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState._BuildDefaultExpectationb__2ParameterInfo">
            <summary>Sets the shim of RecordMockState.&lt;BuildDefaultExpectation&gt;b__2(ParameterInfo p)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState._InvalidOperationOnRecordb__0Type">
            <summary>Sets the shim of RecordMockState.&lt;InvalidOperationOnRecord&gt;b__0(Type ty)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.GetLastMethodOptionsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.RecordMockState,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of RecordMockState.GetLastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.AssertPreviousMethodIsClose">
            <summary>Sets the shim of RecordMockState.AssertPreviousMethodIsClose()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.BackToRecord">
            <summary>Sets the shim of RecordMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.BuildDefaultExpectationIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of RecordMockState.BuildDefaultExpectation(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.DoReplay">
            <summary>Sets the shim of RecordMockState.DoReplay()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.GetDefaultCallCountRangeExpectation">
            <summary>Sets the shim of RecordMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.InvalidOperationOnRecord">
            <summary>Sets the shim of RecordMockState.InvalidOperationOnRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.LastExpectationGet">
            <summary>Sets the shim of RecordMockState.get_LastExpectation()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.LastExpectationSetIExpectation">
            <summary>Sets the shim of RecordMockState.set_LastExpectation(IExpectation value)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.LastMethodOptionsGet">
            <summary>Sets the shim of RecordMockState.get_LastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.MethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of RecordMockState.MethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.MethodCallsCountGet">
            <summary>Sets the shim of RecordMockState.get_MethodCallsCount()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.NotifyCallOnPropertyBehavior">
            <summary>Sets the shim of RecordMockState.NotifyCallOnPropertyBehavior()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.ProxyGet">
            <summary>Sets the shim of RecordMockState.get_Proxy()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.Replay">
            <summary>Sets the shim of RecordMockState.Replay()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.RepositoryGet">
            <summary>Sets the shim of RecordMockState.get_Repository()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.SetExceptionToThrowOnVerifyException">
            <summary>Sets the shim of RecordMockState.SetExceptionToThrowOnVerify(Exception ex)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.TryCreateReturnValueIExpectationObjectOut">
            <summary>Sets the shim of RecordMockState.TryCreateReturnValue(IExpectation expectation, Object&amp; returnValue)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.Verify">
            <summary>Sets the shim of RecordMockState.Verify()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordMockState.AllInstances.VerifyStateGet">
            <summary>Sets the shim of RecordMockState.get_VerifyState()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState">
            <summary>Shim type of Rhino.Mocks.Impl.RecordPartialMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState.#ctor(Rhino.Mocks.Impl.RecordPartialMockState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState.Bind(Rhino.Mocks.Interfaces.IMockState)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState.BackToRecord">
            <summary>Sets the shim of RecordPartialMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState.ConstructorIMockedObjectMockRepository">
            <summary>Sets the shim of RecordPartialMockState.RecordPartialMockState(IMockedObject mockedObject, MockRepository repository)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState.DoReplay">
            <summary>Sets the shim of RecordPartialMockState.DoReplay()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState.AllInstances.BackToRecord">
            <summary>Sets the shim of RecordPartialMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRecordPartialMockState.AllInstances.DoReplay">
            <summary>Sets the shim of RecordPartialMockState.DoReplay()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState">
            <summary>Shim type of Rhino.Mocks.Impl.ReplayDynamicMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState.#ctor(Rhino.Mocks.Impl.ReplayDynamicMockState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState.Bind(Rhino.Mocks.Interfaces.IMockState)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState.BackToRecord">
            <summary>Sets the shim of ReplayDynamicMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState.ConstructorRecordDynamicMockState">
            <summary>Sets the shim of ReplayDynamicMockState.ReplayDynamicMockState(RecordDynamicMockState previousState)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState.DoMethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of ReplayDynamicMockState.DoMethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState.AllInstances.BackToRecord">
            <summary>Sets the shim of ReplayDynamicMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayDynamicMockState.AllInstances.DoMethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of ReplayDynamicMockState.DoMethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimReplayMockState">
            <summary>Shim type of Rhino.Mocks.Impl.ReplayMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.#ctor(Rhino.Mocks.Impl.ReplayMockState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.Bind(Rhino.Mocks.Interfaces.IMockState)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.GetLastMethodOptionsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of ReplayMockState.GetLastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.BackToRecord">
            <summary>Sets the shim of ReplayMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.ConstructorRecordMockState">
            <summary>Sets the shim of ReplayMockState.ReplayMockState(RecordMockState previousState)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.DoMethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of ReplayMockState.DoMethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.InvalidInReplayState">
            <summary>Sets the shim of ReplayMockState.InvalidInReplayState()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.LastMethodOptionsGet">
            <summary>Sets the shim of ReplayMockState.get_LastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.MethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of ReplayMockState.MethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.NotifyCallOnPropertyBehavior">
            <summary>Sets the shim of ReplayMockState.NotifyCallOnPropertyBehavior()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.Replay">
            <summary>Sets the shim of ReplayMockState.Replay()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.SetExceptionToThrowOnVerifyException">
            <summary>Sets the shim of ReplayMockState.SetExceptionToThrowOnVerify(Exception ex)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.Verify">
            <summary>Sets the shim of ReplayMockState.Verify()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.VerifyStateGet">
            <summary>Sets the shim of ReplayMockState.get_VerifyState()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.AllInstances.GetLastMethodOptionsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.ReplayMockState,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of ReplayMockState.GetLastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.AllInstances.BackToRecord">
            <summary>Sets the shim of ReplayMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.AllInstances.DoMethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of ReplayMockState.DoMethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.AllInstances.InvalidInReplayState">
            <summary>Sets the shim of ReplayMockState.InvalidInReplayState()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.AllInstances.LastMethodOptionsGet">
            <summary>Sets the shim of ReplayMockState.get_LastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.AllInstances.MethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of ReplayMockState.MethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.AllInstances.NotifyCallOnPropertyBehavior">
            <summary>Sets the shim of ReplayMockState.NotifyCallOnPropertyBehavior()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.AllInstances.Replay">
            <summary>Sets the shim of ReplayMockState.Replay()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.AllInstances.SetExceptionToThrowOnVerifyException">
            <summary>Sets the shim of ReplayMockState.SetExceptionToThrowOnVerify(Exception ex)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.AllInstances.Verify">
            <summary>Sets the shim of ReplayMockState.Verify()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayMockState.AllInstances.VerifyStateGet">
            <summary>Sets the shim of ReplayMockState.get_VerifyState()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState">
            <summary>Shim type of Rhino.Mocks.Impl.ReplayPartialMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState.#ctor(Rhino.Mocks.Impl.ReplayPartialMockState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState.Bind(Rhino.Mocks.Interfaces.IMockState)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState.BackToRecord">
            <summary>Sets the shim of ReplayPartialMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState.ConstructorRecordPartialMockState">
            <summary>Sets the shim of ReplayPartialMockState.ReplayPartialMockState(RecordPartialMockState previousState)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState.DoMethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of ReplayPartialMockState.DoMethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState.AllInstances.BackToRecord">
            <summary>Sets the shim of ReplayPartialMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimReplayPartialMockState.AllInstances.DoMethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of ReplayPartialMockState.DoMethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimRhinoInterceptor">
            <summary>Shim type of Rhino.Mocks.Impl.RhinoInterceptor</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRhinoInterceptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRhinoInterceptor.#ctor(Rhino.Mocks.Impl.RhinoInterceptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRhinoInterceptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRhinoInterceptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimRhinoInterceptor.Bind(Castle.Core.Interceptor.IInterceptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRhinoInterceptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRhinoInterceptor.ConstructorMockRepositoryIMockedObjectIEnumerableOfInvocationVisitor">
            <summary>Sets the shim of RhinoInterceptor.RhinoInterceptor(MockRepository repository, IMockedObject proxyInstance, IEnumerable`1&lt;InvocationVisitor&gt; invocation_visitors)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRhinoInterceptor.InterceptIInvocation">
            <summary>Sets the shim of RhinoInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimRhinoInterceptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimRhinoInterceptor.AllInstances.InterceptIInvocation">
            <summary>Sets the shim of RhinoInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState">
            <summary>Shim type of Rhino.Mocks.Impl.StubRecordMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.#ctor(Rhino.Mocks.Impl.StubRecordMockState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.Bind(Rhino.Mocks.Interfaces.IMockState)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.AssertPreviousMethodIsClose">
            <summary>Sets the shim of StubRecordMockState.AssertPreviousMethodIsClose()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.CanWriteToPropertyThroughPublicSignaturePropertyInfo">
            <summary>Sets the shim of StubRecordMockState.CanWriteToPropertyThroughPublicSignature(PropertyInfo property)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.ConstructorIMockedObjectMockRepository">
            <summary>Sets the shim of StubRecordMockState.StubRecordMockState(IMockedObject mockedObject, MockRepository repository)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.CreateDefaultValueForValueTypePropertyIMockedObjectPropertyInfo">
            <summary>Sets the shim of StubRecordMockState.CreateDefaultValueForValueTypeProperty(IMockedObject mockedObject, PropertyInfo property)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.GetDefaultCallCountRangeExpectation">
            <summary>Sets the shim of StubRecordMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.Replay">
            <summary>Sets the shim of StubRecordMockState.Replay()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.SetPropertyBehaviorIMockedObjectTypeArray">
            <summary>Sets the shim of StubRecordMockState.SetPropertyBehavior(IMockedObject mockedObject, Type[] types)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.AllInstances.AssertPreviousMethodIsClose">
            <summary>Sets the shim of StubRecordMockState.AssertPreviousMethodIsClose()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.AllInstances.GetDefaultCallCountRangeExpectation">
            <summary>Sets the shim of StubRecordMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.AllInstances.Replay">
            <summary>Sets the shim of StubRecordMockState.Replay()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimStubRecordMockState.AllInstances.SetPropertyBehaviorIMockedObjectTypeArray">
            <summary>Sets the shim of StubRecordMockState.SetPropertyBehavior(IMockedObject mockedObject, Type[] types)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger">
            <summary>Shim type of Rhino.Mocks.Impl.TextWriterExpectationLogger</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.#ctor(Rhino.Mocks.Impl.TextWriterExpectationLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.Bind(Rhino.Mocks.Interfaces.IExpectationLogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.ConstructorTextWriter">
            <summary>Sets the shim of TextWriterExpectationLogger.TextWriterExpectationLogger(TextWriter writer)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.LogRecordedExpectationIInvocationIExpectation">
            <summary>Sets the shim of TextWriterExpectationLogger.LogRecordedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.LogReplayedExpectationIInvocationIExpectation">
            <summary>Sets the shim of TextWriterExpectationLogger.LogReplayedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.LogUnexpectedMethodCallIInvocationString">
            <summary>Sets the shim of TextWriterExpectationLogger.LogUnexpectedMethodCall(IInvocation invocation, String message)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.AllInstances.LogRecordedExpectationIInvocationIExpectation">
            <summary>Sets the shim of TextWriterExpectationLogger.LogRecordedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.AllInstances.LogReplayedExpectationIInvocationIExpectation">
            <summary>Sets the shim of TextWriterExpectationLogger.LogReplayedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTextWriterExpectationLogger.AllInstances.LogUnexpectedMethodCallIInvocationString">
            <summary>Sets the shim of TextWriterExpectationLogger.LogUnexpectedMethodCall(IInvocation invocation, String message)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger">
            <summary>Shim type of Rhino.Mocks.Impl.TraceWriterExpectationLogger</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.#ctor(Rhino.Mocks.Impl.TraceWriterExpectationLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.Bind(Rhino.Mocks.Interfaces.IExpectationLogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.Constructor">
            <summary>Sets the shim of TraceWriterExpectationLogger.TraceWriterExpectationLogger()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.ConstructorBooleanBooleanBoolean">
            <summary>Sets the shim of TraceWriterExpectationLogger.TraceWriterExpectationLogger(Boolean logRecorded, Boolean logReplayed, Boolean logUnexpected)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.LogRecordedExpectationIInvocationIExpectation">
            <summary>Sets the shim of TraceWriterExpectationLogger.LogRecordedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.LogReplayedExpectationIInvocationIExpectation">
            <summary>Sets the shim of TraceWriterExpectationLogger.LogReplayedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.LogUnexpectedMethodCallIInvocationString">
            <summary>Sets the shim of TraceWriterExpectationLogger.LogUnexpectedMethodCall(IInvocation invocation, String message)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.AllInstances.LogRecordedExpectationIInvocationIExpectation">
            <summary>Sets the shim of TraceWriterExpectationLogger.LogRecordedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.AllInstances.LogReplayedExpectationIInvocationIExpectation">
            <summary>Sets the shim of TraceWriterExpectationLogger.LogReplayedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterExpectationLogger.AllInstances.LogUnexpectedMethodCallIInvocationString">
            <summary>Sets the shim of TraceWriterExpectationLogger.LogUnexpectedMethodCall(IInvocation invocation, String message)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter">
            <summary>Shim type of Rhino.Mocks.Impl.TraceWriterWithStackTraceExpectationWriter</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.#ctor(Rhino.Mocks.Impl.TraceWriterWithStackTraceExpectationWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.Bind(Rhino.Mocks.Interfaces.IExpectationLogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.Constructor">
            <summary>Sets the shim of TraceWriterWithStackTraceExpectationWriter.TraceWriterWithStackTraceExpectationWriter()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.LogRecordedExpectationIInvocationIExpectation">
            <summary>Sets the shim of TraceWriterWithStackTraceExpectationWriter.LogRecordedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.LogReplayedExpectationIInvocationIExpectation">
            <summary>Sets the shim of TraceWriterWithStackTraceExpectationWriter.LogReplayedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.LogUnexpectedMethodCallIInvocationString">
            <summary>Sets the shim of TraceWriterWithStackTraceExpectationWriter.LogUnexpectedMethodCall(IInvocation invocation, String message)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.WriteCurrentMethod">
            <summary>Sets the shim of TraceWriterWithStackTraceExpectationWriter.WriteCurrentMethod()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.WriteLineStringObjectArray">
            <summary>Sets the shim of TraceWriterWithStackTraceExpectationWriter.WriteLine(String msg, Object[] args)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.AllInstances.LogRecordedExpectationIInvocationIExpectation">
            <summary>Sets the shim of TraceWriterWithStackTraceExpectationWriter.LogRecordedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.AllInstances.LogReplayedExpectationIInvocationIExpectation">
            <summary>Sets the shim of TraceWriterWithStackTraceExpectationWriter.LogReplayedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.AllInstances.LogUnexpectedMethodCallIInvocationString">
            <summary>Sets the shim of TraceWriterWithStackTraceExpectationWriter.LogUnexpectedMethodCall(IInvocation invocation, String message)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.AllInstances.WriteCurrentMethod">
            <summary>Sets the shim of TraceWriterWithStackTraceExpectationWriter.WriteCurrentMethod()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimTraceWriterWithStackTraceExpectationWriter.AllInstances.WriteLineStringObjectArray">
            <summary>Sets the shim of TraceWriterWithStackTraceExpectationWriter.WriteLine(String msg, Object[] args)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimValidate">
            <summary>Shim type of Rhino.Mocks.Impl.Validate</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimValidate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimValidate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimValidate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimValidate.AreEqualObjectObject">
            <summary>Sets the shim of Validate.AreEqual(Object expectedArg, Object actualArg)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimValidate.ArgsEqualObjectArrayObjectArray">
            <summary>Sets the shim of Validate.ArgsEqual(Object[] expectedArgs, Object[] actualArgs)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimValidate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimValidate.IsNotNullObjectString">
            <summary>Sets the shim of Validate.IsNotNull(Object obj, String name)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimValidate.RecursiveCollectionEqualICollectionICollection">
            <summary>Sets the shim of Validate.RecursiveCollectionEqual(ICollection expectedArgs, ICollection actualArgs)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimValidate.SafeEqualsObjectObject">
            <summary>Sets the shim of Validate.SafeEquals(Object expected, Object actual)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState">
            <summary>Shim type of Rhino.Mocks.Impl.VerifiedMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.#ctor(Rhino.Mocks.Impl.VerifiedMockState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.Bind(Rhino.Mocks.Interfaces.IMockState)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.GetLastMethodOptionsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of VerifiedMockState.GetLastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.BackToRecord">
            <summary>Sets the shim of VerifiedMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.ConstructorIMockState">
            <summary>Sets the shim of VerifiedMockState.VerifiedMockState(IMockState previous)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.InvalidInVerifiedState">
            <summary>Sets the shim of VerifiedMockState.InvalidInVerifiedState()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.LastMethodOptionsGet">
            <summary>Sets the shim of VerifiedMockState.get_LastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.MethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of VerifiedMockState.MethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.NotifyCallOnPropertyBehavior">
            <summary>Sets the shim of VerifiedMockState.NotifyCallOnPropertyBehavior()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.Replay">
            <summary>Sets the shim of VerifiedMockState.Replay()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.SetExceptionToThrowOnVerifyException">
            <summary>Sets the shim of VerifiedMockState.SetExceptionToThrowOnVerify(Exception ex)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.Verify">
            <summary>Sets the shim of VerifiedMockState.Verify()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.VerifyStateGet">
            <summary>Sets the shim of VerifiedMockState.get_VerifyState()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.AllInstances.GetLastMethodOptionsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Impl.VerifiedMockState,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets the shim of VerifiedMockState.GetLastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.AllInstances.BackToRecord">
            <summary>Sets the shim of VerifiedMockState.BackToRecord()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.AllInstances.InvalidInVerifiedState">
            <summary>Sets the shim of VerifiedMockState.InvalidInVerifiedState()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.AllInstances.LastMethodOptionsGet">
            <summary>Sets the shim of VerifiedMockState.get_LastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.AllInstances.MethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of VerifiedMockState.MethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.AllInstances.NotifyCallOnPropertyBehavior">
            <summary>Sets the shim of VerifiedMockState.NotifyCallOnPropertyBehavior()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.AllInstances.Replay">
            <summary>Sets the shim of VerifiedMockState.Replay()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.AllInstances.SetExceptionToThrowOnVerifyException">
            <summary>Sets the shim of VerifiedMockState.SetExceptionToThrowOnVerify(Exception ex)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.AllInstances.Verify">
            <summary>Sets the shim of VerifiedMockState.Verify()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.ShimVerifiedMockState.AllInstances.VerifyStateGet">
            <summary>Sets the shim of VerifiedMockState.get_VerifyState()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectation">
            <summary>Stub type of Rhino.Mocks.Impl.CreateMethodExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectation.#ctor(Rhino.Mocks.Interfaces.IMockedObject,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectation.Call``1(``0)">
            <summary>Sets the stub of CreateMethodExpectation.Call(!!0 ignored)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectation.CallOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets stubs of Call(!!0 ignored)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectation.InitializeStub">
            <summary>Initializes a new instance of type StubCreateMethodExpectation</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectationForSetupResult">
            <summary>Stub type of Rhino.Mocks.Impl.CreateMethodExpectationForSetupResult</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectationForSetupResult.#ctor(Rhino.Mocks.Interfaces.IMockedObject,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectationForSetupResult.Call``1(``0)">
            <summary>Sets the stub of CreateMethodExpectationForSetupResult.Call(!!0 ignored)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectationForSetupResult.CallOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets stubs of Call(!!0 ignored)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectationForSetupResult.InitializeStub">
            <summary>Initializes a new instance of type StubCreateMethodExpectationForSetupResult</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectationForSetupResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectationForSetupResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubCreateMethodExpectationForSetupResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubEventRaiser">
            <summary>Stub type of Rhino.Mocks.Impl.EventRaiser</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubEventRaiser.#ctor(Rhino.Mocks.Interfaces.IMockedObject,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubEventRaiser.InitializeStub">
            <summary>Initializes a new instance of type StubEventRaiser</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubEventRaiser.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubEventRaiser.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubEventRaiser.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubMethodOptions`1">
            <summary>Stub type of Rhino.Mocks.Impl.MethodOptions`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubMethodOptions`1.#ctor(Rhino.Mocks.MockRepository,Rhino.Mocks.Impl.RecordMockState,Rhino.Mocks.Interfaces.IMockedObject,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubMethodOptions`1.InitializeStub">
            <summary>Initializes a new instance of type StubMethodOptions</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubMethodOptions`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubMethodOptions`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubMethodOptions`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubNullLogger">
            <summary>Stub type of Rhino.Mocks.Impl.NullLogger</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubNullLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubNullLogger.InitializeStub">
            <summary>Initializes a new instance of type StubNullLogger</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubNullLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubNullLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubNullLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubProxyInstance">
            <summary>Stub type of Rhino.Mocks.Impl.ProxyInstance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubProxyInstance.#ctor(Rhino.Mocks.MockRepository,System.Type[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubProxyInstance.InitializeStub">
            <summary>Initializes a new instance of type StubProxyInstance</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubProxyInstance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubProxyInstance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubProxyInstance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubRange">
            <summary>Stub type of Rhino.Mocks.Impl.Range</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRange.#ctor(System.Int32,System.Nullable{System.Int32})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRange.InitializeStub">
            <summary>Initializes a new instance of type StubRange</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRange.ToString">
            <summary>Sets the stub of Range.ToString()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRange.ToString01">
            <summary>Sets the stub of Range.ToString()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRange.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRange.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRange.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState">
            <summary>Stub type of Rhino.Mocks.Impl.RecordDynamicMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.#ctor(Rhino.Mocks.Interfaces.IMockedObject,Rhino.Mocks.MockRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.AssertPreviousMethodIsClose">
            <summary>Sets the stub of RecordMockState.AssertPreviousMethodIsClose()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.AssertPreviousMethodIsClose01">
            <summary>Sets the stub of RecordMockState.AssertPreviousMethodIsClose()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.BackToRecord">
            <summary>Sets the stub of RecordDynamicMockState.BackToRecord()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.BackToRecord01">
            <summary>Sets the stub of RecordDynamicMockState.BackToRecord()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.DoReplay">
            <summary>Sets the stub of RecordDynamicMockState.DoReplay()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.DoReplay01">
            <summary>Sets the stub of RecordDynamicMockState.DoReplay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.GetDefaultCallCountRangeExpectation">
            <summary>Sets the stub of RecordDynamicMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.GetDefaultCallCountRangeExpectation01">
            <summary>Sets the stub of RecordDynamicMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.InitializeStub">
            <summary>Initializes a new instance of type StubRecordDynamicMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.Replay">
            <summary>Sets the stub of RecordMockState.Replay()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.Replay01">
            <summary>Sets the stub of RecordMockState.Replay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.Verify">
            <summary>Sets the stub of RecordMockState.Verify()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.Verify01">
            <summary>Sets the stub of RecordMockState.Verify()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRecordDynamicMockState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubRecordMockState">
            <summary>Stub type of Rhino.Mocks.Impl.RecordMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordMockState.#ctor(Rhino.Mocks.Interfaces.IMockedObject,Rhino.Mocks.MockRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordMockState.AssertPreviousMethodIsClose">
            <summary>Sets the stub of RecordMockState.AssertPreviousMethodIsClose()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordMockState.AssertPreviousMethodIsClose01">
            <summary>Sets the stub of RecordMockState.AssertPreviousMethodIsClose()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordMockState.BackToRecord">
            <summary>Sets the stub of RecordMockState.BackToRecord()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordMockState.BackToRecord01">
            <summary>Sets the stub of RecordMockState.BackToRecord()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordMockState.DoReplay">
            <summary>Sets the stub of RecordMockState.DoReplay()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordMockState.DoReplay01">
            <summary>Sets the stub of RecordMockState.DoReplay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordMockState.GetDefaultCallCountRangeExpectation">
            <summary>Sets the stub of RecordMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordMockState.GetDefaultCallCountRangeExpectation01">
            <summary>Sets the stub of RecordMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordMockState.InitializeStub">
            <summary>Initializes a new instance of type StubRecordMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordMockState.Replay">
            <summary>Sets the stub of RecordMockState.Replay()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordMockState.Replay01">
            <summary>Sets the stub of RecordMockState.Replay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordMockState.Verify">
            <summary>Sets the stub of RecordMockState.Verify()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordMockState.Verify01">
            <summary>Sets the stub of RecordMockState.Verify()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRecordMockState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRecordMockState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRecordMockState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState">
            <summary>Stub type of Rhino.Mocks.Impl.RecordPartialMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.#ctor(Rhino.Mocks.Interfaces.IMockedObject,Rhino.Mocks.MockRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.AssertPreviousMethodIsClose">
            <summary>Sets the stub of RecordMockState.AssertPreviousMethodIsClose()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.AssertPreviousMethodIsClose01">
            <summary>Sets the stub of RecordMockState.AssertPreviousMethodIsClose()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.BackToRecord">
            <summary>Sets the stub of RecordPartialMockState.BackToRecord()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.BackToRecord01">
            <summary>Sets the stub of RecordPartialMockState.BackToRecord()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.DoReplay">
            <summary>Sets the stub of RecordPartialMockState.DoReplay()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.DoReplay01">
            <summary>Sets the stub of RecordPartialMockState.DoReplay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.GetDefaultCallCountRangeExpectation">
            <summary>Sets the stub of RecordMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.GetDefaultCallCountRangeExpectation01">
            <summary>Sets the stub of RecordMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.InitializeStub">
            <summary>Initializes a new instance of type StubRecordPartialMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.Replay">
            <summary>Sets the stub of RecordMockState.Replay()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.Replay01">
            <summary>Sets the stub of RecordMockState.Replay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.Verify">
            <summary>Sets the stub of RecordMockState.Verify()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.Verify01">
            <summary>Sets the stub of RecordMockState.Verify()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRecordPartialMockState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState">
            <summary>Stub type of Rhino.Mocks.Impl.ReplayDynamicMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.#ctor(Rhino.Mocks.Impl.RecordDynamicMockState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.BackToRecord">
            <summary>Sets the stub of ReplayDynamicMockState.BackToRecord()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.BackToRecord01">
            <summary>Sets the stub of ReplayDynamicMockState.BackToRecord()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.DoMethodCall(Castle.Core.Interceptor.IInvocation,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of ReplayDynamicMockState.DoMethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.DoMethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the stub of ReplayDynamicMockState.DoMethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.InitializeStub">
            <summary>Initializes a new instance of type StubReplayDynamicMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.Replay">
            <summary>Sets the stub of ReplayMockState.Replay()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.Replay01">
            <summary>Sets the stub of ReplayMockState.Replay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.Verify">
            <summary>Sets the stub of ReplayMockState.Verify()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.Verify01">
            <summary>Sets the stub of ReplayMockState.Verify()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.VerifyStateGet">
            <summary>Sets the stub of ReplayMockState.get_VerifyState()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubReplayDynamicMockState.VerifyState">
            <summary>Sets the stub of ReplayMockState.get_VerifyState()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubReplayMockState">
            <summary>Stub type of Rhino.Mocks.Impl.ReplayMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayMockState.#ctor(Rhino.Mocks.Impl.RecordMockState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayMockState.BackToRecord">
            <summary>Sets the stub of ReplayMockState.BackToRecord()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayMockState.BackToRecord01">
            <summary>Sets the stub of ReplayMockState.BackToRecord()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayMockState.DoMethodCall(Castle.Core.Interceptor.IInvocation,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of ReplayMockState.DoMethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayMockState.DoMethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the stub of ReplayMockState.DoMethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayMockState.InitializeStub">
            <summary>Initializes a new instance of type StubReplayMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayMockState.Replay">
            <summary>Sets the stub of ReplayMockState.Replay()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayMockState.Replay01">
            <summary>Sets the stub of ReplayMockState.Replay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayMockState.Verify">
            <summary>Sets the stub of ReplayMockState.Verify()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayMockState.Verify01">
            <summary>Sets the stub of ReplayMockState.Verify()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayMockState.VerifyStateGet">
            <summary>Sets the stub of ReplayMockState.get_VerifyState()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubReplayMockState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubReplayMockState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubReplayMockState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubReplayMockState.VerifyState">
            <summary>Sets the stub of ReplayMockState.get_VerifyState()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState">
            <summary>Stub type of Rhino.Mocks.Impl.ReplayPartialMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.#ctor(Rhino.Mocks.Impl.RecordPartialMockState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.BackToRecord">
            <summary>Sets the stub of ReplayPartialMockState.BackToRecord()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.BackToRecord01">
            <summary>Sets the stub of ReplayPartialMockState.BackToRecord()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.DoMethodCall(Castle.Core.Interceptor.IInvocation,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of ReplayPartialMockState.DoMethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.DoMethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the stub of ReplayPartialMockState.DoMethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.InitializeStub">
            <summary>Initializes a new instance of type StubReplayPartialMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.Replay">
            <summary>Sets the stub of ReplayMockState.Replay()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.Replay01">
            <summary>Sets the stub of ReplayMockState.Replay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.Verify">
            <summary>Sets the stub of ReplayMockState.Verify()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.Verify01">
            <summary>Sets the stub of ReplayMockState.Verify()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.VerifyStateGet">
            <summary>Sets the stub of ReplayMockState.get_VerifyState()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubReplayPartialMockState.VerifyState">
            <summary>Sets the stub of ReplayMockState.get_VerifyState()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubRhinoInterceptor">
            <summary>Stub type of Rhino.Mocks.Impl.RhinoInterceptor</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRhinoInterceptor.#ctor(Rhino.Mocks.MockRepository,Rhino.Mocks.Interfaces.IMockedObject,System.Collections.Generic.IEnumerable{Rhino.Mocks.Impl.Invocation.InvocationVisitor})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubRhinoInterceptor.InitializeStub">
            <summary>Initializes a new instance of type StubRhinoInterceptor</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRhinoInterceptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRhinoInterceptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubRhinoInterceptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState">
            <summary>Stub type of Rhino.Mocks.Impl.StubRecordMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.#ctor(Rhino.Mocks.Interfaces.IMockedObject,Rhino.Mocks.MockRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.AssertPreviousMethodIsClose">
            <summary>Sets the stub of StubRecordMockState.AssertPreviousMethodIsClose()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.AssertPreviousMethodIsClose01">
            <summary>Sets the stub of StubRecordMockState.AssertPreviousMethodIsClose()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.BackToRecord">
            <summary>Sets the stub of RecordMockState.BackToRecord()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.BackToRecord01">
            <summary>Sets the stub of RecordMockState.BackToRecord()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.DoReplay">
            <summary>Sets the stub of RecordMockState.DoReplay()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.DoReplay01">
            <summary>Sets the stub of RecordMockState.DoReplay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.GetDefaultCallCountRangeExpectation">
            <summary>Sets the stub of StubRecordMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.GetDefaultCallCountRangeExpectation01">
            <summary>Sets the stub of StubRecordMockState.GetDefaultCallCountRangeExpectation()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.InitializeStub">
            <summary>Initializes a new instance of type StubStubRecordMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.Replay">
            <summary>Sets the stub of StubRecordMockState.Replay()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.Replay01">
            <summary>Sets the stub of StubRecordMockState.Replay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.Verify">
            <summary>Sets the stub of RecordMockState.Verify()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.Verify01">
            <summary>Sets the stub of RecordMockState.Verify()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubStubRecordMockState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubTextWriterExpectationLogger">
            <summary>Stub type of Rhino.Mocks.Impl.TextWriterExpectationLogger</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubTextWriterExpectationLogger.#ctor(System.IO.TextWriter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubTextWriterExpectationLogger.InitializeStub">
            <summary>Initializes a new instance of type StubTextWriterExpectationLogger</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubTextWriterExpectationLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubTextWriterExpectationLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubTextWriterExpectationLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubTraceWriterExpectationLogger">
            <summary>Stub type of Rhino.Mocks.Impl.TraceWriterExpectationLogger</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubTraceWriterExpectationLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubTraceWriterExpectationLogger.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubTraceWriterExpectationLogger.InitializeStub">
            <summary>Initializes a new instance of type StubTraceWriterExpectationLogger</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubTraceWriterExpectationLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubTraceWriterExpectationLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubTraceWriterExpectationLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubTraceWriterWithStackTraceExpectationWriter">
            <summary>Stub type of Rhino.Mocks.Impl.TraceWriterWithStackTraceExpectationWriter</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubTraceWriterWithStackTraceExpectationWriter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubTraceWriterWithStackTraceExpectationWriter.InitializeStub">
            <summary>Initializes a new instance of type StubTraceWriterWithStackTraceExpectationWriter</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubTraceWriterWithStackTraceExpectationWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubTraceWriterWithStackTraceExpectationWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubTraceWriterWithStackTraceExpectationWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Fakes.StubVerifiedMockState">
            <summary>Stub type of Rhino.Mocks.Impl.VerifiedMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubVerifiedMockState.#ctor(Rhino.Mocks.Interfaces.IMockState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubVerifiedMockState.BackToRecord">
            <summary>Sets the stub of VerifiedMockState.BackToRecord()</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.Fakes.StubVerifiedMockState.BackToRecord01">
            <summary>Sets the stub of VerifiedMockState.BackToRecord()</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Fakes.StubVerifiedMockState.InitializeStub">
            <summary>Initializes a new instance of type StubVerifiedMockState</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubVerifiedMockState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubVerifiedMockState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Fakes.StubVerifiedMockState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimHandleEvent">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Actions.HandleEvent</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimHandleEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimHandleEvent.#ctor(Rhino.Mocks.Impl.Invocation.Actions.HandleEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimHandleEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimHandleEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimHandleEvent.Bind(Rhino.Mocks.Interfaces.IInvocationActionn)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimHandleEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimHandleEvent.ConstructorIMockedObject">
            <summary>Sets the shim of HandleEvent.HandleEvent(IMockedObject proxy_instance)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimHandleEvent.PerformAgainstIInvocation">
            <summary>Sets the shim of HandleEvent.PerformAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimHandleEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimHandleEvent.AllInstances.PerformAgainstIInvocation">
            <summary>Sets the shim of HandleEvent.PerformAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeMethodAgainstMockedObject">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Actions.InvokeMethodAgainstMockedObject</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeMethodAgainstMockedObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeMethodAgainstMockedObject.#ctor(Rhino.Mocks.Impl.Invocation.Actions.InvokeMethodAgainstMockedObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeMethodAgainstMockedObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeMethodAgainstMockedObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeMethodAgainstMockedObject.Bind(Rhino.Mocks.Interfaces.IInvocationActionn)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeMethodAgainstMockedObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeMethodAgainstMockedObject.ConstructorIMockedObject">
            <summary>Sets the shim of InvokeMethodAgainstMockedObject.InvokeMethodAgainstMockedObject(IMockedObject proxy_instance)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeMethodAgainstMockedObject.PerformAgainstIInvocation">
            <summary>Sets the shim of InvokeMethodAgainstMockedObject.PerformAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeMethodAgainstMockedObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeMethodAgainstMockedObject.AllInstances.PerformAgainstIInvocation">
            <summary>Sets the shim of InvokeMethodAgainstMockedObject.PerformAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeProperty">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Actions.InvokeProperty</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeProperty.#ctor(Rhino.Mocks.Impl.Invocation.Actions.InvokeProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeProperty.Bind(Rhino.Mocks.Interfaces.IInvocationActionn)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeProperty.ConstructorIMockedObjectMockRepository">
            <summary>Sets the shim of InvokeProperty.InvokeProperty(IMockedObject proxy_instance, MockRepository mockRepository)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeProperty.PerformAgainstIInvocation">
            <summary>Sets the shim of InvokeProperty.PerformAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimInvokeProperty.AllInstances.PerformAgainstIInvocation">
            <summary>Sets the shim of InvokeProperty.PerformAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimProceed">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Actions.Proceed</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimProceed.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimProceed.#ctor(Rhino.Mocks.Impl.Invocation.Actions.Proceed)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimProceed.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimProceed.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimProceed.Bind(Rhino.Mocks.Interfaces.IInvocationActionn)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimProceed.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimProceed.Constructor">
            <summary>Sets the shim of Proceed.Proceed()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimProceed.PerformAgainstIInvocation">
            <summary>Sets the shim of Proceed.PerformAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimProceed.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimProceed.AllInstances.PerformAgainstIInvocation">
            <summary>Sets the shim of Proceed.PerformAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimRegularInvocation">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Actions.RegularInvocation</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimRegularInvocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimRegularInvocation.#ctor(Rhino.Mocks.Impl.Invocation.Actions.RegularInvocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimRegularInvocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimRegularInvocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimRegularInvocation.Bind(Rhino.Mocks.Interfaces.IInvocationActionn)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimRegularInvocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimRegularInvocation.ConstructorMockRepository">
            <summary>Sets the shim of RegularInvocation.RegularInvocation(MockRepository mock_repository)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimRegularInvocation.PerformAgainstIInvocation">
            <summary>Sets the shim of RegularInvocation.PerformAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimRegularInvocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.ShimRegularInvocation.AllInstances.PerformAgainstIInvocation">
            <summary>Sets the shim of RegularInvocation.PerformAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubHandleEvent">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Actions.HandleEvent</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubHandleEvent.#ctor(Rhino.Mocks.Interfaces.IMockedObject)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubHandleEvent.InitializeStub">
            <summary>Initializes a new instance of type StubHandleEvent</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubHandleEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubHandleEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubHandleEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubInvokeMethodAgainstMockedObject">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Actions.InvokeMethodAgainstMockedObject</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubInvokeMethodAgainstMockedObject.#ctor(Rhino.Mocks.Interfaces.IMockedObject)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubInvokeMethodAgainstMockedObject.InitializeStub">
            <summary>Initializes a new instance of type StubInvokeMethodAgainstMockedObject</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubInvokeMethodAgainstMockedObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubInvokeMethodAgainstMockedObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubInvokeMethodAgainstMockedObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubInvokeProperty">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Actions.InvokeProperty</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubInvokeProperty.#ctor(Rhino.Mocks.Interfaces.IMockedObject,Rhino.Mocks.MockRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubInvokeProperty.InitializeStub">
            <summary>Initializes a new instance of type StubInvokeProperty</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubInvokeProperty.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubInvokeProperty.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubInvokeProperty.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubProceed">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Actions.Proceed</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubProceed.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubProceed.InitializeStub">
            <summary>Initializes a new instance of type StubProceed</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubProceed.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubProceed.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubProceed.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubRegularInvocation">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Actions.RegularInvocation</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubRegularInvocation.#ctor(Rhino.Mocks.MockRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubRegularInvocation.InitializeStub">
            <summary>Initializes a new instance of type StubRegularInvocation</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubRegularInvocation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubRegularInvocation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Actions.Fakes.StubRegularInvocation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitor">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.InvocationVisitor</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitor.#ctor(Rhino.Mocks.Impl.Invocation.InvocationVisitor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitor.CanWorkWithIInvocation">
            <summary>Sets the shim of InvocationVisitor.CanWorkWith(IInvocation item)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitor.ConstructorISpecificationOfIInvocationIInvocationActionn">
            <summary>Sets the shim of InvocationVisitor.InvocationVisitor(ISpecification`1&lt;IInvocation&gt; criteria, IInvocationActionn invocationAction)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitor.RunAgainstIInvocation">
            <summary>Sets the shim of InvocationVisitor.RunAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitor.AllInstances.CanWorkWithIInvocation">
            <summary>Sets the shim of InvocationVisitor.CanWorkWith(IInvocation item)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitor.AllInstances.RunAgainstIInvocation">
            <summary>Sets the shim of InvocationVisitor.RunAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitorsFactory">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.InvocationVisitorsFactory</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitorsFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitorsFactory.#ctor(Rhino.Mocks.Impl.Invocation.InvocationVisitorsFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitorsFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitorsFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitorsFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitorsFactory.Constructor">
            <summary>Sets the shim of InvocationVisitorsFactory.InvocationVisitorsFactory()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitorsFactory.CreateStandardInvocationVisitorsIMockedObjectMockRepository">
            <summary>Sets the shim of InvocationVisitorsFactory.CreateStandardInvocationVisitors(IMockedObject proxy_instance, MockRepository mockRepository)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitorsFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.ShimInvocationVisitorsFactory.AllInstances.CreateStandardInvocationVisitorsIMockedObjectMockRepository">
            <summary>Sets the shim of InvocationVisitorsFactory.CreateStandardInvocationVisitors(IMockedObject proxy_instance, MockRepository mockRepository)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Fakes.StubInvocationVisitor">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.InvocationVisitor</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Fakes.StubInvocationVisitor.#ctor(Rhino.Mocks.Impl.InvocationSpecifications.ISpecification{Castle.Core.Interceptor.IInvocation},Rhino.Mocks.Interfaces.IInvocationActionn)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Fakes.StubInvocationVisitor.InitializeStub">
            <summary>Initializes a new instance of type StubInvocationVisitor</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.StubInvocationVisitor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.StubInvocationVisitor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.StubInvocationVisitor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Fakes.StubInvocationVisitorsFactory">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.InvocationVisitorsFactory</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Fakes.StubInvocationVisitorsFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Fakes.StubInvocationVisitorsFactory.InitializeStub">
            <summary>Initializes a new instance of type StubInvocationVisitorsFactory</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.StubInvocationVisitorsFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.StubInvocationVisitorsFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Fakes.StubInvocationVisitorsFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAndSpecification`1">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Specifications.AndSpecification`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAndSpecification`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAndSpecification`1.#ctor(Rhino.Mocks.Impl.Invocation.Specifications.AndSpecification{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAndSpecification`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAndSpecification`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAndSpecification`1.Bind(Rhino.Mocks.Impl.InvocationSpecifications.ISpecification{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAndSpecification`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAndSpecification`1.ConstructorISpecificationOfT0ISpecificationOfT0">
            <summary>Sets the shim of AndSpecification`1.AndSpecification`1(ISpecification`1&lt;!0&gt; left_side, ISpecification`1&lt;!0&gt; right_side)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAndSpecification`1.IsSatisfiedByT0">
            <summary>Sets the shim of AndSpecification`1.IsSatisfiedBy(!0 item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAndSpecification`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAndSpecification`1.AllInstances.IsSatisfiedByT0">
            <summary>Sets the shim of AndSpecification`1.IsSatisfiedBy(!0 item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAnyInvocation">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Specifications.AnyInvocation</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAnyInvocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAnyInvocation.#ctor(Rhino.Mocks.Impl.Invocation.Specifications.AnyInvocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAnyInvocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAnyInvocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAnyInvocation.Bind(Rhino.Mocks.Impl.InvocationSpecifications.ISpecification{Castle.Core.Interceptor.IInvocation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAnyInvocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAnyInvocation.Constructor">
            <summary>Sets the shim of AnyInvocation.AnyInvocation()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAnyInvocation.IsSatisfiedByIInvocation">
            <summary>Sets the shim of AnyInvocation.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAnyInvocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimAnyInvocation.AllInstances.IsSatisfiedByIInvocation">
            <summary>Sets the shim of AnyInvocation.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimFollowsEventNamingStandard">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Specifications.FollowsEventNamingStandard</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimFollowsEventNamingStandard.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimFollowsEventNamingStandard.#ctor(Rhino.Mocks.Impl.Invocation.Specifications.FollowsEventNamingStandard)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimFollowsEventNamingStandard.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimFollowsEventNamingStandard.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimFollowsEventNamingStandard.Bind(Rhino.Mocks.Impl.InvocationSpecifications.ISpecification{Castle.Core.Interceptor.IInvocation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimFollowsEventNamingStandard.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimFollowsEventNamingStandard.Constructor">
            <summary>Sets the shim of FollowsEventNamingStandard.FollowsEventNamingStandard()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimFollowsEventNamingStandard.IsSatisfiedByIInvocation">
            <summary>Sets the shim of FollowsEventNamingStandard.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimFollowsEventNamingStandard.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimFollowsEventNamingStandard.AllInstances.IsSatisfiedByIInvocation">
            <summary>Sets the shim of FollowsEventNamingStandard.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAPropertyInvocation">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Specifications.IsAPropertyInvocation</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAPropertyInvocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAPropertyInvocation.#ctor(Rhino.Mocks.Impl.Invocation.Specifications.IsAPropertyInvocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAPropertyInvocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAPropertyInvocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAPropertyInvocation.Bind(Rhino.Mocks.Impl.InvocationSpecifications.ISpecification{Castle.Core.Interceptor.IInvocation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAPropertyInvocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAPropertyInvocation.ConstructorIMockedObject">
            <summary>Sets the shim of IsAPropertyInvocation.IsAPropertyInvocation(IMockedObject proxy_instance)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAPropertyInvocation.IsSatisfiedByIInvocation">
            <summary>Sets the shim of IsAPropertyInvocation.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAPropertyInvocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAPropertyInvocation.AllInstances.IsSatisfiedByIInvocation">
            <summary>Sets the shim of IsAPropertyInvocation.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnEventInvocation">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Specifications.IsAnEventInvocation</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnEventInvocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnEventInvocation.#ctor(Rhino.Mocks.Impl.Invocation.Specifications.IsAnEventInvocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnEventInvocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnEventInvocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnEventInvocation.Bind(Rhino.Mocks.Impl.InvocationSpecifications.ISpecification{Castle.Core.Interceptor.IInvocation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnEventInvocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnEventInvocation.Constructor">
            <summary>Sets the shim of IsAnEventInvocation.IsAnEventInvocation()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnEventInvocation.IsSatisfiedByIInvocation">
            <summary>Sets the shim of IsAnEventInvocation.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnEventInvocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnEventInvocation.AllInstances.IsSatisfiedByIInvocation">
            <summary>Sets the shim of IsAnEventInvocation.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOfAMethodBelongingToObject">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Specifications.IsAnInvocationOfAMethodBelongingToObject</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOfAMethodBelongingToObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOfAMethodBelongingToObject.#ctor(Rhino.Mocks.Impl.Invocation.Specifications.IsAnInvocationOfAMethodBelongingToObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOfAMethodBelongingToObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOfAMethodBelongingToObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOfAMethodBelongingToObject.Bind(Rhino.Mocks.Impl.InvocationSpecifications.ISpecification{Castle.Core.Interceptor.IInvocation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOfAMethodBelongingToObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOfAMethodBelongingToObject.Constructor">
            <summary>Sets the shim of IsAnInvocationOfAMethodBelongingToObject.IsAnInvocationOfAMethodBelongingToObject()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOfAMethodBelongingToObject.IsSatisfiedByIInvocation">
            <summary>Sets the shim of IsAnInvocationOfAMethodBelongingToObject.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOfAMethodBelongingToObject.StaticConstructor">
            <summary>Sets the shim of IsAnInvocationOfAMethodBelongingToObject.IsAnInvocationOfAMethodBelongingToObject()</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOfAMethodBelongingToObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOfAMethodBelongingToObject.AllInstances.IsSatisfiedByIInvocation">
            <summary>Sets the shim of IsAnInvocationOfAMethodBelongingToObject.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOnAMockedObject">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Specifications.IsAnInvocationOnAMockedObject</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOnAMockedObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOnAMockedObject.#ctor(Rhino.Mocks.Impl.Invocation.Specifications.IsAnInvocationOnAMockedObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOnAMockedObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOnAMockedObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOnAMockedObject.Bind(Rhino.Mocks.Impl.InvocationSpecifications.ISpecification{Castle.Core.Interceptor.IInvocation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOnAMockedObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOnAMockedObject.Constructor">
            <summary>Sets the shim of IsAnInvocationOnAMockedObject.IsAnInvocationOnAMockedObject()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOnAMockedObject.IsSatisfiedByIInvocation">
            <summary>Sets the shim of IsAnInvocationOnAMockedObject.IsSatisfiedBy(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOnAMockedObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsAnInvocationOnAMockedObject.AllInstances.IsSatisfiedByIInvocation">
            <summary>Sets the shim of IsAnInvocationOnAMockedObject.IsSatisfiedBy(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsInvocationThatShouldTargetOriginal">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Specifications.IsInvocationThatShouldTargetOriginal</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsInvocationThatShouldTargetOriginal.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsInvocationThatShouldTargetOriginal.#ctor(Rhino.Mocks.Impl.Invocation.Specifications.IsInvocationThatShouldTargetOriginal)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsInvocationThatShouldTargetOriginal.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsInvocationThatShouldTargetOriginal.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsInvocationThatShouldTargetOriginal.Bind(Rhino.Mocks.Impl.InvocationSpecifications.ISpecification{Castle.Core.Interceptor.IInvocation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsInvocationThatShouldTargetOriginal.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsInvocationThatShouldTargetOriginal.ConstructorIMockedObject">
            <summary>Sets the shim of IsInvocationThatShouldTargetOriginal.IsInvocationThatShouldTargetOriginal(IMockedObject proxyInstance)</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsInvocationThatShouldTargetOriginal.IsSatisfiedByIInvocation">
            <summary>Sets the shim of IsInvocationThatShouldTargetOriginal.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsInvocationThatShouldTargetOriginal.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimIsInvocationThatShouldTargetOriginal.AllInstances.IsSatisfiedByIInvocation">
            <summary>Sets the shim of IsInvocationThatShouldTargetOriginal.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimNamedEventExistsOnDeclaringType">
            <summary>Shim type of Rhino.Mocks.Impl.Invocation.Specifications.NamedEventExistsOnDeclaringType</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimNamedEventExistsOnDeclaringType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimNamedEventExistsOnDeclaringType.#ctor(Rhino.Mocks.Impl.Invocation.Specifications.NamedEventExistsOnDeclaringType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimNamedEventExistsOnDeclaringType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimNamedEventExistsOnDeclaringType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimNamedEventExistsOnDeclaringType.Bind(Rhino.Mocks.Impl.InvocationSpecifications.ISpecification{Castle.Core.Interceptor.IInvocation})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimNamedEventExistsOnDeclaringType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimNamedEventExistsOnDeclaringType.Constructor">
            <summary>Sets the shim of NamedEventExistsOnDeclaringType.NamedEventExistsOnDeclaringType()</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimNamedEventExistsOnDeclaringType.IsSatisfiedByIInvocation">
            <summary>Sets the shim of NamedEventExistsOnDeclaringType.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimNamedEventExistsOnDeclaringType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.ShimNamedEventExistsOnDeclaringType.AllInstances.IsSatisfiedByIInvocation">
            <summary>Sets the shim of NamedEventExistsOnDeclaringType.IsSatisfiedBy(IInvocation item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubAndSpecification`1">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Specifications.AndSpecification`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubAndSpecification`1.#ctor(Rhino.Mocks.Impl.InvocationSpecifications.ISpecification{`0},Rhino.Mocks.Impl.InvocationSpecifications.ISpecification{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubAndSpecification`1.InitializeStub">
            <summary>Initializes a new instance of type StubAndSpecification</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubAndSpecification`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubAndSpecification`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubAndSpecification`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubAnyInvocation">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Specifications.AnyInvocation</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubAnyInvocation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubAnyInvocation.InitializeStub">
            <summary>Initializes a new instance of type StubAnyInvocation</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubAnyInvocation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubAnyInvocation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubAnyInvocation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubFollowsEventNamingStandard">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Specifications.FollowsEventNamingStandard</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubFollowsEventNamingStandard.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubFollowsEventNamingStandard.InitializeStub">
            <summary>Initializes a new instance of type StubFollowsEventNamingStandard</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubFollowsEventNamingStandard.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubFollowsEventNamingStandard.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubFollowsEventNamingStandard.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAPropertyInvocation">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Specifications.IsAPropertyInvocation</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAPropertyInvocation.#ctor(Rhino.Mocks.Interfaces.IMockedObject)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAPropertyInvocation.InitializeStub">
            <summary>Initializes a new instance of type StubIsAPropertyInvocation</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAPropertyInvocation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAPropertyInvocation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAPropertyInvocation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnEventInvocation">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Specifications.IsAnEventInvocation</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnEventInvocation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnEventInvocation.InitializeStub">
            <summary>Initializes a new instance of type StubIsAnEventInvocation</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnEventInvocation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnEventInvocation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnEventInvocation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnInvocationOfAMethodBelongingToObject">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Specifications.IsAnInvocationOfAMethodBelongingToObject</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnInvocationOfAMethodBelongingToObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnInvocationOfAMethodBelongingToObject.InitializeStub">
            <summary>Initializes a new instance of type StubIsAnInvocationOfAMethodBelongingToObject</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnInvocationOfAMethodBelongingToObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnInvocationOfAMethodBelongingToObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnInvocationOfAMethodBelongingToObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnInvocationOnAMockedObject">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Specifications.IsAnInvocationOnAMockedObject</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnInvocationOnAMockedObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnInvocationOnAMockedObject.InitializeStub">
            <summary>Initializes a new instance of type StubIsAnInvocationOnAMockedObject</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnInvocationOnAMockedObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnInvocationOnAMockedObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsAnInvocationOnAMockedObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsInvocationThatShouldTargetOriginal">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Specifications.IsInvocationThatShouldTargetOriginal</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsInvocationThatShouldTargetOriginal.#ctor(Rhino.Mocks.Interfaces.IMockedObject)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsInvocationThatShouldTargetOriginal.InitializeStub">
            <summary>Initializes a new instance of type StubIsInvocationThatShouldTargetOriginal</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsInvocationThatShouldTargetOriginal.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsInvocationThatShouldTargetOriginal.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubIsInvocationThatShouldTargetOriginal.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubNamedEventExistsOnDeclaringType">
            <summary>Stub type of Rhino.Mocks.Impl.Invocation.Specifications.NamedEventExistsOnDeclaringType</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubNamedEventExistsOnDeclaringType.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubNamedEventExistsOnDeclaringType.InitializeStub">
            <summary>Initializes a new instance of type StubNamedEventExistsOnDeclaringType</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubNamedEventExistsOnDeclaringType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubNamedEventExistsOnDeclaringType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Impl.Invocation.Specifications.Fakes.StubNamedEventExistsOnDeclaringType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Impl.InvocationSpecifications.Fakes.StubISpecification`1">
            <summary>Stub type of Rhino.Mocks.Impl.InvocationSpecifications.ISpecification`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.InvocationSpecifications.Fakes.StubISpecification`1.#ctor">
            <summary>Initializes a new instance of type StubISpecification</summary>
        </member>
        <member name="F:Rhino.Mocks.Impl.InvocationSpecifications.Fakes.StubISpecification`1.IsSatisfiedByT0">
            <summary>Sets the stub of ISpecification`1.IsSatisfiedBy(!0 item)</summary>
        </member>
        <member name="M:Rhino.Mocks.Impl.InvocationSpecifications.Fakes.StubISpecification`1.rm::Rhino#Mocks#Impl#InvocationSpecifications#ISpecification{T}#IsSatisfiedBy(`0)">
            <summary>Sets the stub of ISpecification`1.IsSatisfiedBy(!0 item)</summary>
        </member>
        <member name="T:Rhino.Mocks.Interfaces.Fakes.StubICreateMethodExpectation">
            <summary>Stub type of Rhino.Mocks.Interfaces.ICreateMethodExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubICreateMethodExpectation.#ctor">
            <summary>Initializes a new instance of type StubICreateMethodExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubICreateMethodExpectation.CallOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets stubs of Call(!!0 ignored)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubICreateMethodExpectation.rm::Rhino#Mocks#Interfaces#ICreateMethodExpectation#Call``1(``0)">
            <summary>Sets the stub of ICreateMethodExpectation.Call(!!0 ignored)</summary>
        </member>
        <member name="T:Rhino.Mocks.Interfaces.Fakes.StubIEventRaiser">
            <summary>Stub type of Rhino.Mocks.Interfaces.IEventRaiser</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIEventRaiser.#ctor">
            <summary>Initializes a new instance of type StubIEventRaiser</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIEventRaiser.RaiseObjectArray">
            <summary>Sets the stub of IEventRaiser.Raise(Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIEventRaiser.RaiseObjectEventArgs">
            <summary>Sets the stub of IEventRaiser.Raise(Object sender, EventArgs e)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIEventRaiser.rm::Rhino#Mocks#Interfaces#IEventRaiser#Raise(System.Object[])">
            <summary>Sets the stub of IEventRaiser.Raise(Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIEventRaiser.rm::Rhino#Mocks#Interfaces#IEventRaiser#Raise(System.Object,System.EventArgs)">
            <summary>Sets the stub of IEventRaiser.Raise(Object sender, EventArgs e)</summary>
        </member>
        <member name="T:Rhino.Mocks.Interfaces.Fakes.StubIExpectation">
            <summary>Stub type of Rhino.Mocks.Interfaces.IExpectation</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.#ctor">
            <summary>Initializes a new instance of type StubIExpectation</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ActionToExecuteGet">
            <summary>Sets the stub of IExpectation.get_ActionToExecute()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ActionToExecuteSetDelegate">
            <summary>Sets the stub of IExpectation.set_ActionToExecute(Delegate value)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ActionsSatisfiedGet">
            <summary>Sets the stub of IExpectation.get_ActionsSatisfied()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ActualCallsCountGet">
            <summary>Sets the stub of IExpectation.get_ActualCallsCount()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.AddActualCall">
            <summary>Sets the stub of IExpectation.AddActualCall()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.AllowTentativeReturnGet">
            <summary>Sets the stub of IExpectation.get_AllowTentativeReturn()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.AllowTentativeReturnSetBoolean">
            <summary>Sets the stub of IExpectation.set_AllowTentativeReturn(Boolean value)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.AttachBackingFieldToActionToExecute">
            <summary>Attaches delegates to emulate StubIExpectation.ActionToExecute as a property with a backing field.</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.AttachBackingFieldToAllowTentativeReturn">
            <summary>Attaches delegates to emulate StubIExpectation.AllowTentativeReturn as a property with a backing field.</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.AttachBackingFieldToExceptionToThrow">
            <summary>Attaches delegates to emulate StubIExpectation.ExceptionToThrow as a property with a backing field.</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.AttachBackingFieldToExpected">
            <summary>Attaches delegates to emulate StubIExpectation.Expected as a property with a backing field.</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.AttachBackingFieldToMessage">
            <summary>Attaches delegates to emulate StubIExpectation.Message as a property with a backing field.</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.AttachBackingFieldToOutRefParams">
            <summary>Attaches delegates to emulate StubIExpectation.OutRefParams as a property with a backing field.</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.AttachBackingFieldToRepeatableOption">
            <summary>Attaches delegates to emulate StubIExpectation.RepeatableOption as a property with a backing field.</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.AttachBackingFieldToReturnValue">
            <summary>Attaches delegates to emulate StubIExpectation.ReturnValue as a property with a backing field.</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.BuildVerificationFailureMessage">
            <summary>Sets the stub of IExpectation.BuildVerificationFailureMessage()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.CanAcceptCallsGet">
            <summary>Sets the stub of IExpectation.get_CanAcceptCalls()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ErrorMessageGet">
            <summary>Sets the stub of IExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ExceptionToThrowGet">
            <summary>Sets the stub of IExpectation.get_ExceptionToThrow()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ExceptionToThrowSetException">
            <summary>Sets the stub of IExpectation.set_ExceptionToThrow(Exception value)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ExpectationSatisfiedGet">
            <summary>Sets the stub of IExpectation.get_ExpectationSatisfied()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ExpectedGet">
            <summary>Sets the stub of IExpectation.get_Expected()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ExpectedSetRange">
            <summary>Sets the stub of IExpectation.set_Expected(Range value)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.HasReturnValueGet">
            <summary>Sets the stub of IExpectation.get_HasReturnValue()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.IsExpectedObjectArray">
            <summary>Sets the stub of IExpectation.IsExpected(Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.MessageGet">
            <summary>Sets the stub of IExpectation.get_Message()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.MessageSetString">
            <summary>Sets the stub of IExpectation.set_Message(String value)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.MethodGet">
            <summary>Sets the stub of IExpectation.get_Method()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.OriginalinvocationGet">
            <summary>Sets the stub of IExpectation.get_Originalinvocation()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.OutRefParamsGet">
            <summary>Sets the stub of IExpectation.get_OutRefParams()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.OutRefParamsSetObjectArray">
            <summary>Sets the stub of IExpectation.set_OutRefParams(Object[] value)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.RepeatableOptionGet">
            <summary>Sets the stub of IExpectation.get_RepeatableOption()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.RepeatableOptionSetRepeatableOption">
            <summary>Sets the stub of IExpectation.set_RepeatableOption(RepeatableOption value)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ReturnOrThrowIInvocationObjectArray">
            <summary>Sets the stub of IExpectation.ReturnOrThrow(IInvocation invocation, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ReturnValueGet">
            <summary>Sets the stub of IExpectation.get_ReturnValue()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.ReturnValueSetObject">
            <summary>Sets the stub of IExpectation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#AddActualCall">
            <summary>Sets the stub of IExpectation.AddActualCall()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#BuildVerificationFailureMessage">
            <summary>Sets the stub of IExpectation.BuildVerificationFailureMessage()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#IsExpected(System.Object[])">
            <summary>Sets the stub of IExpectation.IsExpected(Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#ReturnOrThrow(Castle.Core.Interceptor.IInvocation,System.Object[])">
            <summary>Sets the stub of IExpectation.ReturnOrThrow(IInvocation invocation, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#ActionToExecute">
            <summary>Sets the stub of IExpectation.get_ActionToExecute()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#ActionsSatisfied">
            <summary>Sets the stub of IExpectation.get_ActionsSatisfied()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#ActualCallsCount">
            <summary>Sets the stub of IExpectation.get_ActualCallsCount()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#AllowTentativeReturn">
            <summary>Sets the stub of IExpectation.get_AllowTentativeReturn()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#CanAcceptCalls">
            <summary>Sets the stub of IExpectation.get_CanAcceptCalls()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#ErrorMessage">
            <summary>Sets the stub of IExpectation.get_ErrorMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#ExceptionToThrow">
            <summary>Sets the stub of IExpectation.get_ExceptionToThrow()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#ExpectationSatisfied">
            <summary>Sets the stub of IExpectation.get_ExpectationSatisfied()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#Expected">
            <summary>Sets the stub of IExpectation.get_Expected()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#HasReturnValue">
            <summary>Sets the stub of IExpectation.get_HasReturnValue()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#Message">
            <summary>Sets the stub of IExpectation.get_Message()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#Method">
            <summary>Sets the stub of IExpectation.get_Method()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#Originalinvocation">
            <summary>Sets the stub of IExpectation.get_Originalinvocation()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#OutRefParams">
            <summary>Sets the stub of IExpectation.get_OutRefParams()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#RepeatableOption">
            <summary>Sets the stub of IExpectation.get_RepeatableOption()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIExpectation.rm::Rhino#Mocks#Interfaces#IExpectation#ReturnValue">
            <summary>Sets the stub of IExpectation.get_ReturnValue()</summary>
        </member>
        <member name="T:Rhino.Mocks.Interfaces.Fakes.StubIExpectationLogger">
            <summary>Stub type of Rhino.Mocks.Interfaces.IExpectationLogger</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectationLogger.#ctor">
            <summary>Initializes a new instance of type StubIExpectationLogger</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectationLogger.LogRecordedExpectationIInvocationIExpectation">
            <summary>Sets the stub of IExpectationLogger.LogRecordedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectationLogger.LogReplayedExpectationIInvocationIExpectation">
            <summary>Sets the stub of IExpectationLogger.LogReplayedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIExpectationLogger.LogUnexpectedMethodCallIInvocationString">
            <summary>Sets the stub of IExpectationLogger.LogUnexpectedMethodCall(IInvocation invocation, String message)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectationLogger.rm::Rhino#Mocks#Interfaces#IExpectationLogger#LogRecordedExpectation(Castle.Core.Interceptor.IInvocation,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of IExpectationLogger.LogRecordedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectationLogger.rm::Rhino#Mocks#Interfaces#IExpectationLogger#LogReplayedExpectation(Castle.Core.Interceptor.IInvocation,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of IExpectationLogger.LogReplayedExpectation(IInvocation invocation, IExpectation expectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIExpectationLogger.rm::Rhino#Mocks#Interfaces#IExpectationLogger#LogUnexpectedMethodCall(Castle.Core.Interceptor.IInvocation,System.String)">
            <summary>Sets the stub of IExpectationLogger.LogUnexpectedMethodCall(IInvocation invocation, String message)</summary>
        </member>
        <member name="T:Rhino.Mocks.Interfaces.Fakes.StubIInvocationActionn">
            <summary>Stub type of Rhino.Mocks.Interfaces.IInvocationActionn</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIInvocationActionn.#ctor">
            <summary>Initializes a new instance of type StubIInvocationActionn</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIInvocationActionn.PerformAgainstIInvocation">
            <summary>Sets the stub of IInvocationActionn.PerformAgainst(IInvocation invocation)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIInvocationActionn.rm::Rhino#Mocks#Interfaces#IInvocationActionn#PerformAgainst(Castle.Core.Interceptor.IInvocation)">
            <summary>Sets the stub of IInvocationActionn.PerformAgainst(IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1">
            <summary>Stub type of Rhino.Mocks.Interfaces.IMethodOptions`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.#ctor">
            <summary>Initializes a new instance of type StubIMethodOptions</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallOriginalMethod">
            <summary>Sets the stub of IMethodOptions`1.CallOriginalMethod()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallOriginalMethodOriginalCallOptions">
            <summary>Sets the stub of IMethodOptions`1.CallOriginalMethod(OriginalCallOptions options)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallbackDelegate">
            <summary>Sets the stub of IMethodOptions`1.Callback(Delegate callback)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallbackDelegatesFunctionOfBoolean">
            <summary>Sets the stub of IMethodOptions`1.Callback(Function`1&lt;Boolean&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallbackOf10DelegatesFunctionOfBooleanM0M1M2M3M4M5M6M7M8M9``10(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets stubs of Callback(Function`11&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallbackOf1DelegatesFunctionOfBooleanM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets stubs of Callback(Function`2&lt;Boolean,!!0&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallbackOf2DelegatesFunctionOfBooleanM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets stubs of Callback(Function`3&lt;Boolean,!!0,!!1&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallbackOf3DelegatesFunctionOfBooleanM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets stubs of Callback(Function`4&lt;Boolean,!!0,!!1,!!2&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallbackOf4DelegatesFunctionOfBooleanM0M1M2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets stubs of Callback(Function`5&lt;Boolean,!!0,!!1,!!2,!!3&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallbackOf5DelegatesFunctionOfBooleanM0M1M2M3M4``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets stubs of Callback(Function`6&lt;Boolean,!!0,!!1,!!2,!!3,!!4&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallbackOf6DelegatesFunctionOfBooleanM0M1M2M3M4M5``6(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets stubs of Callback(Function`7&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallbackOf7DelegatesFunctionOfBooleanM0M1M2M3M4M5M6``7(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets stubs of Callback(Function`8&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallbackOf8DelegatesFunctionOfBooleanM0M1M2M3M4M5M6M7``8(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets stubs of Callback(Function`9&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.CallbackOf9DelegatesFunctionOfBooleanM0M1M2M3M4M5M6M7M8``9(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7,``8},Rhino.Mocks.Interfaces.IMethodOptions{`0}})">
            <summary>Sets stubs of Callback(Function`10&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8&gt; callback)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.ConstraintsAbstractConstraintArray">
            <summary>Sets the stub of IMethodOptions`1.Constraints(AbstractConstraint[] constraints)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.DoDelegate">
            <summary>Sets the stub of IMethodOptions`1.Do(Delegate action)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.GetEventRaiser">
            <summary>Sets the stub of IMethodOptions`1.GetEventRaiser()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.IgnoreArguments">
            <summary>Sets the stub of IMethodOptions`1.IgnoreArguments()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.MessageString">
            <summary>Sets the stub of IMethodOptions`1.Message(String documentationMessage)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.OutRefObjectArray">
            <summary>Sets the stub of IMethodOptions`1.OutRef(Object[] parameters)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.PropertyBehavior">
            <summary>Sets the stub of IMethodOptions`1.PropertyBehavior()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.RepeatGet">
            <summary>Sets the stub of IMethodOptions`1.get_Repeat()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.ReturnT0">
            <summary>Sets the stub of IMethodOptions`1.Return(!0 objToReturn)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#CallOriginalMethod(Rhino.Mocks.Interfaces.OriginalCallOptions)">
            <summary>Sets the stub of IMethodOptions`1.CallOriginalMethod(OriginalCallOptions options)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#CallOriginalMethod">
            <summary>Sets the stub of IMethodOptions`1.CallOriginalMethod()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Callback(System.Delegate)">
            <summary>Sets the stub of IMethodOptions`1.Callback(Delegate callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Callback(Rhino.Mocks.Delegates.Function{System.Boolean})">
            <summary>Sets the stub of IMethodOptions`1.Callback(Function`1&lt;Boolean&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Callback``1(Rhino.Mocks.Delegates.Function{System.Boolean,``0})">
            <summary>Sets the stub of IMethodOptions`1.Callback(Function`2&lt;Boolean,!!0&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Callback``2(Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1})">
            <summary>Sets the stub of IMethodOptions`1.Callback(Function`3&lt;Boolean,!!0,!!1&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Callback``3(Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2})">
            <summary>Sets the stub of IMethodOptions`1.Callback(Function`4&lt;Boolean,!!0,!!1,!!2&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Callback``4(Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3})">
            <summary>Sets the stub of IMethodOptions`1.Callback(Function`5&lt;Boolean,!!0,!!1,!!2,!!3&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Callback``5(Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4})">
            <summary>Sets the stub of IMethodOptions`1.Callback(Function`6&lt;Boolean,!!0,!!1,!!2,!!3,!!4&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Callback``6(Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5})">
            <summary>Sets the stub of IMethodOptions`1.Callback(Function`7&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Callback``7(Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6})">
            <summary>Sets the stub of IMethodOptions`1.Callback(Function`8&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Callback``8(Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>Sets the stub of IMethodOptions`1.Callback(Function`9&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Callback``9(Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>Sets the stub of IMethodOptions`1.Callback(Function`10&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Callback``10(Rhino.Mocks.Delegates.Function{System.Boolean,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
            <summary>Sets the stub of IMethodOptions`1.Callback(Function`11&lt;Boolean,!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9&gt; callback)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Constraints(Rhino.Mocks.Constraints.AbstractConstraint[])">
            <summary>Sets the stub of IMethodOptions`1.Constraints(AbstractConstraint[] constraints)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Do(System.Delegate)">
            <summary>Sets the stub of IMethodOptions`1.Do(Delegate action)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#GetEventRaiser">
            <summary>Sets the stub of IMethodOptions`1.GetEventRaiser()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#IgnoreArguments">
            <summary>Sets the stub of IMethodOptions`1.IgnoreArguments()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Message(System.String)">
            <summary>Sets the stub of IMethodOptions`1.Message(String documentationMessage)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#OutRef(System.Object[])">
            <summary>Sets the stub of IMethodOptions`1.OutRef(Object[] parameters)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#PropertyBehavior">
            <summary>Sets the stub of IMethodOptions`1.PropertyBehavior()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Return(`0)">
            <summary>Sets the stub of IMethodOptions`1.Return(!0 objToReturn)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#SetPropertyAndIgnoreArgument">
            <summary>Sets the stub of IMethodOptions`1.SetPropertyAndIgnoreArgument()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#SetPropertyWithArgument(`0)">
            <summary>Sets the stub of IMethodOptions`1.SetPropertyWithArgument(!0 argument)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#TentativeReturn">
            <summary>Sets the stub of IMethodOptions`1.TentativeReturn()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Throw(System.Exception)">
            <summary>Sets the stub of IMethodOptions`1.Throw(Exception exception)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#WhenCalled(System.Action{Rhino.Mocks.MethodInvocation})">
            <summary>Sets the stub of IMethodOptions`1.WhenCalled(Action`1&lt;MethodInvocation&gt; action)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.SetPropertyAndIgnoreArgument">
            <summary>Sets the stub of IMethodOptions`1.SetPropertyAndIgnoreArgument()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.SetPropertyWithArgumentT0">
            <summary>Sets the stub of IMethodOptions`1.SetPropertyWithArgument(!0 argument)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.TentativeReturn">
            <summary>Sets the stub of IMethodOptions`1.TentativeReturn()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.ThrowException">
            <summary>Sets the stub of IMethodOptions`1.Throw(Exception exception)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.WhenCalledActionOfMethodInvocation">
            <summary>Sets the stub of IMethodOptions`1.WhenCalled(Action`1&lt;MethodInvocation&gt; action)</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIMethodOptions`1.rm::Rhino#Mocks#Interfaces#IMethodOptions{T}#Repeat">
            <summary>Sets the stub of IMethodOptions`1.get_Repeat()</summary>
        </member>
        <member name="T:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder">
            <summary>Stub type of Rhino.Mocks.Interfaces.IMethodRecorder</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.#ctor">
            <summary>Initializes a new instance of type StubIMethodRecorder</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.AddRecorderIMethodRecorder">
            <summary>Sets the stub of IMethodRecorder.AddRecorder(IMethodRecorder recorder)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.AddToRepeatableMethodsObjectMethodInfoIExpectation">
            <summary>Sets the stub of IMethodRecorder.AddToRepeatableMethods(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.ClearReplayerToCallIMethodRecorder">
            <summary>Sets the stub of IMethodRecorder.ClearReplayerToCall(IMethodRecorder childReplayer)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.GetAllExpectationsForProxyAndMethodObjectMethodInfo">
            <summary>Sets the stub of IMethodRecorder.GetAllExpectationsForProxyAndMethod(Object proxy, MethodInfo method)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.GetAllExpectationsForProxyObject">
            <summary>Sets the stub of IMethodRecorder.GetAllExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.GetExpectedCallsMessage">
            <summary>Sets the stub of IMethodRecorder.GetExpectedCallsMessage()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.GetRecordedExpectationIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the stub of IMethodRecorder.GetRecordedExpectation(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.GetRecordedExpectationOrNullObjectMethodInfoObjectArray">
            <summary>Sets the stub of IMethodRecorder.GetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.GetRepeatableExpectationObjectMethodInfoObjectArray">
            <summary>Sets the stub of IMethodRecorder.GetRepeatableExpectation(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.HasExpectationsGet">
            <summary>Sets the stub of IMethodRecorder.get_HasExpectations()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.MoveToParentReplayer">
            <summary>Sets the stub of IMethodRecorder.MoveToParentReplayer()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.MoveToPreviousRecorder">
            <summary>Sets the stub of IMethodRecorder.MoveToPreviousRecorder()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.RecordObjectMethodInfoIExpectation">
            <summary>Sets the stub of IMethodRecorder.Record(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.RemoveAllRepeatableExpectationsForProxyObject">
            <summary>Sets the stub of IMethodRecorder.RemoveAllRepeatableExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.RemoveExpectationIExpectation">
            <summary>Sets the stub of IMethodRecorder.RemoveExpectation(IExpectation expectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.ReplaceExpectationObjectMethodInfoIExpectationIExpectation">
            <summary>Sets the stub of IMethodRecorder.ReplaceExpectation(Object proxy, MethodInfo method, IExpectation oldExpectation, IExpectation newExpectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#AddRecorder(Rhino.Mocks.Interfaces.IMethodRecorder)">
            <summary>Sets the stub of IMethodRecorder.AddRecorder(IMethodRecorder recorder)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#AddToRepeatableMethods(System.Object,System.Reflection.MethodInfo,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of IMethodRecorder.AddToRepeatableMethods(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#ClearReplayerToCall(Rhino.Mocks.Interfaces.IMethodRecorder)">
            <summary>Sets the stub of IMethodRecorder.ClearReplayerToCall(IMethodRecorder childReplayer)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#GetAllExpectationsForProxy(System.Object)">
            <summary>Sets the stub of IMethodRecorder.GetAllExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#GetAllExpectationsForProxyAndMethod(System.Object,System.Reflection.MethodInfo)">
            <summary>Sets the stub of IMethodRecorder.GetAllExpectationsForProxyAndMethod(Object proxy, MethodInfo method)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#GetExpectedCallsMessage">
            <summary>Sets the stub of IMethodRecorder.GetExpectedCallsMessage()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#GetRecordedExpectation(Castle.Core.Interceptor.IInvocation,System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of IMethodRecorder.GetRecordedExpectation(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#GetRecordedExpectationOrNull(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of IMethodRecorder.GetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#GetRepeatableExpectation(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of IMethodRecorder.GetRepeatableExpectation(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#MoveToParentReplayer">
            <summary>Sets the stub of IMethodRecorder.MoveToParentReplayer()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#MoveToPreviousRecorder">
            <summary>Sets the stub of IMethodRecorder.MoveToPreviousRecorder()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#Record(System.Object,System.Reflection.MethodInfo,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of IMethodRecorder.Record(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#RemoveAllRepeatableExpectationsForProxy(System.Object)">
            <summary>Sets the stub of IMethodRecorder.RemoveAllRepeatableExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#RemoveExpectation(Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of IMethodRecorder.RemoveExpectation(IExpectation expectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#ReplaceExpectation(System.Object,System.Reflection.MethodInfo,Rhino.Mocks.Interfaces.IExpectation,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of IMethodRecorder.ReplaceExpectation(Object proxy, MethodInfo method, IExpectation oldExpectation, IExpectation newExpectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#UnexpectedMethodCall(Castle.Core.Interceptor.IInvocation,System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of IMethodRecorder.UnexpectedMethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.UnexpectedMethodCallIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the stub of IMethodRecorder.UnexpectedMethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIMethodRecorder.rm::Rhino#Mocks#Interfaces#IMethodRecorder#HasExpectations">
            <summary>Sets the stub of IMethodRecorder.get_HasExpectations()</summary>
        </member>
        <member name="T:Rhino.Mocks.Interfaces.Fakes.StubIMockState">
            <summary>Stub type of Rhino.Mocks.Interfaces.IMockState</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockState.#ctor">
            <summary>Initializes a new instance of type StubIMockState</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockState.BackToRecord">
            <summary>Sets the stub of IMockState.BackToRecord()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockState.GetLastMethodOptionsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Rhino.Mocks.Interfaces.IMethodOptions{``0}})">
            <summary>Sets stubs of GetLastMethodOptions()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockState.LastMethodOptionsGet">
            <summary>Sets the stub of IMockState.get_LastMethodOptions()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockState.MethodCallIInvocationMethodInfoObjectArray">
            <summary>Sets the stub of IMockState.MethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockState.NotifyCallOnPropertyBehavior">
            <summary>Sets the stub of IMockState.NotifyCallOnPropertyBehavior()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockState.Replay">
            <summary>Sets the stub of IMockState.Replay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockState.rm::Rhino#Mocks#Interfaces#IMockState#BackToRecord">
            <summary>Sets the stub of IMockState.BackToRecord()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockState.rm::Rhino#Mocks#Interfaces#IMockState#GetLastMethodOptions``1">
            <summary>Sets the stub of IMockState.GetLastMethodOptions()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockState.rm::Rhino#Mocks#Interfaces#IMockState#MethodCall(Castle.Core.Interceptor.IInvocation,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of IMockState.MethodCall(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockState.rm::Rhino#Mocks#Interfaces#IMockState#NotifyCallOnPropertyBehavior">
            <summary>Sets the stub of IMockState.NotifyCallOnPropertyBehavior()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockState.rm::Rhino#Mocks#Interfaces#IMockState#Replay">
            <summary>Sets the stub of IMockState.Replay()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockState.rm::Rhino#Mocks#Interfaces#IMockState#SetExceptionToThrowOnVerify(System.Exception)">
            <summary>Sets the stub of IMockState.SetExceptionToThrowOnVerify(Exception ex)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockState.rm::Rhino#Mocks#Interfaces#IMockState#Verify">
            <summary>Sets the stub of IMockState.Verify()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockState.SetExceptionToThrowOnVerifyException">
            <summary>Sets the stub of IMockState.SetExceptionToThrowOnVerify(Exception ex)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockState.Verify">
            <summary>Sets the stub of IMockState.Verify()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockState.VerifyStateGet">
            <summary>Sets the stub of IMockState.get_VerifyState()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIMockState.rm::Rhino#Mocks#Interfaces#IMockState#LastMethodOptions">
            <summary>Sets the stub of IMockState.get_LastMethodOptions()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIMockState.rm::Rhino#Mocks#Interfaces#IMockState#VerifyState">
            <summary>Sets the stub of IMockState.get_VerifyState()</summary>
        </member>
        <member name="T:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject">
            <summary>Stub type of Rhino.Mocks.Interfaces.IMockedObject</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.#ctor">
            <summary>Initializes a new instance of type StubIMockedObject</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.AttachBackingFieldToConstructorArguments">
            <summary>Attaches delegates to emulate StubIMockedObject.ConstructorArguments as a property with a backing field.</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.AttachBackingFieldToMockedObjectInstance">
            <summary>Attaches delegates to emulate StubIMockedObject.MockedObjectInstance as a property with a backing field.</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.ClearStateBackToRecordOptions">
            <summary>Sets the stub of IMockedObject.ClearState(BackToRecordOptions options)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.ConstructorArgumentsGet">
            <summary>Sets the stub of IMockedObject.get_ConstructorArguments()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.ConstructorArgumentsSetObjectArray">
            <summary>Sets the stub of IMockedObject.set_ConstructorArguments(Object[] value)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.DependentMocksGet">
            <summary>Sets the stub of IMockedObject.get_DependentMocks()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.GetCallArgumentsForMethodInfo">
            <summary>Sets the stub of IMockedObject.GetCallArgumentsFor(MethodInfo method)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.GetDeclaringTypeMethodInfo">
            <summary>Sets the stub of IMockedObject.GetDeclaringType(MethodInfo info)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.GetEventSubscribersString">
            <summary>Sets the stub of IMockedObject.GetEventSubscribers(String eventName)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.HandleEventMethodInfoObjectArray">
            <summary>Sets the stub of IMockedObject.HandleEvent(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.HandlePropertyMethodInfoObjectArray">
            <summary>Sets the stub of IMockedObject.HandleProperty(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.ImplementedTypesGet">
            <summary>Sets the stub of IMockedObject.get_ImplementedTypes()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.IsPropertyMethodMethodInfo">
            <summary>Sets the stub of IMockedObject.IsPropertyMethod(MethodInfo method)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.MethodCallMethodInfoObjectArray">
            <summary>Sets the stub of IMockedObject.MethodCall(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.MockedObjectInstanceGet">
            <summary>Sets the stub of IMockedObject.get_MockedObjectInstance()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.MockedObjectInstanceSetObject">
            <summary>Sets the stub of IMockedObject.set_MockedObjectInstance(Object value)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.ProxyHashGet">
            <summary>Sets the stub of IMockedObject.get_ProxyHash()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.RegisterMethodForCallingOriginalMethodInfo">
            <summary>Sets the stub of IMockedObject.RegisterMethodForCallingOriginal(MethodInfo method)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.RegisterPropertyBehaviorForPropertyInfo">
            <summary>Sets the stub of IMockedObject.RegisterPropertyBehaviorFor(PropertyInfo prop)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.RepositoryGet">
            <summary>Sets the stub of IMockedObject.get_Repository()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#ClearState(Rhino.Mocks.BackToRecordOptions)">
            <summary>Sets the stub of IMockedObject.ClearState(BackToRecordOptions options)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#GetCallArgumentsFor(System.Reflection.MethodInfo)">
            <summary>Sets the stub of IMockedObject.GetCallArgumentsFor(MethodInfo method)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#GetDeclaringType(System.Reflection.MethodInfo)">
            <summary>Sets the stub of IMockedObject.GetDeclaringType(MethodInfo info)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#GetEventSubscribers(System.String)">
            <summary>Sets the stub of IMockedObject.GetEventSubscribers(String eventName)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#HandleEvent(System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of IMockedObject.HandleEvent(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#HandleProperty(System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of IMockedObject.HandleProperty(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#IsPropertyMethod(System.Reflection.MethodInfo)">
            <summary>Sets the stub of IMockedObject.IsPropertyMethod(MethodInfo method)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#MethodCall(System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of IMockedObject.MethodCall(MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#RegisterMethodForCallingOriginal(System.Reflection.MethodInfo)">
            <summary>Sets the stub of IMockedObject.RegisterMethodForCallingOriginal(MethodInfo method)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#RegisterPropertyBehaviorFor(System.Reflection.PropertyInfo)">
            <summary>Sets the stub of IMockedObject.RegisterPropertyBehaviorFor(PropertyInfo prop)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#ShouldCallOriginal(System.Reflection.MethodInfo)">
            <summary>Sets the stub of IMockedObject.ShouldCallOriginal(MethodInfo method)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.ShouldCallOriginalMethodInfo">
            <summary>Sets the stub of IMockedObject.ShouldCallOriginal(MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#ConstructorArguments">
            <summary>Sets the stub of IMockedObject.get_ConstructorArguments()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#DependentMocks">
            <summary>Sets the stub of IMockedObject.get_DependentMocks()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#ImplementedTypes">
            <summary>Sets the stub of IMockedObject.get_ImplementedTypes()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#MockedObjectInstance">
            <summary>Sets the stub of IMockedObject.get_MockedObjectInstance()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#ProxyHash">
            <summary>Sets the stub of IMockedObject.get_ProxyHash()</summary>
        </member>
        <member name="P:Rhino.Mocks.Interfaces.Fakes.StubIMockedObject.rm::Rhino#Mocks#Interfaces#IMockedObject#Repository">
            <summary>Sets the stub of IMockedObject.get_Repository()</summary>
        </member>
        <member name="T:Rhino.Mocks.Interfaces.Fakes.StubIPartialMockMarker">
            <summary>Stub type of Rhino.Mocks.Interfaces.IPartialMockMarker</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIPartialMockMarker.#ctor">
            <summary>Initializes a new instance of type StubIPartialMockMarker</summary>
        </member>
        <member name="T:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1">
            <summary>Stub type of Rhino.Mocks.Interfaces.IRepeat`1</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.#ctor">
            <summary>Initializes a new instance of type StubIRepeat</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.Any">
            <summary>Sets the stub of IRepeat`1.Any()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.AtLeastOnce">
            <summary>Sets the stub of IRepeat`1.AtLeastOnce()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.Never">
            <summary>Sets the stub of IRepeat`1.Never()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.Once">
            <summary>Sets the stub of IRepeat`1.Once()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.rm::Rhino#Mocks#Interfaces#IRepeat{T}#Any">
            <summary>Sets the stub of IRepeat`1.Any()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.rm::Rhino#Mocks#Interfaces#IRepeat{T}#AtLeastOnce">
            <summary>Sets the stub of IRepeat`1.AtLeastOnce()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.rm::Rhino#Mocks#Interfaces#IRepeat{T}#Never">
            <summary>Sets the stub of IRepeat`1.Never()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.rm::Rhino#Mocks#Interfaces#IRepeat{T}#Once">
            <summary>Sets the stub of IRepeat`1.Once()</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.rm::Rhino#Mocks#Interfaces#IRepeat{T}#Times(System.Int32)">
            <summary>Sets the stub of IRepeat`1.Times(Int32 count)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.rm::Rhino#Mocks#Interfaces#IRepeat{T}#Times(System.Int32,System.Int32)">
            <summary>Sets the stub of IRepeat`1.Times(Int32 min, Int32 max)</summary>
        </member>
        <member name="M:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.rm::Rhino#Mocks#Interfaces#IRepeat{T}#Twice">
            <summary>Sets the stub of IRepeat`1.Twice()</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.TimesInt32">
            <summary>Sets the stub of IRepeat`1.Times(Int32 count)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.TimesInt32Int32">
            <summary>Sets the stub of IRepeat`1.Times(Int32 min, Int32 max)</summary>
        </member>
        <member name="F:Rhino.Mocks.Interfaces.Fakes.StubIRepeat`1.Twice">
            <summary>Sets the stub of IRepeat`1.Twice()</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase">
            <summary>Shim type of Rhino.Mocks.MethodRecorders.MethodRecorderBase</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.#ctor(Rhino.Mocks.MethodRecorders.MethodRecorderBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.Bind(Rhino.Mocks.Interfaces.IMethodRecorder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AddRecorderIMethodRecorder">
            <summary>Sets the shim of MethodRecorderBase.AddRecorder(IMethodRecorder recorder)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AddToRepeatableMethodsObjectMethodInfoIExpectation">
            <summary>Sets the shim of MethodRecorderBase.AddToRepeatableMethods(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.ClearReplayerToCallIMethodRecorder">
            <summary>Sets the shim of MethodRecorderBase.ClearReplayerToCall(IMethodRecorder childReplayer)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.ConstructorIMethodRecorderProxyMethodExpectationsDictionary">
            <summary>Sets the shim of MethodRecorderBase.MethodRecorderBase(IMethodRecorder parentRecorder, ProxyMethodExpectationsDictionary repeatableMethods)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.ConstructorProxyMethodExpectationsDictionary">
            <summary>Sets the shim of MethodRecorderBase.MethodRecorderBase(ProxyMethodExpectationsDictionary repeatableMethods)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.ExpectationNotOnListExpectationsListIExpectationBoolean">
            <summary>Sets the shim of MethodRecorderBase.ExpectationNotOnList(ExpectationsList list, IExpectation expectation, Boolean isStub)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.GetAllExpectationsForProxyObject">
            <summary>Sets the shim of MethodRecorderBase.GetAllExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.GetRecordedExpectationIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the shim of MethodRecorderBase.GetRecordedExpectation(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.GetRecordedExpectationOrNullObjectMethodInfoObjectArray">
            <summary>Sets the shim of MethodRecorderBase.GetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.GetRepeatableExpectationObjectMethodInfoObjectArray">
            <summary>Sets the shim of MethodRecorderBase.GetRepeatableExpectation(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.HasExpectationsGet">
            <summary>Sets the shim of MethodRecorderBase.get_HasExpectations()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.MoveToParentReplayer">
            <summary>Sets the shim of MethodRecorderBase.MoveToParentReplayer()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.MoveToPreviousRecorder">
            <summary>Sets the shim of MethodRecorderBase.MoveToPreviousRecorder()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.RecordObjectMethodInfoIExpectation">
            <summary>Sets the shim of MethodRecorderBase.Record(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.RemoveAllRepeatableExpectationsForProxyObject">
            <summary>Sets the shim of MethodRecorderBase.RemoveAllRepeatableExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.RemoveExpectationIExpectation">
            <summary>Sets the shim of MethodRecorderBase.RemoveExpectation(IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.ReplaceExpectationObjectMethodInfoIExpectationIExpectation">
            <summary>Sets the shim of MethodRecorderBase.ReplaceExpectation(Object proxy, MethodInfo method, IExpectation oldExpectation, IExpectation newExpectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.ShouldConsiderThisReplayerIMethodRecorder">
            <summary>Sets the shim of MethodRecorderBase.ShouldConsiderThisReplayer(IMethodRecorder replayer)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.TryReplaceRepeatableExpectationMethodInfoIExpectationIExpectationObject">
            <summary>Sets the shim of MethodRecorderBase.TryReplaceRepeatableExpectation(MethodInfo method, IExpectation newExpectation, IExpectation oldExpectation, Object proxy)</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.AddRecorderIMethodRecorder">
            <summary>Sets the shim of MethodRecorderBase.AddRecorder(IMethodRecorder recorder)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.AddToRepeatableMethodsObjectMethodInfoIExpectation">
            <summary>Sets the shim of MethodRecorderBase.AddToRepeatableMethods(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.ClearReplayerToCallIMethodRecorder">
            <summary>Sets the shim of MethodRecorderBase.ClearReplayerToCall(IMethodRecorder childReplayer)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.ExpectationNotOnListExpectationsListIExpectationBoolean">
            <summary>Sets the shim of MethodRecorderBase.ExpectationNotOnList(ExpectationsList list, IExpectation expectation, Boolean isStub)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.GetAllExpectationsForProxyObject">
            <summary>Sets the shim of MethodRecorderBase.GetAllExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.GetRecordedExpectationIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the shim of MethodRecorderBase.GetRecordedExpectation(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.GetRecordedExpectationOrNullObjectMethodInfoObjectArray">
            <summary>Sets the shim of MethodRecorderBase.GetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.GetRepeatableExpectationObjectMethodInfoObjectArray">
            <summary>Sets the shim of MethodRecorderBase.GetRepeatableExpectation(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.HasExpectationsGet">
            <summary>Sets the shim of MethodRecorderBase.get_HasExpectations()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.MoveToParentReplayer">
            <summary>Sets the shim of MethodRecorderBase.MoveToParentReplayer()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.MoveToPreviousRecorder">
            <summary>Sets the shim of MethodRecorderBase.MoveToPreviousRecorder()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.RecordObjectMethodInfoIExpectation">
            <summary>Sets the shim of MethodRecorderBase.Record(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.RemoveAllRepeatableExpectationsForProxyObject">
            <summary>Sets the shim of MethodRecorderBase.RemoveAllRepeatableExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.RemoveExpectationIExpectation">
            <summary>Sets the shim of MethodRecorderBase.RemoveExpectation(IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.ReplaceExpectationObjectMethodInfoIExpectationIExpectation">
            <summary>Sets the shim of MethodRecorderBase.ReplaceExpectation(Object proxy, MethodInfo method, IExpectation oldExpectation, IExpectation newExpectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.ShouldConsiderThisReplayerIMethodRecorder">
            <summary>Sets the shim of MethodRecorderBase.ShouldConsiderThisReplayer(IMethodRecorder replayer)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimMethodRecorderBase.AllInstances.TryReplaceRepeatableExpectationMethodInfoIExpectationIExpectationObject">
            <summary>Sets the shim of MethodRecorderBase.TryReplaceRepeatableExpectation(MethodInfo method, IExpectation newExpectation, IExpectation oldExpectation, Object proxy)</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder">
            <summary>Shim type of Rhino.Mocks.MethodRecorders.OrderedMethodRecorder</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.#ctor(Rhino.Mocks.MethodRecorders.OrderedMethodRecorder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.Bind(Rhino.Mocks.Interfaces.IMethodRecorder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.ConstructorIMethodRecorderProxyMethodExpectationsDictionary">
            <summary>Sets the shim of OrderedMethodRecorder.OrderedMethodRecorder(IMethodRecorder parentRecorder, ProxyMethodExpectationsDictionary repeatableMethods)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.ConstructorProxyMethodExpectationsDictionary">
            <summary>Sets the shim of OrderedMethodRecorder.OrderedMethodRecorder(ProxyMethodExpectationsDictionary repeatableMethods)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.DoGetRecordedExpectationOrNullObjectMethodInfoObjectArray">
            <summary>Sets the shim of OrderedMethodRecorder.DoGetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.GetExpectedCallsMessage">
            <summary>Sets the shim of OrderedMethodRecorder.GetExpectedCallsMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.UnexpectedMethodCallIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the shim of OrderedMethodRecorder.UnexpectedMethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.AllInstances.DoGetRecordedExpectationOrNullObjectMethodInfoObjectArray">
            <summary>Sets the shim of OrderedMethodRecorder.DoGetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.AllInstances.GetExpectedCallsMessage">
            <summary>Sets the shim of OrderedMethodRecorder.GetExpectedCallsMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimOrderedMethodRecorder.AllInstances.UnexpectedMethodCallIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the shim of OrderedMethodRecorder.UnexpectedMethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet">
            <summary>Shim type of Rhino.Mocks.MethodRecorders.ProxyMethodExpectationTriplet</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.#ctor(Rhino.Mocks.MethodRecorders.ProxyMethodExpectationTriplet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.ConstructorObjectMethodInfoIExpectation">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.ProxyMethodExpectationTriplet(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.EqualsObject">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.ExpectationGet">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.get_Expectation()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.ExpectationSetIExpectation">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.set_Expectation(IExpectation value)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.GetHashCode">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.MethodGet">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.get_Method()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.ProxyGet">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.get_Proxy()</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.AllInstances.EqualsObject">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.AllInstances.ExpectationGet">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.get_Expectation()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.AllInstances.ExpectationSetIExpectation">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.set_Expectation(IExpectation value)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.AllInstances.GetHashCode01">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.AllInstances.MethodGet">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.get_Method()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodExpectationTriplet.AllInstances.ProxyGet">
            <summary>Sets the shim of ProxyMethodExpectationTriplet.get_Proxy()</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair">
            <summary>Shim type of Rhino.Mocks.MethodRecorders.ProxyMethodPair</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.#ctor(Rhino.Mocks.MethodRecorders.ProxyMethodPair)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.ConstructorObjectMethodInfo">
            <summary>Sets the shim of ProxyMethodPair.ProxyMethodPair(Object proxy, MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.EqualsObject">
            <summary>Sets the shim of ProxyMethodPair.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.GetHashCode">
            <summary>Sets the shim of ProxyMethodPair.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.MethodGet">
            <summary>Sets the shim of ProxyMethodPair.get_Method()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.ProxyGet">
            <summary>Sets the shim of ProxyMethodPair.get_Proxy()</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.AllInstances.EqualsObject">
            <summary>Sets the shim of ProxyMethodPair.Equals(Object obj)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.AllInstances.GetHashCode01">
            <summary>Sets the shim of ProxyMethodPair.GetHashCode()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.AllInstances.MethodGet">
            <summary>Sets the shim of ProxyMethodPair.get_Method()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimProxyMethodPair.AllInstances.ProxyGet">
            <summary>Sets the shim of ProxyMethodPair.get_Proxy()</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.ShimRecorderChanger">
            <summary>Shim type of Rhino.Mocks.MethodRecorders.RecorderChanger</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimRecorderChanger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimRecorderChanger.#ctor(Rhino.Mocks.MethodRecorders.RecorderChanger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimRecorderChanger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimRecorderChanger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimRecorderChanger.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimRecorderChanger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimRecorderChanger.ConstructorMockRepositoryIMethodRecorderIMethodRecorder">
            <summary>Sets the shim of RecorderChanger.RecorderChanger(MockRepository repository, IMethodRecorder recorder, IMethodRecorder newRecorder)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimRecorderChanger.Dispose">
            <summary>Sets the shim of RecorderChanger.Dispose()</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.ShimRecorderChanger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimRecorderChanger.AllInstances.Dispose">
            <summary>Sets the shim of RecorderChanger.Dispose()</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder">
            <summary>Shim type of Rhino.Mocks.MethodRecorders.UnorderedMethodRecorder</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.#ctor(Rhino.Mocks.MethodRecorders.UnorderedMethodRecorder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.Bind(Rhino.Mocks.Interfaces.IMethodRecorder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AppendNextExpectedObjectMethodInfoStringBuilder">
            <summary>Sets the shim of UnorderedMethodRecorder.AppendNextExpected(Object proxy, MethodInfo method, StringBuilder sb)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.ConstructorIMethodRecorderProxyMethodExpectationsDictionary">
            <summary>Sets the shim of UnorderedMethodRecorder.UnorderedMethodRecorder(IMethodRecorder parentRecorder, ProxyMethodExpectationsDictionary repeatableMethods)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.ConstructorProxyMethodExpectationsDictionary">
            <summary>Sets the shim of UnorderedMethodRecorder.UnorderedMethodRecorder(ProxyMethodExpectationsDictionary repeatableMethods)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.DoAddRecorderIMethodRecorder">
            <summary>Sets the shim of UnorderedMethodRecorder.DoAddRecorder(IMethodRecorder recorder)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.DoGetAllExpectationsForProxyObject">
            <summary>Sets the shim of UnorderedMethodRecorder.DoGetAllExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.DoGetRecordedExpectationIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the shim of UnorderedMethodRecorder.DoGetRecordedExpectation(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.DoGetRecordedExpectationOrNullObjectMethodInfoObjectArray">
            <summary>Sets the shim of UnorderedMethodRecorder.DoGetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.DoHasExpectationsGet">
            <summary>Sets the shim of UnorderedMethodRecorder.get_DoHasExpectations()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.DoRecordObjectMethodInfoIExpectation">
            <summary>Sets the shim of UnorderedMethodRecorder.DoRecord(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.DoRemoveExpectationIExpectation">
            <summary>Sets the shim of UnorderedMethodRecorder.DoRemoveExpectation(IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.DoReplaceExpectationObjectMethodInfoIExpectationIExpectation">
            <summary>Sets the shim of UnorderedMethodRecorder.DoReplaceExpectation(Object proxy, MethodInfo method, IExpectation oldExpectation, IExpectation newExpectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.GetAllExpectationsForProxyAndMethodObjectMethodInfo">
            <summary>Sets the shim of UnorderedMethodRecorder.GetAllExpectationsForProxyAndMethod(Object proxy, MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.GetExpectedCallsMessage">
            <summary>Sets the shim of UnorderedMethodRecorder.GetExpectedCallsMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.MethodsEqualsMethodInfoProxyMethodExpectationTriplet">
            <summary>Sets the shim of UnorderedMethodRecorder.MethodsEquals(MethodInfo method, ProxyMethodExpectationTriplet triplet)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.UnexpectedMethodCallIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the shim of UnorderedMethodRecorder.UnexpectedMethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances.AppendNextExpectedObjectMethodInfoStringBuilder">
            <summary>Sets the shim of UnorderedMethodRecorder.AppendNextExpected(Object proxy, MethodInfo method, StringBuilder sb)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances.DoAddRecorderIMethodRecorder">
            <summary>Sets the shim of UnorderedMethodRecorder.DoAddRecorder(IMethodRecorder recorder)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances.DoGetAllExpectationsForProxyObject">
            <summary>Sets the shim of UnorderedMethodRecorder.DoGetAllExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances.DoGetRecordedExpectationIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the shim of UnorderedMethodRecorder.DoGetRecordedExpectation(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances.DoGetRecordedExpectationOrNullObjectMethodInfoObjectArray">
            <summary>Sets the shim of UnorderedMethodRecorder.DoGetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances.DoHasExpectationsGet">
            <summary>Sets the shim of UnorderedMethodRecorder.get_DoHasExpectations()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances.DoRecordObjectMethodInfoIExpectation">
            <summary>Sets the shim of UnorderedMethodRecorder.DoRecord(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances.DoRemoveExpectationIExpectation">
            <summary>Sets the shim of UnorderedMethodRecorder.DoRemoveExpectation(IExpectation expectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances.DoReplaceExpectationObjectMethodInfoIExpectationIExpectation">
            <summary>Sets the shim of UnorderedMethodRecorder.DoReplaceExpectation(Object proxy, MethodInfo method, IExpectation oldExpectation, IExpectation newExpectation)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances.GetAllExpectationsForProxyAndMethodObjectMethodInfo">
            <summary>Sets the shim of UnorderedMethodRecorder.GetAllExpectationsForProxyAndMethod(Object proxy, MethodInfo method)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances.GetExpectedCallsMessage">
            <summary>Sets the shim of UnorderedMethodRecorder.GetExpectedCallsMessage()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.ShimUnorderedMethodRecorder.AllInstances.UnexpectedMethodCallIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the shim of UnorderedMethodRecorder.UnexpectedMethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase">
            <summary>Stub type of Rhino.Mocks.MethodRecorders.MethodRecorderBase</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.#ctor(Rhino.Mocks.Generated.ProxyMethodExpectationsDictionary)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.#ctor(Rhino.Mocks.Interfaces.IMethodRecorder,Rhino.Mocks.Generated.ProxyMethodExpectationsDictionary)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoAddRecorder(Rhino.Mocks.Interfaces.IMethodRecorder)">
            <summary>Sets the stub of MethodRecorderBase.DoAddRecorder(IMethodRecorder recorder)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoAddRecorderIMethodRecorder">
            <summary>Sets the stub of MethodRecorderBase.DoAddRecorder(IMethodRecorder recorder)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoGetAllExpectationsForProxy(System.Object)">
            <summary>Sets the stub of MethodRecorderBase.DoGetAllExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoGetAllExpectationsForProxyObject">
            <summary>Sets the stub of MethodRecorderBase.DoGetAllExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoGetRecordedExpectation(Castle.Core.Interceptor.IInvocation,System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of MethodRecorderBase.DoGetRecordedExpectation(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoGetRecordedExpectationIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the stub of MethodRecorderBase.DoGetRecordedExpectation(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoGetRecordedExpectationOrNull(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of MethodRecorderBase.DoGetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoGetRecordedExpectationOrNullObjectMethodInfoObjectArray">
            <summary>Sets the stub of MethodRecorderBase.DoGetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoHasExpectationsGet">
            <summary>Sets the stub of MethodRecorderBase.get_DoHasExpectations()</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoRecord(System.Object,System.Reflection.MethodInfo,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of MethodRecorderBase.DoRecord(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoRecordObjectMethodInfoIExpectation">
            <summary>Sets the stub of MethodRecorderBase.DoRecord(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoRemoveExpectation(Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of MethodRecorderBase.DoRemoveExpectation(IExpectation expectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoRemoveExpectationIExpectation">
            <summary>Sets the stub of MethodRecorderBase.DoRemoveExpectation(IExpectation expectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoReplaceExpectation(System.Object,System.Reflection.MethodInfo,Rhino.Mocks.Interfaces.IExpectation,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of MethodRecorderBase.DoReplaceExpectation(Object proxy, MethodInfo method, IExpectation oldExpectation, IExpectation newExpectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoReplaceExpectationObjectMethodInfoIExpectationIExpectation">
            <summary>Sets the stub of MethodRecorderBase.DoReplaceExpectation(Object proxy, MethodInfo method, IExpectation oldExpectation, IExpectation newExpectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.GetAllExpectationsForProxyAndMethod(System.Object,System.Reflection.MethodInfo)">
            <summary>Sets the stub of MethodRecorderBase.GetAllExpectationsForProxyAndMethod(Object proxy, MethodInfo method)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.GetAllExpectationsForProxyAndMethodObjectMethodInfo">
            <summary>Sets the stub of MethodRecorderBase.GetAllExpectationsForProxyAndMethod(Object proxy, MethodInfo method)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.GetExpectedCallsMessage">
            <summary>Sets the stub of MethodRecorderBase.GetExpectedCallsMessage()</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.GetExpectedCallsMessage01">
            <summary>Sets the stub of MethodRecorderBase.GetExpectedCallsMessage()</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.InitializeStub">
            <summary>Initializes a new instance of type StubMethodRecorderBase</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.UnexpectedMethodCall(Castle.Core.Interceptor.IInvocation,System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of MethodRecorderBase.UnexpectedMethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.UnexpectedMethodCallIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the stub of MethodRecorderBase.UnexpectedMethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.DoHasExpectations">
            <summary>Sets the stub of MethodRecorderBase.get_DoHasExpectations()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubMethodRecorderBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder">
            <summary>Stub type of Rhino.Mocks.MethodRecorders.OrderedMethodRecorder</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.#ctor(Rhino.Mocks.Generated.ProxyMethodExpectationsDictionary)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.#ctor(Rhino.Mocks.Interfaces.IMethodRecorder,Rhino.Mocks.Generated.ProxyMethodExpectationsDictionary)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoAddRecorder(Rhino.Mocks.Interfaces.IMethodRecorder)">
            <summary>Sets the stub of UnorderedMethodRecorder.DoAddRecorder(IMethodRecorder recorder)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoAddRecorderIMethodRecorder">
            <summary>Sets the stub of UnorderedMethodRecorder.DoAddRecorder(IMethodRecorder recorder)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoGetAllExpectationsForProxy(System.Object)">
            <summary>Sets the stub of UnorderedMethodRecorder.DoGetAllExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoGetAllExpectationsForProxyObject">
            <summary>Sets the stub of UnorderedMethodRecorder.DoGetAllExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoGetRecordedExpectation(Castle.Core.Interceptor.IInvocation,System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of UnorderedMethodRecorder.DoGetRecordedExpectation(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoGetRecordedExpectationIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the stub of UnorderedMethodRecorder.DoGetRecordedExpectation(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoGetRecordedExpectationOrNull(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of OrderedMethodRecorder.DoGetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoGetRecordedExpectationOrNullObjectMethodInfoObjectArray">
            <summary>Sets the stub of OrderedMethodRecorder.DoGetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoHasExpectationsGet">
            <summary>Sets the stub of UnorderedMethodRecorder.get_DoHasExpectations()</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoRecord(System.Object,System.Reflection.MethodInfo,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of UnorderedMethodRecorder.DoRecord(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoRecordObjectMethodInfoIExpectation">
            <summary>Sets the stub of UnorderedMethodRecorder.DoRecord(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoRemoveExpectation(Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of UnorderedMethodRecorder.DoRemoveExpectation(IExpectation expectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoRemoveExpectationIExpectation">
            <summary>Sets the stub of UnorderedMethodRecorder.DoRemoveExpectation(IExpectation expectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoReplaceExpectation(System.Object,System.Reflection.MethodInfo,Rhino.Mocks.Interfaces.IExpectation,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of UnorderedMethodRecorder.DoReplaceExpectation(Object proxy, MethodInfo method, IExpectation oldExpectation, IExpectation newExpectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoReplaceExpectationObjectMethodInfoIExpectationIExpectation">
            <summary>Sets the stub of UnorderedMethodRecorder.DoReplaceExpectation(Object proxy, MethodInfo method, IExpectation oldExpectation, IExpectation newExpectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.GetAllExpectationsForProxyAndMethod(System.Object,System.Reflection.MethodInfo)">
            <summary>Sets the stub of UnorderedMethodRecorder.GetAllExpectationsForProxyAndMethod(Object proxy, MethodInfo method)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.GetAllExpectationsForProxyAndMethodObjectMethodInfo">
            <summary>Sets the stub of UnorderedMethodRecorder.GetAllExpectationsForProxyAndMethod(Object proxy, MethodInfo method)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.GetExpectedCallsMessage">
            <summary>Sets the stub of OrderedMethodRecorder.GetExpectedCallsMessage()</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.GetExpectedCallsMessage01">
            <summary>Sets the stub of OrderedMethodRecorder.GetExpectedCallsMessage()</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.InitializeStub">
            <summary>Initializes a new instance of type StubOrderedMethodRecorder</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.UnexpectedMethodCall(Castle.Core.Interceptor.IInvocation,System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of OrderedMethodRecorder.UnexpectedMethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.UnexpectedMethodCallIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the stub of OrderedMethodRecorder.UnexpectedMethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.DoHasExpectations">
            <summary>Sets the stub of UnorderedMethodRecorder.get_DoHasExpectations()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubOrderedMethodRecorder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodExpectationTriplet">
            <summary>Stub type of Rhino.Mocks.MethodRecorders.ProxyMethodExpectationTriplet</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodExpectationTriplet.#ctor(System.Object,System.Reflection.MethodInfo,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodExpectationTriplet.Equals(System.Object)">
            <summary>Sets the stub of ProxyMethodExpectationTriplet.Equals(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodExpectationTriplet.EqualsObject">
            <summary>Sets the stub of ProxyMethodExpectationTriplet.Equals(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodExpectationTriplet.GetHashCode">
            <summary>Sets the stub of ProxyMethodExpectationTriplet.GetHashCode()</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodExpectationTriplet.GetHashCode01">
            <summary>Sets the stub of ProxyMethodExpectationTriplet.GetHashCode()</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodExpectationTriplet.InitializeStub">
            <summary>Initializes a new instance of type StubProxyMethodExpectationTriplet</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodExpectationTriplet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodExpectationTriplet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodExpectationTriplet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodPair">
            <summary>Stub type of Rhino.Mocks.MethodRecorders.ProxyMethodPair</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodPair.#ctor(System.Object,System.Reflection.MethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodPair.Equals(System.Object)">
            <summary>Sets the stub of ProxyMethodPair.Equals(Object obj)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodPair.EqualsObject">
            <summary>Sets the stub of ProxyMethodPair.Equals(Object obj)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodPair.GetHashCode">
            <summary>Sets the stub of ProxyMethodPair.GetHashCode()</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodPair.GetHashCode01">
            <summary>Sets the stub of ProxyMethodPair.GetHashCode()</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodPair.InitializeStub">
            <summary>Initializes a new instance of type StubProxyMethodPair</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodPair.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodPair.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubProxyMethodPair.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.StubRecorderChanger">
            <summary>Stub type of Rhino.Mocks.MethodRecorders.RecorderChanger</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubRecorderChanger.#ctor(Rhino.Mocks.MockRepository,Rhino.Mocks.Interfaces.IMethodRecorder,Rhino.Mocks.Interfaces.IMethodRecorder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubRecorderChanger.InitializeStub">
            <summary>Initializes a new instance of type StubRecorderChanger</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubRecorderChanger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubRecorderChanger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubRecorderChanger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder">
            <summary>Stub type of Rhino.Mocks.MethodRecorders.UnorderedMethodRecorder</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.#ctor(Rhino.Mocks.Generated.ProxyMethodExpectationsDictionary)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.#ctor(Rhino.Mocks.Interfaces.IMethodRecorder,Rhino.Mocks.Generated.ProxyMethodExpectationsDictionary)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoAddRecorder(Rhino.Mocks.Interfaces.IMethodRecorder)">
            <summary>Sets the stub of UnorderedMethodRecorder.DoAddRecorder(IMethodRecorder recorder)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoAddRecorderIMethodRecorder">
            <summary>Sets the stub of UnorderedMethodRecorder.DoAddRecorder(IMethodRecorder recorder)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoGetAllExpectationsForProxy(System.Object)">
            <summary>Sets the stub of UnorderedMethodRecorder.DoGetAllExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoGetAllExpectationsForProxyObject">
            <summary>Sets the stub of UnorderedMethodRecorder.DoGetAllExpectationsForProxy(Object proxy)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoGetRecordedExpectation(Castle.Core.Interceptor.IInvocation,System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of UnorderedMethodRecorder.DoGetRecordedExpectation(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoGetRecordedExpectationIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the stub of UnorderedMethodRecorder.DoGetRecordedExpectation(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoGetRecordedExpectationOrNull(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of UnorderedMethodRecorder.DoGetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoGetRecordedExpectationOrNullObjectMethodInfoObjectArray">
            <summary>Sets the stub of UnorderedMethodRecorder.DoGetRecordedExpectationOrNull(Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoHasExpectationsGet">
            <summary>Sets the stub of UnorderedMethodRecorder.get_DoHasExpectations()</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoRecord(System.Object,System.Reflection.MethodInfo,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of UnorderedMethodRecorder.DoRecord(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoRecordObjectMethodInfoIExpectation">
            <summary>Sets the stub of UnorderedMethodRecorder.DoRecord(Object proxy, MethodInfo method, IExpectation expectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoRemoveExpectation(Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of UnorderedMethodRecorder.DoRemoveExpectation(IExpectation expectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoRemoveExpectationIExpectation">
            <summary>Sets the stub of UnorderedMethodRecorder.DoRemoveExpectation(IExpectation expectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoReplaceExpectation(System.Object,System.Reflection.MethodInfo,Rhino.Mocks.Interfaces.IExpectation,Rhino.Mocks.Interfaces.IExpectation)">
            <summary>Sets the stub of UnorderedMethodRecorder.DoReplaceExpectation(Object proxy, MethodInfo method, IExpectation oldExpectation, IExpectation newExpectation)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoReplaceExpectationObjectMethodInfoIExpectationIExpectation">
            <summary>Sets the stub of UnorderedMethodRecorder.DoReplaceExpectation(Object proxy, MethodInfo method, IExpectation oldExpectation, IExpectation newExpectation)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.GetAllExpectationsForProxyAndMethod(System.Object,System.Reflection.MethodInfo)">
            <summary>Sets the stub of UnorderedMethodRecorder.GetAllExpectationsForProxyAndMethod(Object proxy, MethodInfo method)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.GetAllExpectationsForProxyAndMethodObjectMethodInfo">
            <summary>Sets the stub of UnorderedMethodRecorder.GetAllExpectationsForProxyAndMethod(Object proxy, MethodInfo method)</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.GetExpectedCallsMessage">
            <summary>Sets the stub of UnorderedMethodRecorder.GetExpectedCallsMessage()</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.GetExpectedCallsMessage01">
            <summary>Sets the stub of UnorderedMethodRecorder.GetExpectedCallsMessage()</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.InitializeStub">
            <summary>Initializes a new instance of type StubUnorderedMethodRecorder</summary>
        </member>
        <member name="M:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.UnexpectedMethodCall(Castle.Core.Interceptor.IInvocation,System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>Sets the stub of UnorderedMethodRecorder.UnexpectedMethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="F:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.UnexpectedMethodCallIInvocationObjectMethodInfoObjectArray">
            <summary>Sets the stub of UnorderedMethodRecorder.UnexpectedMethodCall(IInvocation invocation, Object proxy, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.DoHasExpectations">
            <summary>Sets the stub of UnorderedMethodRecorder.get_DoHasExpectations()</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.MethodRecorders.Fakes.StubUnorderedMethodRecorder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Rhino.Mocks.Utilities.Fakes.ShimGenericsUtil">
            <summary>Shim type of Rhino.Mocks.Utilities.GenericsUtil</summary>
        </member>
        <member name="M:Rhino.Mocks.Utilities.Fakes.ShimGenericsUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Utilities.Fakes.ShimGenericsUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Utilities.Fakes.ShimGenericsUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimGenericsUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimGenericsUtil.CreateTypesTableFromInvocationIInvocation">
            <summary>Sets the shim of GenericsUtil.CreateTypesTableFromInvocation(IInvocation invocation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimGenericsUtil.GetRealTypeTypeIInvocation">
            <summary>Sets the shim of GenericsUtil.GetRealType(Type type, IInvocation invocation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimGenericsUtil.GetTypeWithGenericArgumentsForMethodParametersIInvocation">
            <summary>Sets the shim of GenericsUtil.GetTypeWithGenericArgumentsForMethodParameters(IInvocation invocation)</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimGenericsUtil.HasOpenGenericParamType">
            <summary>Sets the shim of GenericsUtil.HasOpenGenericParam(Type returnType)</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimGenericsUtil.ReconstructGenericTypeTypeDictionaryOfStringType">
            <summary>Sets the shim of GenericsUtil.ReconstructGenericType(Type type, Dictionary`2&lt;String,Type&gt; nameToType)</summary>
        </member>
        <member name="T:Rhino.Mocks.Utilities.Fakes.ShimMethodCallUtil">
            <summary>Shim type of Rhino.Mocks.Utilities.MethodCallUtil</summary>
        </member>
        <member name="M:Rhino.Mocks.Utilities.Fakes.ShimMethodCallUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Utilities.Fakes.ShimMethodCallUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Utilities.Fakes.ShimMethodCallUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimMethodCallUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimMethodCallUtil.DefaultFormatArgumentArrayInt32">
            <summary>Sets the shim of MethodCallUtil.DefaultFormatArgument(Array args, Int32 i)</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimMethodCallUtil.MockingSafeToStringObject">
            <summary>Sets the shim of MethodCallUtil.MockingSafeToString(Object arg)</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimMethodCallUtil.StringPresentationIInvocationMethodCallUtilFormatArgumnetMethodInfoObjectArray">
            <summary>Sets the shim of MethodCallUtil.StringPresentation(IInvocation invocation, FormatArgumnet format, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimMethodCallUtil.StringPresentationIInvocationMethodInfoObjectArray">
            <summary>Sets the shim of MethodCallUtil.StringPresentation(IInvocation invocation, MethodInfo method, Object[] args)</summary>
        </member>
        <member name="T:Rhino.Mocks.Utilities.Fakes.ShimReturnValueUtil">
            <summary>Shim type of Rhino.Mocks.Utilities.ReturnValueUtil</summary>
        </member>
        <member name="M:Rhino.Mocks.Utilities.Fakes.ShimReturnValueUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Utilities.Fakes.ShimReturnValueUtil.#ctor(Rhino.Mocks.Utilities.ReturnValueUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Utilities.Fakes.ShimReturnValueUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Rhino.Mocks.Utilities.Fakes.ShimReturnValueUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimReturnValueUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimReturnValueUtil.Constructor">
            <summary>Sets the shim of ReturnValueUtil.ReturnValueUtil()</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.ShimReturnValueUtil.DefaultValueTypeIInvocation">
            <summary>Sets the shim of ReturnValueUtil.DefaultValue(Type type, IInvocation invocation)</summary>
        </member>
        <member name="T:Rhino.Mocks.Utilities.Fakes.ShimReturnValueUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Rhino.Mocks.Utilities.Fakes.StubReturnValueUtil">
            <summary>Stub type of Rhino.Mocks.Utilities.ReturnValueUtil</summary>
        </member>
        <member name="M:Rhino.Mocks.Utilities.Fakes.StubReturnValueUtil.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Rhino.Mocks.Utilities.Fakes.StubReturnValueUtil.InitializeStub">
            <summary>Initializes a new instance of type StubReturnValueUtil</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.StubReturnValueUtil.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.StubReturnValueUtil.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Rhino.Mocks.Utilities.Fakes.StubReturnValueUtil.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
